cscope 15 $HOME/Documents/atpg/pkg -q 0000006958 0001074183
	@atpg/src/atpg_cmd.cpp

8 
	~<c°dlib
>

9 
	~<iom™ù
>

10 
	~<f°ªam
>

12 
	~"©pg_cmd.h
"

13 
	~"c‹e/∑âîn_rw.h
"

14 
	~"c‹e/simuœt‹.h
"

16 
usög
 
«me•a˚
 
	g°d
;

17 
usög
 
«me•a˚
 
	gComm⁄Ns
;

18 
usög
 
«me•a˚
 
	gI¡fNs
;

19 
usög
 
«me•a˚
 
	gC‹eNs
;

20 
usög
 
«me•a˚
 
	gF™Ns
;

22 
	gπime
;

25 
	gRódP©Cmd
::
RódP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
Ë: 
	$Cmd
(
«me
) {

26 
ÁnMgr_
 = 
ÁnMgr
;

27 
›tMgr_
.
	`£tName
(
«me
);

28 
›tMgr_
.
	`£tSh‹tDes
("readÖatterns");

29 
›tMgr_
.
	`£tDes
("readÖattern form FILE");

30 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "pattern file", "FILE"));

31 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

32 
›t
->
	`addFœg
("h");

33 
›t
->
	`addFœg
("help");

34 
›tMgr_
.
	`ªgO±
(
›t
);

35 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "verbose on. Default is off", "");

36 
›t
->
	`addFœg
("v");

37 
›t
->
	`addFœg
("verbose");

38 
›tMgr_
.
	`ªgO±
(
›t
);

39 
	}
}

40 
	gRódP©Cmd
::~
	$RódP©Cmd
(Ë{
	}
}

43 
boﬁ
 
RódP©Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

44 
›tMgr_
.
∑r£
(
¨gv
);

46 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

47 
	g›tMgr_
.
ußge
();

48  
	gåue
;

51 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

52 
	g˚º
 << "**ERROR ReadPatCmd::exec(): circuitÇeeded";

53 
	g˚º
 << 
	gídl
;

54  
	gÁl£
;

57 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

58 
	g˚º
 << "**ERROR ReadPatCmd::exec():Öattern fileÇeeded";

59 
	g˚º
 << 
	gídl
;

60  
	gÁl£
;

64 
dñëe
 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
;

65 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

66 
P©Fûe
 *
	g∑tBldî
 = 
√w
 
P©ã∫Ródî
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
, f™Mgr_->©pg_mgr->
cú_
);

69 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

70 
	gcout
 << "# RódögÖ©ã∫ ..." << 
	gídl
;

71 
boﬁ
 
	gvîbo£
 = 
›tMgr_
.
isFœgSë
("v");

72 i‡(!
	g∑tBldî
->
ªad
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
(), 
vîbo£
)) {

73 
	g˚º
 << "**ERROR RódP©Cmd()::exec():Ö©ã∫ buûdîÉº‹" << 
	gídl
;

74 
dñëe
 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
;

75 
dñëe
 
	g∑tBldî
;

76 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
NULL
;

77  
	gÁl£
;

80 
TmSèt
 
	g°©
;

81 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
);

82 
	gcout
 << "# FöishedÑódögÖ©ã∫ `" << 
	g›tMgr_
.
gëP¨£dArg
(0) << "'";

83 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

84 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

86 
dñëe
 
	g∑tBldî
;

87  
	gåue
;

91 
	gRï‹tP©Cmd
::
Rï‹tP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

92 
	$Cmd
(
«me
) {

93 
ÁnMgr_
 = 
ÁnMgr
;

94 
›tMgr_
.
	`£tName
(
«me
);

95 
›tMgr_
.
	`£tSh‹tDes
("reportÖattern");

96 
›tMgr_
.
	`£tDes
("reportÖattern information");

97 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
REQ_INF
, "patternÇumberÅo beÑeported", "NUM");

98 
›tMgr_
.
	`ªgArg
(
¨g
);

99 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

100 
›t
->
	`addFœg
("h");

101 
›t
->
	`addFœg
("help");

102 
›tMgr_
.
	`ªgO±
(
›t
);

103 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "don'tÖrint order information", "");

104 
›t
->
	`addFœg
("disable-order");

105 
›tMgr_
.
	`ªgO±
(
›t
);

106 
	}
}

107 
	gRï‹tP©Cmd
::~
	$Rï‹tP©Cmd
(Ë{
	}
}

110 
boﬁ
 
Rï‹tP©Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

111 
›tMgr_
.
∑r£
(
¨gv
);

113 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

114 
	g›tMgr_
.
ußge
();

115  
	gåue
;

118 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
) {

119 
	g˚º
 << "**ERROR Rï‹tP©Cmd::exec():Ö©ã∫Çìded" << 
	gídl
;

120  
	gÁl£
;

123 
	gcout
 << "#Ö©ã∫ inf‹m©i⁄" << 
	gídl
;

124 
	gcout
 << "#Çumbî o‡∑âîn: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
.
size
(Ë<< 
	gídl
;

125 i‡(!
	g›tMgr_
.
isFœgSë
("disable-order")) {

126 
	gcout
 << "#Öi order: ";

127 
	gi
 = 0; i < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈i_
; ++i)

128 
	gcout
 << " " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gpiOrdî_
[
i
];

129 
	gcout
 << 
	gídl
;

130 
	gcout
 << "#Öpi order:";

131 
	gi
 = 0; i < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈pi_
; ++i)

132 
	gcout
 << " " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gµiOrdî_
[
i
];

133 
	gcout
 << 
	gídl
;

134 
	gcout
 << "#Öo order: ";

135 
	gi
 = 0; i < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈o_
; ++i)

136 
	gcout
 << " " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gpoOrdî_
[
i
];

137 
	gcout
 << 
	gídl
;

139 
	gcout
 << "#" << 
	gídl
;

141 
	gi
 = 0; i < ()
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
.
size
(); ++i) {

142 
	gcout
 << "#Ö©ã∫ " << 
	gi
 << 
	gídl
;

143 
	gcout
 << "#Öi1: ";

144 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gpi1_
)

145 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈i_
; ++j)

146 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
]);

147 
	gcout
 << 
	gídl
;

148 
	gcout
 << "#Öi2: ";

149 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gpi2_
)

150 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈i_
; ++j)

151 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
]);

152 
	gcout
 << 
	gídl
;

153 
	gcout
 << "#Öpi: ";

154 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gµi_
)

155 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈pi_
; ++j)

156 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
]);

157 
	gcout
 << 
	gídl
;

158 
	gcout
 << "#Öo1: ";

159 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gpo1_
)

160 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈o_
; ++j)

161 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
]);

162 
	gcout
 << 
	gídl
;

163 
	gcout
 << "#Öo2: ";

164 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gpo2_
)

165 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈o_
; ++j)

166 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
]);

167 
	gcout
 << 
	gídl
;

168 
	gcout
 << "#Öpo: ";

169 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g∑ts_
[
i
]->
	gµo_
)

170 
	gj
 = 0; j < 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g≈pi_
; ++j)

171 
¥ötVÆue
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
]);

172 
	gcout
 << 
	gídl
 << "#" <<Éndl;

175  
	gåue
;

179 
	gAddFau…Cmd
::
AddFau…Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

180 
	$Cmd
(
«me
) {

181 
ÁnMgr_
 = 
ÁnMgr
;

182 
›tMgr_
.
	`£tName
(
«me
);

183 
›tMgr_
.
	`£tSh‹tDes
("add faults");

184 
›tMgr_
.
	`£tDes
("adds faultsÉither byÉxtract from circuit or from file");

185 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
OPT
, "faultÅype. Can be SA0, SA1, STR, STF",

187 
›tMgr_
.
	`ªgArg
(
¨g
);

188 
¨g
 = 
√w
 
	`Arg
(
Arg
::
OPT
, "pinÜocation. Hierachy separated by '/'",

190 
›tMgr_
.
	`ªgArg
(
¨g
);

191 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

192 
›t
->
	`addFœg
("h");

193 
›t
->
	`addFœg
("help");

194 
›tMgr_
.
	`ªgO±
(
›t
);

195 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "custom fault file", "FILE");

196 
›t
->
	`addFœg
("f");

197 
›t
->
	`addFœg
("file");

198 
›tMgr_
.
	`ªgO±
(
›t
);

199 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "addáll faults", "");

200 
›t
->
	`addFœg
("a");

201 
›t
->
	`addFœg
("all");

202 
›tMgr_
.
	`ªgO±
(
›t
);

203 
	}
}

204 
	gAddFau…Cmd
::~
	$AddFau…Cmd
(Ë{
	}
}

207 
boﬁ
 
AddFau…Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

208 
›tMgr_
.
∑r£
(
¨gv
);

210 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

211 
	g›tMgr_
.
ußge
();

212  
	gåue
;

215 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

216 
	g˚º
 << "**ERROR AddFaultCmd::exec(): circuitÇeeded";

217 
	g˚º
 << 
	gídl
;

218  
	gÁl£
;

221 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

222 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

224 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
)

225 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
 = 
√w
 
Fau…Li°Exåa˘
;

227 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
exåa˘
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

230 i‡(
	g›tMgr_
.
isFœgSë
("a"))

231 
addAŒFau…
();

233 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
 =
Fau…Li°Exåa˘
::
SAF


234 || 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
ty≥_
 =
Fau…Li°Exåa˘
::
TDF
) {

235 i‡(
›tMgr_
.
gëNP¨£dArg
() < 2) {

236 
˚º
 << "**ERROR AddFaultCmd::exec():Çeed faultÅype ";

237 
	g˚º
 << "™dÖöÜoˇti⁄" << 
	gídl
;

238  
	gÁl£
;

240 
°rög
 
	gty≥
 = 
›tMgr_
.
gëP¨£dArg
(0);

241 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
 =
Fau…Li°Exåa˘
::
SAF
 &&

242 (
ty≥
 != "SA0" &&Åype != "SA1")) {

243 
˚º
 << "**ERROR AddFaultCmd::exec(): stuck-at fault only ";

244 
	g˚º
 << "suµ‹t†SA0ánd SA1" << 
	gídl
;

245  
	gÁl£
;

247 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
 =
Fau…Li°Exåa˘
::
TDF
 &&

248 (
ty≥
 != "STR" &&Åype != "STF")) {

249 
˚º
 << "**ERROR AddFaultCmd::exec():Åransition delay ";

250 
	g˚º
 << "Áu… o∆y suµ‹t†STRánd STF" << 
	gídl
;

251  
	gÁl£
;

253 
°rög
 
	gpöloc
 = 
›tMgr_
.
gëP¨£dArg
(1);

254 
°rög
 
	g˚Œ
 = 
pöloc
.
sub°r
(0,Ööloc.
föd_fú°_of
('/'));

255 
°rög
 
	gpö
 = 
pöloc
.
sub°r
(
˚Œ
.
size
());

256 i‡(
	gpö
.
size
() > 0)

257 
	gpö
 = 
pö
.
sub°r
(1);

258 i‡(
	gpö
.
size
() == 0) {

259 i‡(!
addPöFau…
(
ty≥
, 
˚Œ
))

260  
Ál£
;

263 i‡(!
addCñlFau…
(
ty≥
, 
˚Œ
, 
pö
))

264  
	gÁl£
;

269  
	gåue
;

272 
	gAddFau…Cmd
::
	$addAŒFau…
() {

273 
cout
 << "# Buûdög fau…Üi° ..." << 
ídl
;

274 
ÁnMgr_
->
tmusg
.
	`≥riodSèπ
();

276 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
	`ªsize
(ÁnMgr_->©pg_mgr->fLi°Exåa˘_->
Áu…s_
.
	`size
());

277 
Fau…Li°Iãr
 
ô
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
	`begö
();

278 
size_t
 
i
 = 0; i < 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
Áu…s_
.
	`size
(); ++i, ++
ô
)

279 (*
ô
Ë
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
Áu…s_
[
i
];

281 
TmSèt
 
°©
;

282 
ÁnMgr_
->
tmusg
.
	`gëPîiodUßge
(
°©
);

283 
cout
 << "# Finished building faultÜist";

284 
cout
 << " " << ()
°©
.
rTime
 / 1000000.0 << " s";

285 
cout
 << " " << ()
°©
.
vmSize
 / 1024.0 << " MB" << 
ídl
;

286 
	}
}

288 
boﬁ
 
	gAddFau…Cmd
::
	$addPöFau…
(c⁄° 
°rög
 &
ty≥
, c⁄° såög &
pö
) {

289 
P‹t
 *
p
 = 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëP‹t
(
pö
.
	`c_°r
());

290 i‡(!
p
) {

291 
˚º
 << "**ERROR AddFaultCmd::exec():Öort `";

292 
˚º
 << 
pö
 << "' d€†nŸÉxi°" << 
ídl
;

293  
Ál£
;

295 
gid
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
p‹tToG©e_
[
p
->
id_
];

296 
off£t
 = (
ty≥
 == "SA0" ||Åype == "STR") ? 0 : 1;

297 
fid
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
g©eToFau…_
[
gid
] + 
off£t
;

298 
Fau…
 *
f
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
Áu…s_
[
fid
];

299 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
	`push_back
(
f
);

300  
åue
;

301 
	}
}

303 
boﬁ
 
	gAddFau…Cmd
::
	$addCñlFau…
(c⁄° 
°rög
 &
ty≥
, c⁄° såög &
˚Œ
,

304 c⁄° 
°rög
 &
pö
) {

305 
Cñl
 *
c
 = 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëCñl
(
˚Œ
.
	`c_°r
());

306 i‡(!
c
) {

307 
˚º
 << "**ERROR AddFaultCmd::exec(): cell `";

308 
˚º
 << 
˚Œ
 << "' d€†nŸÉxi°" << 
ídl
;

309  
Ál£
;

311 
Cñl
 *
libc
 = 
c
->
libc_
;

312 
P‹t
 *
p
 = 
libc
->
	`gëP‹t
(
pö
.
	`c_°r
());

313 i‡(!
p
) {

314 
˚º
 << "**ERROR AddFaultCmd::exec():Öort `";

315 
˚º
 << 
˚Œ
 << "/" << 
pö
 << "' d€†nŸÉxi°" << 
ídl
;

316  
Ál£
;

318 
P‹tSë
 
p£t
 = 
libc
->
	`gëNëP‹ts
(
p
->
öNë_
->
id_
);

319 
P‹tSë
::
ôî©‹
 
ô
 = 
p£t
.
	`begö
();

320  ; 
ô
 !
p£t
.
	`íd
(); ++it) {

321 i‡((*
ô
)->
t›_
 =
libc
)

323 
Cñl
 *
pmt
 = (*
ô
)->
t›_
;

324 
pmtid
 = 
pmt
->
id_
;

325 
gid
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
˚ŒToG©e_
[
c
->
id_
] + 
pmtid
;

326 
pid
 = 0;

327 i‡((*
ô
)->
ty≥_
 =
P‹t
::
INPUT
) {

328 
nOuçut
 = 0;

329 
i
 = 0; i < (*
ô
)->
id_
; ++i)

330 i‡(
pmt
->
	`gëP‹t
(
i
)->
ty≥_
 =
P‹t
::
OUTPUT
)

331 
nOuçut
++;

332 
pid
 = (*
ô
)->
id_
 - 
nOuçut
 + 1;

334 
off£t
 = (
ty≥
 == "SA0" ||Åype == "STR") ? 0 : 1;

335 
fid
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
g©eToFau…_
[
gid
] + 2 * 
pid
 + 
off£t
;

336 
Fau…
 *
f
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
Áu…s_
[
fid
];

337 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
	`push_back
(
f
);

339  
åue
;

340 
	}
}

343 
	gRï‹tFau…Cmd
::
Rï‹tFau…Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

344 
	$Cmd
(
«me
) {

345 
ÁnMgr_
 = 
ÁnMgr
;

346 
›tMgr_
.
	`£tName
(
«me
);

347 
›tMgr_
.
	`£tSh‹tDes
("report fault");

348 
›tMgr_
.
	`£tDes
("report fault information");

349 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

350 
›t
->
	`addFœg
("h");

351 
›t
->
	`addFœg
("help");

352 
›tMgr_
.
	`ªgO±
(
›t
);

353 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "print only faults with state STATE",

355 
›t
->
	`addFœg
("s");

356 
›t
->
	`addFœg
("state");

357 
›tMgr_
.
	`ªgO±
(
›t
);

358 
	}
}

359 
	gRï‹tFau…Cmd
::~
	$Rï‹tFau…Cmd
(Ë{
	}
}

362 
boﬁ
 
Rï‹tFau…Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

363 
›tMgr_
.
∑r£
(
¨gv
);

365 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

366 
	g›tMgr_
.
ußge
();

367  
	gåue
;

370 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
) {

371 
	g˚º
 << "**ERROR Rï‹tFau…Cmd::exec(): fau…Üi°Çìded" << 
	gídl
;

372  
	gÁl£
;

375 
boﬁ
 
	g°©eSë
 = 
Ál£
;

376 
	gFau…
::
Sèã
 
°©e
 = 
Fau…
::
UD
;

377 i‡(
	g›tMgr_
.
isFœgSë
("s")) {

378 
	g°©eSë
 = 
åue
;

379 
°rög
 
	g°©eSå
 = 
›tMgr_
.
gëFœgV¨
("s");

380 i‡(
	g°©eSå
 ="ud" || 
°©eSå
 == "UD")

381 
°©e
 = 
Fau…
::
UD
;

382 i‡(
	g°©eSå
 ="dt" || 
°©eSå
 == "DT")

383 
°©e
 = 
Fau…
::
DT
;

384 i‡(
	g°©eSå
 ="au" || 
°©eSå
 == "AU")

385 
°©e
 = 
Fau…
::
AU
;

386 i‡(
	g°©eSå
 ="ti" || 
°©eSå
 == "TI")

387 
°©e
 = 
Fau…
::
TI
;

388 i‡(
	g°©eSå
 ="ª" || 
°©eSå
 == "RE")

389 
°©e
 = 
Fau…
::
RE
;

390 i‡(
	g°©eSå
 ="ab" || 
°©eSå
 == "AB")

391 
°©e
 = 
Fau…
::
AB
;

393 
	g°©eSë
 = 
åue
;

394 
	g˚º
 << "**WARN ReportFaultCmd::exec(): fault state `";

395 
	g˚º
 << 
	g°©eSå
 << "' i†nŸ suµ‹ãd" << 
	gídl
;

399 
	gcout
 << "# fau… inf‹m©i⁄" << 
	gídl
;

400 
	gcout
 << "# faultÅype: ";

401 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
) {

402 
	gFau…Li°Exåa˘
::
SAF
:

403 
cout
 << "°uck-© fau…" << 
ídl
;

405 
	gFau…Li°Exåa˘
::
TDF
:

406 
cout
 << "å™sôi⁄ dñay fau…" << 
ídl
;

408 
	gFau…Li°Exåa˘
::
BRF
:

409 
cout
 << "bridgög fau…" << 
ídl
;

412 
cout
 << 
ídl
;

415 
	gcout
 << "#Çumbî o‡Áu…s: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gcuºít_
.
size
();

416 
	gcout
 << 
	gídl
;

417 
	gcout
 << "#Åy≥ codêÖö (˚Œ)" << 
	gídl
;

418 
	gcout
 << "# ---- ---- ----------------------------------" << 
	gídl
;

419 
Fau…Li°Iãr
 
	gô
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
begö
();

420  ; 
	gô
 !
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
íd
(); ++it) {

421 i‡(!
	g°©eSë
 || (*
	gô
)->
	g°©e_
 !
°©e
)

423 
	gcout
 << "# ";

424 (*
	gô
)->
	gty≥_
) {

425 
	gFau…
::
SA0
:

426 
cout
 << "SA0 ";

428 
	gFau…
::
SA1
:

429 
cout
 << "SA1 ";

431 
	gFau…
::
STR
:

432 
cout
 << "STR ";

434 
	gFau…
::
STF
:

435 
cout
 << "STF ";

437 
	gFau…
::
BR
:

438 
cout
 << "BR ";

441 (*
	gô
)->
	g°©e_
) {

442 
	gFau…
::
UD
:

443 
cout
 << " UD ";

445 
	gFau…
::
DT
:

446 
cout
 << " DT ";

448 
	gFau…
::
PT
:

449 
cout
 << " PT ";

451 
	gFau…
::
AU
:

452 
cout
 << " AU ";

454 
	gFau…
::
TI
:

455 
cout
 << " TI ";

457 
	gFau…
::
RE
:

458 
cout
 << " RE ";

460 
	gFau…
::
AB
:

461 
cout
 << " AB ";

464 
	gcid
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
g©es_
[(*
ô
)->
g©e_
].
cid_
;

465 
	gpid
 = (*
ô
)->
löe_
;

466 
	gpmtid
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
g©es_
[(*
ô
)->
g©e_
].
pmtid_
;

467 i‡((*
	gô
)->
	gg©e_
 == -1) {

468 
cout
 << "CK";

470 i‡((*
	gô
)->
	gg©e_
 == -2) {

471 
cout
 << "test_si";

473 i‡((*
	gô
)->
	gg©e_
 == -3) {

474 
cout
 << "test_so";

476 i‡((*
	gô
)->
	gg©e_
 == -4) {

477 
cout
 << "test_se";

479 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[(*
ô
)->
g©e_
].
	gty≥_
 =
G©e
::
PI
) {

480 
cout
 << 
ÁnMgr_
->
∆
->
gëT›
()->
gëP‹t
(
cid
)->
«me_
 << " ";

481 
	gcout
 << "(primary input)";

483 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[(*
ô
)->
g©e_
].
	gty≥_
 =
G©e
::
PO
) {

484 
cout
 << 
ÁnMgr_
->
∆
->
gëT›
()->
gëP‹t
(
cid
)->
«me_
 << " ";

485 
	gcout
 << "(primary output)";

488 
Cñl
 *
	gc
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëCñl
(
cid
);

490 
Cñl
 *
	glibc
 = 
c
->
libc_
;

491 
Cñl
 *
	gpmt
 = 
libc
->
gëCñl
(
pmtid
);

492 
P‹t
 *
	gp
 = 
NULL
;

493 i‡(
	gpid
 < 0) {

494 i‡(
	gpid
 == -1)

495 
cout
 << 
c
->
«me_
 << "/CK ";

496 i‡(
	gpid
 == -2)

497 
cout
 << 
c
->
«me_
 << "/SE ";

498 i‡(
	gpid
 == -3)

499 
cout
 << 
c
->
«me_
 << "/SI ";

501 
	gcout
 << 
	gc
->
	g«me_
 << "/QN ";

503 i‡(
	gpid
 == 0) {

504 i‡(!
°rcmp
(
libc
->
«me_
,"SDFFXL"))

505 
cout
 << 
c
->
«me_
 << "/" << "Q" << " ";

507 
size_t
 
	gi
 = 0; i < 
	gpmt
->
gëNP‹t
(); ++i) {

508 i‡(
	gpmt
->
gëP‹t
(
i
)->
	gty≥_
 !
P‹t
::
OUTPUT
)

510 
Në
 *
	gn
 = 
pmt
->
gëP‹t
(
i
)->
exNë_
;

511 i‡(!
	gn
)

513 
P‹tSë
 
	gp£t
 = 
libc
->
gëNëP‹ts
(
n
->
id_
);

514 
	gP‹tSë
::
ôî©‹
 
pô
 = 
p£t
.
begö
();

515  ; 
	gpô
 !
p£t
.
íd
(); ++pit) {

516 i‡((*
	gpô
)->
	gt›_
 !
libc
)

518 
	gp
 = (*
pô
);

521 i‡(
	gp
)

527 
	göCou¡
 = 0;

528 
size_t
 
	gi
 = 0; i < 
	gpmt
->
gëNP‹t
(); ++i) {

529 i‡(
	gpmt
->
gëP‹t
(
i
)->
	gty≥_
 =
P‹t
::
INPUT
)

530 
öCou¡
++;

531 i‡(
	göCou¡
 !
pid
)

533 
Në
 *
	gn
 = 
pmt
->
gëP‹t
(
i
)->
exNë_
;

534 i‡(!
	gn
)

536 
P‹tSë
 
	gp£t
 = 
libc
->
gëNëP‹ts
(
n
->
id_
);

537 
	gP‹tSë
::
ôî©‹
 
pô
 = 
p£t
.
begö
();

538  ; 
	gpô
 !
p£t
.
íd
(); ++pit) {

539 i‡((*
	gpô
)->
	gt›_
 !
libc
)

541 
	gp
 = (*
pô
);

544 i‡(
	gp
)

548 i‡(
	gp
)

549 
	gcout
 << 
	gc
->
	g«me_
 << "/" << 
	gp
->name_ << " ";

550 
	gcout
 << "(" << 
	glibc
->
	g«me_
 << ")";

552 
	gcout
 << 
	gídl
;

554 
	gcout
 << 
	gídl
;

556  
	gåue
;

560 
	gRï‹tCúcuôCmd
::
Rï‹tCúcuôCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

561 
	$Cmd
(
«me
) {

562 
ÁnMgr_
 = 
ÁnMgr
;

563 
›tMgr_
.
	`£tName
(
«me
);

564 
›tMgr_
.
	`£tSh‹tDes
("report circuit");

565 
›tMgr_
.
	`£tDes
("report circuit information");

566 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

567 
›t
->
	`addFœg
("h");

568 
›t
->
	`addFœg
("help");

569 
›tMgr_
.
	`ªgO±
(
›t
);

570 
	}
}

571 
	gRï‹tCúcuôCmd
::~
	$Rï‹tCúcuôCmd
(Ë{
	}
}

574 
boﬁ
 
Rï‹tCúcuôCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

575 
›tMgr_
.
∑r£
(
¨gv
);

577 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

578 
	g›tMgr_
.
ußge
();

579  
	gåue
;

582 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

583 
	g˚º
 << "**ERROR Rï‹tCúcuôCmd::exec(): cúcuôÇìded" << 
	gídl
;

584  
	gÁl£
;

587 
Cñl
 *
	gt›
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
∆_
->
gëT›
();

588 
	gcout
 << "# cúcuô inf‹m©i⁄" << 
	gídl
;

589 
	gcout
 << "#Çëli°: " << 
	gt›
->
	g«me_
 << 
	gídl
;

590 
	gcout
 << "#Çumbî o‡PIs: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	g≈i_
 << 
	gídl
;

591 
	gcout
 << "#Çumbî o‡PPIs: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	g≈pi_
 << 
	gídl
;

592 
	gcout
 << "#Çumbî o‡POs: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	g≈o_
 << 
	gídl
;

593 
	gcout
 << "#Çumbî o‡combs: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gncomb_
 << 
	gídl
;

594 
	gcout
 << "#Çumbî o‡g©es: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gng©e_
 << 
	gídl
;

595 
	gcout
 << "#Çumbî o‡√ts: " << 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	g¬ë_
 << 
	gídl
;

597  
	gåue
;

601 
	gRï‹tG©eCmd
::
Rï‹tG©eCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

602 
	$Cmd
(
«me
) {

603 
ÁnMgr_
 = 
ÁnMgr
;

604 
›tMgr_
.
	`£tName
(
«me
);

605 
›tMgr_
.
	`£tSh‹tDes
("report gate information");

606 
›tMgr_
.
	`£tDes
("reports GATE information inÅhe circuit");

607 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
OPT_INF
,

610 
›tMgr_
.
	`ªgArg
(
¨g
);

611 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

612 
›t
->
	`addFœg
("h");

613 
›t
->
	`addFœg
("help");

614 
›tMgr_
.
	`ªgO±
(
›t
);

615 
	}
}

616 
	gRï‹tG©eCmd
::~
	$Rï‹tG©eCmd
(Ë{
	}
}

619 
boﬁ
 
Rï‹tG©eCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

620 
›tMgr_
.
∑r£
(
¨gv
);

622 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

623 
	g›tMgr_
.
ußge
();

624  
	gåue
;

627 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

628 
	g˚º
 << "**ERROR Rï‹tG©eCmd::exec(): cúcuôÇìded" << 
	gídl
;

629  
	gÁl£
;

632 i‡(
	g›tMgr_
.
gëNP¨£dArg
() == 0) {

633 
i
 = 0; 
	gi
 < 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
ng©e_
 * f™Mgr_->©pg_mgr->cú_->
	gn‰ame_
; ++i)

634 
ªp‹tG©e
(
i
);

637 
size_t
 
	gi
 = 0; i < 
	g›tMgr_
.
gëNP¨£dArg
(); ++i) {

638 
°rög
 
	g«me
 = 
›tMgr_
.
gëP¨£dArg
(
i
);

639 
Cñl
 *
	gc
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëCñl
(
«me
.
c_°r
());

640 i‡(
	gc
)

641 
size_t
 
	gj
 = 0; j < 
	gc
->
	glibc_
->
gëNCñl
(); ++j)

642 
ªp‹tG©e
(
ÁnMgr_
->
©pg_mgr
->
cú_
->
˚ŒToG©e_
[
c
->
id_
] + 
j
);

643 
P‹t
 *
	gp
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëP‹t
(
«me
.
c_°r
());

644 i‡(
	gp
)

645 
ªp‹tG©e
(
ÁnMgr_
->
©pg_mgr
->
cú_
->
p‹tToG©e_
[
p
->
id_
]);

646 i‡(!
	gc
 && !
	gp
) {

647 
	g˚º
 << "**ERROR ReportGateCmd::exec(): cell orÖort `";

648 
	g˚º
 << 
	g«me
 << "' d€†nŸÉxi°" << 
	gídl
;

653  
	gåue
;

656 
	gRï‹tG©eCmd
::
	$ªp‹tG©e
(c⁄° &
i
) const {

657 
G©e
 *
g
 = &
ÁnMgr_
->
©pg_mgr
->
cú_
->
g©es_
[
i
];

658 
cout
 << "# ";

659 i‡(
g
->
ty≥_
 =
G©e
::
PI
 || g->ty≥_ =G©e::
PO
)

660 
cout
 << 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëP‹t
((
size_t
)
g
->
cid_
)->
«me_
;

662 
cout
 << 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëCñl
((
size_t
)
g
->
cid_
)->
«me_
;

663 
cout
 << " id(" << 
i
 << ") ";

664 
cout
 << "lvl(" << 
g
->
lvl_
 << ") ";

665 
cout
 << "ty≥(" << 
g
->
ty≥_
 << ") ";

666 
cout
 << "‰ame(" << 
g
->
‰ame_
 << ")";

667 
cout
 << 
ídl
;

668 
cout
 << "# fi[" << 
g
->
nfi_
 << "]";

669 
j
 = 0; j < 
g
->
nfi_
; ++j)

670 
cout
 << " " << 
g
->
fis_
[
j
];

671 
cout
 << 
ídl
;

672 
cout
 << "# fo[" << 
g
->
nfo_
 << "]";

673 
j
 = 0; j < 
g
->
nfo_
; ++j)

674 
cout
 << " " << 
g
->
fos_
[
j
];

675 
cout
 << 
ídl
 <<Éndl;

676 
	}
}

679 
	gRï‹tVÆueCmd
::
Rï‹tVÆueCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

680 
	$Cmd
(
«me
) {

681 
ÁnMgr_
 = 
ÁnMgr
;

682 
›tMgr_
.
	`£tName
(
«me
);

683 
›tMgr_
.
	`£tSh‹tDes
("report gate values");

684 
›tMgr_
.
	`£tDes
("reports GATE values inÅhe circuit");

685 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
OPT_INF
,

688 
›tMgr_
.
	`ªgArg
(
¨g
);

689 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

690 
›t
->
	`addFœg
("h");

691 
›t
->
	`addFœg
("help");

692 
›tMgr_
.
	`ªgO±
(
›t
);

693 
	}
}

694 
	gRï‹tVÆueCmd
::~
	$Rï‹tVÆueCmd
(Ë{
	}
}

697 
boﬁ
 
Rï‹tVÆueCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

698 
›tMgr_
.
∑r£
(
¨gv
);

700 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

701 
	g›tMgr_
.
ußge
();

702  
	gåue
;

705 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

706 
	g˚º
 << "**ERROR Rï‹tVÆueCmd::exec(): cúcuôÇìded" << 
	gídl
;

707  
	gÁl£
;

710 i‡(
	g›tMgr_
.
gëNP¨£dArg
() == 0) {

711 
i
 = 0; 
	gi
 < 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gtg©e_
; ++i)

712 
ªp‹tVÆue
(
i
);

715 
size_t
 
	gi
 = 0; i < 
	g›tMgr_
.
gëNP¨£dArg
(); ++i) {

716 
°rög
 
	g«me
 = 
›tMgr_
.
gëP¨£dArg
(
i
);

717 
Cñl
 *
	gc
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëCñl
(
«me
.
c_°r
());

718 i‡(
	gc
)

719 
size_t
 
	gj
 = 0; j < 
	gc
->
	glibc_
->
gëNCñl
(); ++j)

720 
ªp‹tVÆue
(
ÁnMgr_
->
©pg_mgr
->
cú_
->
˚ŒToG©e_
[
c
->
id_
] + 
j
);

721 
P‹t
 *
	gp
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëP‹t
(
«me
.
c_°r
());

722 i‡(
	gp
)

723 
ªp‹tVÆue
(
ÁnMgr_
->
©pg_mgr
->
cú_
->
p‹tToG©e_
[
p
->
id_
]);

724 i‡(!
	gc
 && !
	gp
) {

725 
	g˚º
 << "**ERROR ReportValueCmd::exec(): cell orÖort `";

726 
	g˚º
 << 
	g«me
 << "' d€†nŸÉxi°" << 
	gídl
;

731  
	gåue
;

734 
	gRï‹tVÆueCmd
::
	$ªp‹tVÆue
(c⁄° &
i
) const {

735 
G©e
 *
g
 = &
ÁnMgr_
->
©pg_mgr
->
cú_
->
g©es_
[
i
];

736 
cout
 << "# ";

737 i‡(
g
->
ty≥_
 =
G©e
::
PI
 || g->ty≥_ =G©e::
PO
)

738 
cout
 << 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëP‹t
((
size_t
)
g
->
cid_
)->
«me_
;

740 
cout
 << 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëCñl
((
size_t
)
g
->
cid_
)->
«me_
;

741 
cout
 << " id(" << 
i
 << ") ";

742 
cout
 << "lvl(" << 
g
->
lvl_
 << ") ";

743 
cout
 << "ty≥(" << 
g
->
ty≥_
 << ") ";

744 
cout
 << "‰ame(" << 
g
->
‰ame_
 << ")";

745 
cout
 << 
ídl
;

746 
cout
 << "# good: ";

747 
	`¥ötVÆue
(
g
->
gl_
, g->
gh_
);

748 
cout
 << 
ídl
;

749 
cout
 << "# faulty: ";

750 
	`¥ötVÆue
(
g
->
Ê_
, g->
fh_
);

751 
cout
 << 
ídl
 <<Éndl;

752 
	}
}

755 
	gRï‹tSètsCmd
::
Rï‹tSètsCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

756 
	$Cmd
(
«me
) {

757 
ÁnMgr_
 = 
ÁnMgr
;

758 
›tMgr_
.
	`£tName
(
«me
);

759 
›tMgr_
.
	`£tSh‹tDes
("report statistics");

760 
›tMgr_
.
	`£tDes
("reports statistics on fault coverage");

761 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

762 
›t
->
	`addFœg
("h");

763 
›t
->
	`addFœg
("help");

764 
›tMgr_
.
	`ªgO±
(
›t
);

765 
	}
}

766 
	gRï‹tSètsCmd
::~
	$Rï‹tSètsCmd
(Ë{
	}
}

769 
boﬁ
 
Rï‹tSètsCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

770 
›tMgr_
.
∑r£
(
¨gv
);

772 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

773 
	g›tMgr_
.
ußge
();

774  
	gåue
;

777 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
 || f™Mgr_->©pg_mgr->fLi°Exåa˘_->
	gcuºít_
.
size
() == 0) {

778 
˚º
 << "**WARN Rï‹tSètsCmd::exec():Çÿ°©i°ics" << 
ídl
;

779  
	gÁl£
;

783 
°rög
 
	g·y≥
 = "";

784 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
) {

785 
	gFau…Li°Exåa˘
::
SAF
:

786 
·y≥
 = "SAF";

788 
	gFau…Li°Exåa˘
::
TDF
:

789 
·y≥
 = "TDF";

791 
	gFau…Li°Exåa˘
::
BRF
:

792 
·y≥
 = "BRF";

797 
°rög
 
	g±y≥
 = "";

798 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gty≥_
) {

799 
	gP©ã∫Pro˚ss‹
::
BASIC_SCAN
:

800 
±y≥
 = "BASIC";

802 
	gP©ã∫Pro˚ss‹
::
LAUNCH_CAPTURE
:

803 
±y≥
 = "LOC";

805 
	gP©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
:

806 
±y≥
 = "LOS";

814 
size_t
 
	g≈©
 = 0;

816 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
)

817 
	g≈©
 = 
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
->
∑ts_
.
size
();

819 
size_t
 
	gfu
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
size
();

820 
size_t
 
	gud
 = 0;

821 
size_t
 
	gdt
 = 0;

822 
size_t
 
	g±
 = 0;

823 
size_t
 
	gau
 = 0;

824 
size_t
 
	gti
 = 0;

825 
size_t
 
	gª
 = 0;

826 
size_t
 
	gab
 = 0;

828 
Fau…Li°Iãr
 
	gô
 = 
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
begö
();

829  ; 
	gô
 !
ÁnMgr_
->
©pg_mgr
->
fLi°Exåa˘_
->
cuºít_
.
íd
(); ++it) {

830 (*
	gô
)->
	g°©e_
) {

831 
	gFau…
::
UD
:

833 
ud
++;

835 
	gFau…
::
DT
:

836 
dt
++;

838 
	gFau…
::
PT
:

839 
±
++;

841 
	gFau…
::
AU
:

843 
au
++;

845 
	gFau…
::
TI
:

846 
ti
++;

848 
	gFau…
::
RE
:

849 
ª
++;

851 
	gFau…
::
AB
:

852 
ab
++;

857 
	gfc
 = ()
dt
 / ()
fu
 * 100;

858 
	gtc
 = ()
dt
 / ()(
ud
 + dà+ 
±
 + 
ab
) * 100;

859 
	g´
 = ()(
dt
 + 
au
 + 
ti
 + 
ª
Ë/ ()
fu
 * 100;

861 
	gcout
 << 
	gright
;

862 
	gcout
 << 
£çªcisi⁄
(4);

863 
	gcout
 << "# Sèti°ic†Rï‹t" << 
	gídl
;

864 
	gcout
 << "# CúcuôÇamê " << 
£tw
(19);

865 
	gcout
 << 
	gÁnMgr_
->
	g∆
->
gëT›
()->
	g«me_
 << 
	gídl
;

866 
	gcout
 << "# Fau… modñ " << 
£tw
(19Ë<< 
	g·y≥
 << 
	gídl
;

867 
	gcout
 << "# P©ã∫Åy≥ " << 
£tw
(19Ë<< 
	g±y≥
 << 
	gídl
;

868 
	gcout
 << "# -------------------------------------------------" << 
	gídl
;

869 
	gcout
 << "# Fau… cœs£† #Áu…s" << 
	gídl
;

870 
	gcout
 << "# ---------------------------- -------------------" << 
	gídl
;

871 
	gcout
 << "# FU (fuŒË " << 
£tw
(19Ë<< 
	gfu
 << 
	gídl
;

872 
	gcout
 << "# -------------------------- -------------------" << 
	gídl
;

873 
	gcout
 << "# UD (undëe˘edË " << 
£tw
(19Ë<< 
	gud
 << 
	gídl
;

874 
	gcout
 << "# PT (possiblyÅe°abÀË " << 
£tw
(19Ë<< 
	g±
 << 
	gídl
;

875 
	gcout
 << "# AU (©pg u¡e°abÀË " << 
£tw
(19Ë<< 
	gau
 << 
	gídl
;

876 
	gcout
 << "# RE (ªdund™tË " << 
£tw
(19Ë<< 
	gª
 << 
	gídl
;

877 
	gcout
 << "# AB (©pgáb‹tË " << 
£tw
(19Ë<< 
	gab
 << 
	gídl
;

878 
	gcout
 << "# TI (tõdË " << 
£tw
(19Ë<< 
	gti
 << 
	gídl
;

879 
	gcout
 << "# -------------------------- -------------------" << 
	gídl
;

880 
	gcout
 << "# DT (dëe˘edË " << 
£tw
(19Ë<< 
	gdt
 << 
	gídl
;

881 
	gcout
 << "# -------------------------------------------------" << 
	gídl
;

882 
	gcout
 << "# CovîagêÖî˚¡age" << 
	gídl
;

883 
	gcout
 << "# -------------------------- -------------------" << 
	gídl
;

884 
	gcout
 << "#Åest coverage ";

885 
	gcout
 << 
£tw
(5Ë<< 
	gtc
 << "%" << 
	gídl
;

886 
	gcout
 << "# fault coverage ";

887 
	gcout
 << 
£tw
(5Ë<< 
	gfc
 << "%" << 
	gídl
;

888 
	gcout
 << "#átpgÉffectiveness ";

889 
	gcout
 << 
£tw
(5Ë<< 
	g´
 << "%" << 
	gídl
;

890 
	gcout
 << "# -------------------------------------------------" << 
	gídl
;

891 
	gcout
 << "# #P©ã∫† " << 
£tw
(19Ë<< 
	g≈©
 << 
	gídl
;

892 
	gcout
 << "# -------------------------------------------------" << 
	gídl
;

893 
	gcout
 << "# ATPGÑu¡imê " << 
£tw
(17Ë<< 
	gπime
;

894 
	gcout
 << " s" << 
	gídl
;

895 
	gcout
 << "# -------------------------------------------------" << 
	gídl
;

897  
	gåue
;

901 
	gAddPöC⁄sCmd
::
AddPöC⁄sCmd
(c⁄° 
°d
::
°rög
 &
«me
,

902 
F™Mgr
 *
ÁnMgr
Ë: 
	$Cmd
(
«me
) {

903 
ÁnMgr_
 = 
ÁnMgr
;

904 
›tMgr_
.
	`£tName
(
«me
);

905 
›tMgr_
.
	`£tSh‹tDes
("addÖin constraint");

906 
›tMgr_
.
	`£tDes
("constraint PI(s)Åo 0 or 1");

907 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
REQ_INF
, "PIsÅo be constrainted", "PI");

908 
›tMgr_
.
	`ªgArg
(
¨g
);

909 
¨g
 = 
√w
 
	`Arg
(
Arg
::
REQ
, "constraint value, 0 or 1", "<0|1>");

910 
›tMgr_
.
	`ªgArg
(
¨g
);

911 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

912 
›t
->
	`addFœg
("h");

913 
›t
->
	`addFœg
("help");

914 
›tMgr_
.
	`ªgO±
(
›t
);

915 
	}
}

916 
	gAddPöC⁄sCmd
::~
	$AddPöC⁄sCmd
(Ë{
	}
}

919 
boﬁ
 
AddPöC⁄sCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

920 
›tMgr_
.
∑r£
(
¨gv
);

922 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

923 
	g›tMgr_
.
ußge
();

924  
	gåue
;

927 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

928 
	g˚º
 << "**ERROR AddPinConsCmd::exec(): circuitÇeeded";

929 
	g˚º
 << 
	gídl
;

930  
	gÁl£
;

933 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 2) {

934 
	g˚º
 << "**ERROR AddPinConsCmd::exec():ÇeedátÜeast one PI ";

935 
	g˚º
 << "™dÅhêc⁄°øöàvÆue" << 
	gídl
;

936  
	gÁl£
;

939 
size_t
 
	g≈i
 = 
›tMgr_
.
gëNP¨£dArg
() - 1;

940 
	gc⁄s
 = 
©oi
(
›tMgr_
.
gëP¨£dArg
(
≈i
).
c_°r
());

941 
size_t
 
	gi
 = 0; i < 
	g≈i
; ++i) {

942 
°rög
 
	gpöame
 = 
›tMgr_
.
gëP¨£dArg
(
i
);

943 
P‹t
 *
	gp
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëP‹t
(
pöame
.
c_°r
());

944 i‡(!
	gp
) {

945 
	g˚º
 << "**ERROR AddPöC⁄sCmd::exec(): P‹à`" << 
	gpöame
;

946 
	g˚º
 << "'ÇŸ found" << 
	gídl
;

949 
	ggid
 = 
ÁnMgr_
->
©pg_mgr
->
cú_
->
p‹tToG©e_
[
p
->
id_
];

950 i‡(
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[
gid
].
	gty≥_
 !
G©e
::
PI
) {

951 
˚º
 << "**ERROR AddPöC⁄sCmd::exec(): P‹à`" << 
pöame
;

952 
	g˚º
 << "' i†nŸ PI" << 
	gídl
;

955 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[
gid
].
	ghasC⁄s_
 = 
åue
;

956 i‡(
	gc⁄s
)

957 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[
gid
].
	gc⁄s_
 = 
PARA_H
;

959 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
	gg©es_
[
gid
].
	gc⁄s_
 = 
PARA_L
;

962  
	gåue
;

966 
	gRunLogicSimCmd
::
RunLogicSimCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

967 
	$Cmd
(
«me
) {

968 
ÁnMgr_
 = 
ÁnMgr
;

969 
›tMgr_
.
	`£tName
(
«me
);

970 
›tMgr_
.
	`£tSh‹tDes
("runÜogic simulation");

971 
›tMgr_
.
	`£tDes
("runÜogic simulation onÅhe givenÖattern");

972 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

973 
›t
->
	`addFœg
("h");

974 
›t
->
	`addFœg
("help");

975 
›tMgr_
.
	`ªgO±
(
›t
);

976 
	}
}

977 
	gRunLogicSimCmd
::~
	$RunLogicSimCmd
(Ë{
	}
}

980 
boﬁ
 
RunLogicSimCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

981 
›tMgr_
.
∑r£
(
¨gv
);

983 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

984 
	g›tMgr_
.
ußge
();

985  
	gåue
;

988 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

989 
	g˚º
 << "**ERROR RunLogicSimCmd::exec(): cúcuôÇìded" << 
	gídl
;

990  
	gÁl£
;

993 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
) {

994 
	g˚º
 << "**ERROR RunLogicSimCmd::exec():Ö©ã∫Çìded" << 
	gídl
;

995  
	gÁl£
;

998 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

999 
	gcout
 << "# Pîf‹mögÜogi¯simuœti⁄ ..." << 
	gídl
;

1001 
Simuœt‹
 
sim
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

1002 
	gsim
.
µGoodSim
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
);

1004 
TmSèt
 
	g°©
;

1005 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
);

1006 
	gcout
 << "# FinishedÜogic simulation";

1007 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

1008 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

1010  
	gåue
;

1014 
	gRunFau…SimCmd
::
RunFau…SimCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

1015 
	$Cmd
(
«me
) {

1016 
ÁnMgr_
 = 
ÁnMgr
;

1017 
›tMgr_
.
	`£tName
(
«me
);

1018 
›tMgr_
.
	`£tSh‹tDes
("run fault simulation");

1019 
›tMgr_
.
	`£tDes
("run fault simulation onÅhe givenÖattern");

1020 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

1021 
›t
->
	`addFœg
("h");

1022 
›t
->
	`addFœg
("help");

1023 
›tMgr_
.
	`ªgO±
(
›t
);

1024 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "simulation METHOD. ChooseÉitherÖp (parallelÖattern) orÖf (parallel fault)", "METHOD");

1025 
›t
->
	`addFœg
("m");

1026 
›t
->
	`addFœg
("method");

1027 
›tMgr_
.
	`ªgO±
(
›t
);

1028 
	}
}

1029 
	gRunFau…SimCmd
::~
	$RunFau…SimCmd
(Ë{
	}
}

1032 
boﬁ
 
RunFau…SimCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

1033 
›tMgr_
.
∑r£
(
¨gv
);

1035 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

1036 
	g›tMgr_
.
ußge
();

1037  
	gåue
;

1040 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

1041 
	g˚º
 << "**ERROR RunFau…SimCmd::exec(): cúcuôÇìded" << 
	gídl
;

1042  
	gÁl£
;

1045 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
) {

1046 
	g˚º
 << "**ERROR RunFau…SimCmd::exec():Ö©ã∫Çìded" << 
	gídl
;

1047  
	gÁl£
;

1050 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
 || f™Mgr_->©pg_mgr->fLi°Exåa˘_->
	gÁu…s_
.
size
() == 0) {

1051 
˚º
 << "**ERROR RunFau…SimCmd::exec(): fau…Üi°Çìded" << 
ídl
;

1052  
	gÁl£
;

1055 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

1056 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

1058 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gsim_
)

1059 
	gÁnMgr_
->
	g©pg_mgr
->
	gsim_
 = 
√w
 
Simuœt‹
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

1061 
	gcout
 << "# Pîf‹mög fau… simuœti⁄ ..." << 
	gídl
;

1062 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

1064 i‡(
	g›tMgr_
.
isFœgSë
("m"Ë&& o±Mgr_.
gëFœgV¨
("m") == "pf")

1065 
ÁnMgr_
->
©pg_mgr
->
sim_
->
pfFau…Sim
(ÁnMgr_->©pg_mgr->
pcﬁl_
, f™Mgr_->©pg_mgr->
fLi°Exåa˘_
);

1067 
	gÁnMgr_
->
	g©pg_mgr
->
	gsim_
->
µFau…Sim
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
, f™Mgr_->©pg_mgr->
fLi°Exåa˘_
);

1069 
TmSèt
 
	g°©
;

1070 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
);

1071 
	gcout
 << "# Finished fault simulation";

1072 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

1073 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

1074 
	gπime
 = ()
°©
.
rTime
 / 1000000.0;

1076  
	gåue
;

1080 
	gRunAçgCmd
::
RunAçgCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

1081 
	$Cmd
(
«me
) {

1082 
ÁnMgr_
 = 
ÁnMgr
;

1083 
›tMgr_
.
	`£tName
(
«me
);

1084 
›tMgr_
.
	`£tSh‹tDes
("runáutomaticÅestÖattern generation");

1085 
›tMgr_
.
	`£tDes
("runáutomaticÅestÖattern generation");

1086 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

1087 
›t
->
	`addFœg
("h");

1088 
›t
->
	`addFœg
("help");

1089 
›tMgr_
.
	`ªgO±
(
›t
);

1090 
	}
}

1091 
	gRunAçgCmd
::~
	$RunAçgCmd
(Ë{
	}
}

1094 
boﬁ
 
RunAçgCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

1095 
›tMgr_
.
∑r£
(
¨gv
);

1097 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

1098 
	g›tMgr_
.
ußge
();

1099  
	gåue
;

1102 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

1103 
	g˚º
 << "**ERROR RunFau…SimCmd::exec(): cúcuôÇìded" << 
	gídl
;

1104  
	gÁl£
;

1107 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
) {

1108 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

1111 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
) {

1112 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
 = 
√w
 
Fau…Li°Exåa˘
;

1113 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
exåa˘
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

1116 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gsim_
)

1117 
	gÁnMgr_
->
	g©pg_mgr
->
	gsim_
 = 
√w
 
Simuœt‹
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

1119 
dñëe
 
	gÁnMgr_
->
	g©pg_mgr
->
	g©pg_
;

1120 
	gÁnMgr_
->
	g©pg_mgr
->
	g©pg_
 = 
√w
 
Açg
(
ÁnMgr_
->
©pg_mgr
->
cú_
, f™Mgr_->©pg_mgr->
sim_
);

1122 
	gcout
 << "# Pîf‹mögÖ©ã∫ gíî©i⁄ ..." << 
	gídl
;

1123 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

1125 
	gÁnMgr_
->
	g©pg_mgr
->
	g©pg_
->
gíî©i⁄
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
, f™Mgr_->©pg_mgr->
fLi°Exåa˘_
);

1127 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
ÁnMgr_
->
©pgSèt
);

1128 
	gcout
 << "# FinishedÖattern generation";

1129 
	gcout
 << " " << ()
	gÁnMgr_
->
	g©pgSèt
.
	grTime
 / 1000000.0 << " s";

1130 
	gcout
 << " " << ()
	gÁnMgr_
->
	g©pgSèt
.
	gvmSize
 / 1024.0 << " MB";

1131 
	gcout
 << 
	gídl
;

1132 
	gπime
 = ()
ÁnMgr_
->
©pgSèt
.
rTime
 / 1000000.0;

1134  
	gåue
;

1138 
	gWrôeP©Cmd
::
WrôeP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

1139 
	$Cmd
(
«me
) {

1140 
ÁnMgr_
 = 
ÁnMgr
;

1141 
›tMgr_
.
	`£tName
(
«me
);

1142 
›tMgr_
.
	`£tSh‹tDes
("writeÖatterns");

1143 
›tMgr_
.
	`£tDes
("writesÖatternsÅo FILE");

1144 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
REQ
, "outputÖattern file", "FILE");

1145 
›tMgr_
.
	`ªgArg
(
¨g
);

1146 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

1147 
›t
->
	`addFœg
("h");

1148 
›t
->
	`addFœg
("help");

1149 
›tMgr_
.
	`ªgO±
(
›t
);

1150 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "pattern format. Currently supports `pat'ánd `ascii'", "FORMAT");

1151 
›t
->
	`addFœg
("f");

1152 
›t
->
	`addFœg
("format");

1153 
›tMgr_
.
	`ªgO±
(
›t
);

1154 
	}
}

1155 
	gWrôeP©Cmd
::~
	$WrôeP©Cmd
(Ë{
	}
}

1158 
boﬁ
 
WrôeP©Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

1159 
›tMgr_
.
∑r£
(
¨gv
);

1161 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

1162 
	g›tMgr_
.
ußge
();

1163  
	gåue
;

1166 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

1167 
	g˚º
 << "**ERROR WritePatternCmd::exec(): output fileÇeeded";

1168 
	g˚º
 << 
	gídl
;

1169  
	gÁl£
;

1172 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

1173 
	g˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): cúcuôÇìded" << 
	gídl
;

1174  
	gÁl£
;

1177 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
) {

1178 
	g˚º
 << "**ERROR WrôeP©ã∫Cmd::exec():Ö©ã∫Çìded" << 
	gídl
;

1179  
	gÁl£
;

1182 
	gcout
 << "# WrôögÖ©ã∫Åÿ`" << 
	g›tMgr_
.
gëP¨£dArg
(0) << "' ...";

1183 
	gcout
 << 
	gídl
;

1184 
P©ã∫Wrôî
 
wrôî
(
ÁnMgr_
->
©pg_mgr
->
pcﬁl_
, f™Mgr_->©pg_mgr->
cú_
);

1185 i‡(
	g›tMgr_
.
gëFœgV¨
("f") == "lht") {

1186 i‡(!
wrôî
.
wrôeLht
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
())) {

1187 
˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): wrôî faûed" << 
ídl
;

1188  
	gÁl£
;

1191 i‡(
	g›tMgr_
.
gëFœgV¨
("f") == "ascii") {

1192 i‡(!
wrôî
.
wrôeAscii
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
())) {

1193 
˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): wrôî faûed" << 
ídl
;

1194  
	gÁl£
;

1197 i‡(
	g›tMgr_
.
gëFœgV¨
("f"Ë="∑t" || 
›tMgr_
.getFlagVar("f") == "") {

1198 i‡(!
wrôî
.
wrôeP©
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
())) {

1199 
˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): wrôî faûed" << 
ídl
;

1200  
	gÁl£
;

1204 
	g˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): undeföedÖ¨amëî i¿-f" << 
	gídl
;

1206  
	gåue
;

1211 
	gAddSˇnChaösCmd
::
AddSˇnChaösCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

1212 
	$Cmd
(
«me
) {

1213 
ÁnMgr_
 = 
ÁnMgr
;

1214 
›tMgr_
.
	`£tName
(
«me
);

1215 
›tMgr_
.
	`£tSh‹tDes
("Add Scan Chains");

1216 
›tMgr_
.
	`£tDes
("Add Scan ChainsÅo FFs");

1217 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

1218 
›t
->
	`addFœg
("h");

1219 
›t
->
	`addFœg
("help");

1220 
›tMgr_
.
	`ªgO±
(
›t
);

1221 
	}
}

1222 
	gAddSˇnChaösCmd
::~
	$AddSˇnChaösCmd
(Ë{
	}
}

1225 
boﬁ
 
AddSˇnChaösCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

1226 
›tMgr_
.
∑r£
(
¨gv
);

1228 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

1229 
	g›tMgr_
.
ußge
();

1230  
	gåue
;

1233 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

1234 
	g˚º
 << "**ERROR AddSˇnChaösCmd::exec(): cúcuôÇìded" << 
	gídl
;

1235  
	gÁl£
;

1238 
	gcout
 << "# Add Sˇ¿Chaö†" << 
	gídl
;

1240  
	gåue
;

1248 
	gWrôeProcCmd
::
WrôeProcCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

1249 
	$Cmd
(
«me
) {

1250 
ÁnMgr_
 = 
ÁnMgr
;

1251 
›tMgr_
.
	`£tName
(
«me
);

1252 
›tMgr_
.
	`£tSh‹tDes
("writeÅestÖrocedure file");

1253 
›tMgr_
.
	`£tDes
("createÅestÖrocedure file ");

1254 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
REQ
, "outputÅestÖrocedure file", "FILE");

1255 
›tMgr_
.
	`ªgArg
(
¨g
);

1256 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

1257 
›t
->
	`addFœg
("h");

1258 
›t
->
	`addFœg
("help");

1259 
›tMgr_
.
	`ªgO±
(
›t
);

1260 
	}
}

1261 
	gWrôeProcCmd
::~
	$WrôeProcCmd
(Ë{
	}
}

1264 
boﬁ
 
WrôeProcCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

1265 
›tMgr_
.
∑r£
(
¨gv
);

1267 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

1268 
	g›tMgr_
.
ußge
();

1269  
	gåue
;

1272 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

1273 
	g˚º
 << "**ERROR WritePatternCmd::exec(): output fileÇeeded";

1274 
	g˚º
 << 
	gídl
;

1275  
	gÁl£
;

1278 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
) {

1279 
	g˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): cúcuôÇìded" << 
	gídl
;

1280  
	gÁl£
;

1284 
	gcout
 << "# WritingÅestÖrocedure file ...";

1285 
	gcout
 << 
	gídl
;

1286 
Pro˚duªWrôî
 
wrôî
(
ÁnMgr_
->
©pg_mgr
->
cú_
);

1287 i‡(!
	gwrôî
.
wrôeProc
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
())) {

1288 
	g˚º
 << "**ERROR WrôeP©ã∫Cmd::exec(): wrôî faûed" << 
	gídl
;

1289  
	gÁl£
;

1292  
	gåue
;

	@atpg/src/atpg_cmd.h

8 #i‚de‡
_FAN_ATPG_CMD_H_


9 
	#_FAN_ATPG_CMD_H_


	)

11 
	~"comm⁄/cmd.h
"

13 
	~"Án_mgr.h
"

15 
«me•a˚
 
	gF™Ns
 {

18 ˛as†
	cRódP©Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

19 
public
:

20 
RódP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

21 ~
RódP©Cmd
();

23 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

25 
	g¥iv©e
:

26 
F™Mgr
 *
ÁnMgr_
;

29 ˛as†
	cRï‹tP©Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

30 
public
:

31 
Rï‹tP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

32 ~
Rï‹tP©Cmd
();

34 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

36 
	g¥iv©e
:

37 
F™Mgr
 *
ÁnMgr_
;

40 ˛as†
	cAddFau…Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

41 
public
:

42 
AddFau…Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

43 ~
AddFau…Cmd
();

45 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

47 
	g¥iv©e
:

48 
addAŒFau…
();

49 
boﬁ
 
addPöFau…
(c⁄° 
°d
::
°rög
 &
ty≥
, c⁄° std::°rög &
pö
);

50 
boﬁ
 
addCñlFau…
(c⁄° 
°d
::
°rög
 &
ty≥
, c⁄° std::°rög &
˚Œ
,

51 c⁄° 
°d
::
°rög
 &
pö
);

52 
F™Mgr
 *
	gÁnMgr_
;

55 ˛as†
	cRï‹tFau…Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

56 
public
:

57 
Rï‹tFau…Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

58 ~
Rï‹tFau…Cmd
();

60 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

62 
	g¥iv©e
:

63 
F™Mgr
 *
ÁnMgr_
;

66 ˛as†
	cRï‹tCúcuôCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

67 
public
:

68 
Rï‹tCúcuôCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

69 ~
Rï‹tCúcuôCmd
();

71 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

73 
	g¥iv©e
:

74 
F™Mgr
 *
ÁnMgr_
;

77 ˛as†
	cRï‹tG©eCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

78 
public
:

79 
Rï‹tG©eCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

80 ~
Rï‹tG©eCmd
();

82 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

84 
	g¥iv©e
:

85 
ªp‹tG©e
(c⁄° &
i
) const;

86 
F™Mgr
 *
	gÁnMgr_
;

89 ˛as†
	cRï‹tVÆueCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

90 
public
:

91 
Rï‹tVÆueCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

92 ~
Rï‹tVÆueCmd
();

94 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

96 
	g¥iv©e
:

97 
ªp‹tVÆue
(c⁄° &
i
) const;

98 
F™Mgr
 *
	gÁnMgr_
;

101 ˛as†
	cRï‹tSètsCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

102 
public
:

103 
Rï‹tSètsCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

104 ~
Rï‹tSètsCmd
();

106 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

108 
	g¥iv©e
:

109 
F™Mgr
 *
ÁnMgr_
;

112 ˛as†
	cAddPöC⁄sCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

113 
public
:

114 
AddPöC⁄sCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

115 ~
AddPöC⁄sCmd
();

117 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

119 
	g¥iv©e
:

120 
F™Mgr
 *
ÁnMgr_
;

123 ˛as†
	cRunLogicSimCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

124 
public
:

125 
RunLogicSimCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

126 ~
RunLogicSimCmd
();

128 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

130 
	g¥iv©e
:

131 
F™Mgr
 *
ÁnMgr_
;

134 ˛as†
	cRunFau…SimCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

135 
public
:

136 
RunFau…SimCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

137 ~
RunFau…SimCmd
();

139 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

141 
	g¥iv©e
:

142 
F™Mgr
 *
ÁnMgr_
;

145 ˛as†
	cRunAçgCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

146 
public
:

147 
RunAçgCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

148 ~
RunAçgCmd
();

150 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

152 
	g¥iv©e
:

153 
F™Mgr
 *
ÁnMgr_
;

156 ˛as†
	cWrôeP©Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

157 
public
:

158 
WrôeP©Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

159 ~
WrôeP©Cmd
();

161 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

163 
	g¥iv©e
:

164 
F™Mgr
 *
ÁnMgr_
;

168 ˛as†
	cAddSˇnChaösCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

169 
public
:

170 
AddSˇnChaösCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

171 ~
AddSˇnChaösCmd
();

173 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

175 
	g¥iv©e
:

176 
F™Mgr
 *
ÁnMgr_
;

179 ˛as†
	cWrôeProcCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

180 
public
:

181 
WrôeProcCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

182 ~
WrôeProcCmd
();

184 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

186 
	g¥iv©e
:

187 
F™Mgr
 *
ÁnMgr_
;

	@atpg/src/fan_mgr.h

8 #i‚de‡
_FAN_FAN_MGR_H_


9 
	#_FAN_FAN_MGR_H_


	)

11 
	~"comm⁄/tm_ußge.h
"

13 
	~"öãrÁ˚/√éi°.h
"

14 
	~"öãrÁ˚/ãchlib.h
"

16 
	~"c‹e/©pg_mgr.h
"

18 
«me•a˚
 
	gF™Ns
 {

20 ˛as†
	cF™Mgr
 {

21 
	gpublic
:

22 
F™Mgr
() {

23 
lib
 = 
NULL
;

24 
	g∆
 = 
NULL
;

25 
	g©pg_mgr
 = 
NULL
;

26 
	g©pgSèt
.
	grTime
 = 0;

28 ~
F™Mgr
() {}

30 
	gI¡fNs
::
Techlib
 *
lib
;

31 
	gI¡fNs
::
Nëli°
 *
∆
;

32 
	gC‹eNs
::
AçgMgr
 *
©pg_mgr
;

33 
	gComm⁄Ns
::
TmUßge
 
tmusg
;

34 
	gComm⁄Ns
::
TmSèt
 
©pgSèt
;

	@atpg/src/main.cpp

8 
	~<c°dlib
>

10 
	~"comm⁄/sys_cmd.h
"

11 
	~"£tup_cmd.h
"

12 
	~"©pg_cmd.h
"

13 
	~"misc_cmd.h
"

15 
usög
 
«me•a˚
 
	g°d
;

16 
usög
 
«me•a˚
 
	gComm⁄Ns
;

17 
usög
 
«me•a˚
 
	gI¡fNs
;

18 
usög
 
«me•a˚
 
	gC‹eNs
;

19 
usög
 
«me•a˚
 
	gF™Ns
;

21 
¥ötWñcome
();

22 
öôO±
(
O±Mgr
 &
mgr
);

23 
öôCmd
(
CmdMgr
 &
cmdMgr
, 
F™Mgr
 &
ÁnMgr
);

24 
¥ötGoodbye
(
TmUßge
 &
tmusg
);

26 
	$maö
(
¨gc
, **
¨gv
) {

29 
TmUßge
 
tmusg
;

30 
tmusg
.
	`tŸÆSèπ
();

33 
O±Mgr
 
›tMgr
;

34 
	`öôO±
(
›tMgr
);

36 
›tMgr
.
	`∑r£
(
¨gc
, 
¨gv
);

37 i‡(
›tMgr
.
	`isFœgSë
("h")) {

38 
›tMgr
.
	`ußge
();

39 
	`exô
(0);

43 
F™Mgr
 
ÁnMgr
;

44 
CmdMgr
 
cmdMgr
;

45 
	`öôCmd
(
cmdMgr
, 
ÁnMgr
);

46 
CmdMgr
::
Resu…
 
ªs
 = CmdMgr::
SUCCESS
;

49 
	`¥ötWñcome
();

52 i‡(
›tMgr
.
	`isFœgSë
("f")) {

53 
°rög
 
cmd
 = "sour˚ " + 
›tMgr
.
	`gëFœgV¨
("f");

54 
ªs
 = 
cmdMgr
.
	`exec
(
cmd
);

58 
ªs
 !
CmdMgr
::
EXIT
) {

59 
ªs
 = 
cmdMgr
.
	`ªad
();

60 i‡(
ªs
 =
CmdMgr
::
NOT_EXIST
) {

61 
˚º
 << "**ERROR maö(): comm™d `" << 
cmdMgr
.
	`gëEº‹Så
();

62 
˚º
 << "'ÇŸ found" << 
ídl
;

68 
	`¥ötGoodbye
(
tmusg
);

70 
	}
}

72 
	$¥ötWñcome
() {

73 
cout
 << "# LaDS ATPG-SYSTEM v1.0a ";

74 
cout
 << " Feb 2016" << 
ídl
;

75 
cout
 << "# Copyright(c) LaDS";

76 
cout
 << "(IËGIEE NTU TAIWAN " << 
ídl
;

77 
cout
 << "#" << 
ídl
;

78 
cout
 << "# All Righ";

79 
cout
 << "t†Re£rved." << 
ídl
;

80 
cout
 << "#" << 
ídl
;

84 
FILE
 *
sysout
;

85 
sysout
 = 
	`p›í
("uname -s 2> /dev/null", "r");

86 
buf
[128];

87 
cout
 << "# Kernel: ";

88 i‡(!
sysout
)

89 
cout
 << "UNKNOWN" << 
ídl
;

91 i‡(
	`fgës
(
buf
, (buf), 
sysout
))

92 
cout
 << 
buf
;

94 
cout
 << "UNKNOWN" << 
ídl
;

95 
	`p˛o£
(
sysout
);

99 
sysout
 = 
	`p›í
("uname -i 2> /dev/null", "r");

100 
cout
 << "# Platform: ";

101 i‡(!
sysout
)

102 
cout
 << "UNKNOWN" << 
ídl
;

104 i‡(
	`fgës
(
buf
, (buf), 
sysout
))

105 
cout
 << 
buf
;

107 
cout
 << "UNKNOWN" << 
ídl
;

108 
	`p˛o£
(
sysout
);

112 
FILE
 *
memöfo
 = 
	`f›í
("/proc/meminfo", "r");

113 
cout
 << "# Memory: ";

114 i‡(!
memöfo
)

115 
cout
 << "UNKNOWN" << 
ídl
;

117 
	`fgës
(
buf
, 128, 
memöfo
)) {

118 *
ch
;

119 i‡((
ch
 = 
	`°r°r
(
buf
, "MemTotal:"))) {

120 
cout
 << ()
	`©ﬁ
(
ch
 + 9Ë/ 1024.0 << " MB" << 
ídl
;

124 
	`f˛o£
(
memöfo
);

127 
cout
 << "# Note: ";

128 
cout
 << "UI, in˛udög COMMON & INTERFACEÖackage, is" << 
ídl
;

129 
cout
 << "# i¿thêcouπesy o‡LaDS(II)" << 
ídl
;

131 
cout
 << "#" << 
ídl
;

132 
	}
}

134 
	$¥ötGoodbye
(
TmUßge
 &
tmusg
) {

135 
TmSèt
 
°©
;

136 
tmusg
.
	`gëTŸÆUßge
(
°©
);

137 
cout
 << "# Goodbye" << 
ídl
;

138 
cout
 << "# Runtime ";

139 
cout
 << "ªÆ " << ()
°©
.
rTime
 / 1000000.0 << " s ";

140 
cout
 << "u£∏" << ()
°©
.
uTime
 / 1000000.0 << " s ";

141 
cout
 << "sy†" << ()
°©
.
sTime
 / 1000000.0 << " s" << 
ídl
;

142 
cout
 << "# Memory ";

143 
cout
 << "≥ak " << ()
°©
.
vmPók
 / 1024.0 << " MB" << 
ídl
;

144 
	}
}

146 
	$öôO±
(
O±Mgr
 &
mgr
) {

148 
mgr
.
	`£tName
("fan");

149 
mgr
.
	`£tSh‹tDes
("FAN based ATPG");

150 
mgr
.
	`£tDes
("FAN based ATPG");

153 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "printÅhis usage", "");

154 
›t
->
	`addFœg
("h");

155 
›t
->
	`addFœg
("help");

156 
mgr
.
	`ªgO±
(
›t
);

158 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "execute command fileát startup", "file");

159 
›t
->
	`addFœg
("f");

160 
mgr
.
	`ªgO±
(
›t
);

161 
	}
}

163 
	$öôCmd
(
CmdMgr
 &
cmdMgr
, 
F™Mgr
 &
ÁnMgr
) {

165 
Cmd
 *
li°Cmd
 = 
√w
 
	`SysLi°Cmd
("ls");

166 
Cmd
 *
cdCmd
 = 
√w
 
	`SysCdCmd
("cd");

167 
Cmd
 *
ˇtCmd
 = 
√w
 
	`SysC©Cmd
("cat");

168 
Cmd
 *
pwdCmd
 = 
√w
 
	`SysPwdCmd
("pwd");

169 
Cmd
 *
£tCmd
 = 
√w
 
	`SysSëCmd
("£t", &
cmdMgr
);

170 
Cmd
 *
exôCmd
 = 
√w
 
	`SysExôCmd
("exô", &
cmdMgr
);

171 
Cmd
 *
quôCmd
 = 
√w
 
	`SysExôCmd
("quô", &
cmdMgr
);

172 
Cmd
 *
sour˚Cmd
 = 
√w
 
	`SysSour˚Cmd
("sour˚", &
cmdMgr
);

173 
Cmd
 *
hñpCmd
 = 
√w
 
	`SysHñpCmd
("hñp", &
cmdMgr
);

174 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
li°Cmd
);

175 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
cdCmd
);

176 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
ˇtCmd
);

177 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
pwdCmd
);

178 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
£tCmd
);

179 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
exôCmd
);

180 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
quôCmd
);

181 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
sour˚Cmd
);

182 
cmdMgr
.
	`ªgCmd
("SYSTEM", 
hñpCmd
);

185 
Cmd
 *
ªadLibCmd
 = 
√w
 
	`RódLibCmd
("ªad_lib", &
ÁnMgr
);

186 
Cmd
 *
ªadNlCmd
 = 
√w
 
	`RódNlCmd
("ªad_√éi°", &
ÁnMgr
);

187 
Cmd
 *
£tFau…Ty≥Cmd
 = 
√w
 
	`SëFau…Ty≥Cmd
("£t_Áu…_ty≥", &
ÁnMgr
);

188 
Cmd
 *
buûdCúCmd
 = 
√w
 
	`BuûdCúcuôCmd
("buûd_cúcuô", &
ÁnMgr
);

189 
Cmd
 *
ªp‹tNlCmd
 = 
√w
 
	`Rï‹tNëli°Cmd
("ªp‹t_√éi°", &
ÁnMgr
);

190 
Cmd
 *
ªp‹tCñlCmd
 = 
√w
 
	`Rï‹tCñlCmd
("ªp‹t_˚Œ", &
ÁnMgr
);

191 
Cmd
 *
ªp‹tLibCmd
 = 
√w
 
	`Rï‹tLibCmd
("ªp‹t_lib", &
ÁnMgr
);

192 
Cmd
 *
£tP©ã∫Ty≥Cmd
 = 
√w
 
	`SëP©ã∫Ty≥Cmd
("£t_∑âîn_ty≥", &
ÁnMgr
);

193 
Cmd
 *
£tSèticCom¥essi⁄Cmd
 = 
√w
 
	`SëSèticCom¥essi⁄Cmd
("£t_°©ic_com¥essi⁄", &
ÁnMgr
);

194 
Cmd
 *
£tDy«micCom¥essi⁄Cmd
 = 
√w
 
	`SëDy«micCom¥essi⁄Cmd
("£t_dy«mic_com¥essi⁄", &
ÁnMgr
);

195 
Cmd
 *
£tXFûlCmd
 = 
√w
 
	`SëXFûlCmd
("£t_X-Fûl", &
ÁnMgr
);

196 
cmdMgr
.
	`ªgCmd
("SETUP", 
ªadLibCmd
);

197 
cmdMgr
.
	`ªgCmd
("SETUP", 
ªadNlCmd
);

198 
cmdMgr
.
	`ªgCmd
("SETUP", 
£tFau…Ty≥Cmd
);

199 
cmdMgr
.
	`ªgCmd
("SETUP", 
buûdCúCmd
);

200 
cmdMgr
.
	`ªgCmd
("SETUP", 
ªp‹tNlCmd
);

201 
cmdMgr
.
	`ªgCmd
("SETUP", 
ªp‹tCñlCmd
);

202 
cmdMgr
.
	`ªgCmd
("SETUP", 
ªp‹tLibCmd
);

203 
cmdMgr
.
	`ªgCmd
("SETUP", 
£tP©ã∫Ty≥Cmd
);

204 
cmdMgr
.
	`ªgCmd
("SETUP", 
£tSèticCom¥essi⁄Cmd
);

205 
cmdMgr
.
	`ªgCmd
("SETUP", 
£tDy«micCom¥essi⁄Cmd
);

206 
cmdMgr
.
	`ªgCmd
("SETUP", 
£tXFûlCmd
);

209 
Cmd
 *
ªadP©Cmd
 = 
√w
 
	`RódP©Cmd
("ªad_∑âîn", &
ÁnMgr
);

210 
Cmd
 *
ªp‹tP©Cmd
 = 
√w
 
	`Rï‹tP©Cmd
("ªp‹t_∑âîn", &
ÁnMgr
);

211 
Cmd
 *
addFau…Cmd
 = 
√w
 
	`AddFau…Cmd
("add_Áu…", &
ÁnMgr
);

212 
Cmd
 *
ªp‹tFau…Cmd
 = 
√w
 
	`Rï‹tFau…Cmd
("ªp‹t_Áu…", &
ÁnMgr
);

213 
Cmd
 *
addPöC⁄sCmd
 = 
√w
 
	`AddPöC⁄sCmd
("add_pö_c⁄°øöt", &
ÁnMgr
);

214 
Cmd
 *
runLogicSimCmd
 = 
√w
 
	`RunLogicSimCmd
("run_logic_sim", &
ÁnMgr
);

215 
Cmd
 *
runFau…SimCmd
 = 
√w
 
	`RunFau…SimCmd
("run_Áu…_sim", &
ÁnMgr
);

216 
Cmd
 *
runAçgCmd
 = 
√w
 
	`RunAçgCmd
("run_©pg", &
ÁnMgr
);

217 
Cmd
 *
ªp‹tCúcuôCmd
 = 
√w
 
	`Rï‹tCúcuôCmd
("ªp‹t_cúcuô", &
ÁnMgr
);

218 
Cmd
 *
ªp‹tG©eCmd
 = 
√w
 
	`Rï‹tG©eCmd
("ªp‹t_g©e", &
ÁnMgr
);

219 
Cmd
 *
ªp‹tVÆueCmd
 = 
√w
 
	`Rï‹tVÆueCmd
("ªp‹t_vÆue", &
ÁnMgr
);

220 
Cmd
 *
ªp‹tSètsCmd
 = 
√w
 
	`Rï‹tSètsCmd
("ªp‹t_°©i°ics", &
ÁnMgr
);

221 
Cmd
 *
wrôeP©Cmd
 = 
√w
 
	`WrôeP©Cmd
("wrôe_∑âîn", &
ÁnMgr
);

222 
Cmd
 *
wrôeProcCmd
 = 
√w
 
	`WrôeProcCmd
("wrôe_ã°_¥o˚duª_fûe", &
ÁnMgr
);

223 
Cmd
 *
addSˇnChaösCmd
 = 
√w
 
	`AddSˇnChaösCmd
("add_sˇn_chaös", &
ÁnMgr
);

224 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªadP©Cmd
);

225 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tP©Cmd
);

226 
cmdMgr
.
	`ªgCmd
("ATPG", 
addFau…Cmd
);

227 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tFau…Cmd
);

228 
cmdMgr
.
	`ªgCmd
("ATPG", 
addPöC⁄sCmd
);

229 
cmdMgr
.
	`ªgCmd
("ATPG", 
runLogicSimCmd
);

230 
cmdMgr
.
	`ªgCmd
("ATPG", 
runFau…SimCmd
);

231 
cmdMgr
.
	`ªgCmd
("ATPG", 
runAçgCmd
);

232 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tCúcuôCmd
);

233 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tG©eCmd
);

234 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tVÆueCmd
);

235 
cmdMgr
.
	`ªgCmd
("ATPG", 
ªp‹tSètsCmd
);

236 
cmdMgr
.
	`ªgCmd
("ATPG", 
wrôeP©Cmd
);

237 
cmdMgr
.
	`ªgCmd
("ATPG", 
wrôeProcCmd
);

238 
cmdMgr
.
	`ªgCmd
("ATPG", 
addSˇnChaösCmd
);

241 
Cmd
 *
ªp‹tP©F‹m©Cmd
 = 
√w
 
	`Rï‹tP©F‹m©Cmd
("report_pattern_format");

242 
Cmd
 *
ªp‹tMemUsgCmd
 = 
√w
 
	`Rï‹tMemUsgCmd
("report_memory_usage");

243 
cmdMgr
.
	`ªgCmd
("MISC", 
ªp‹tP©F‹m©Cmd
);

244 
cmdMgr
.
	`ªgCmd
("MISC", 
ªp‹tMemUsgCmd
);

247 
cmdMgr
.
	`£tCommít
('#');

248 
cmdMgr
.
	`£tProm±
("atpg> ");

249 
cmdMgr
.
	`£tCﬁ‹
(
CmdMgr
::
CYAN
);

250 
	}
}

	@atpg/src/misc_cmd.cpp

8 
	~"comm⁄/tm_ußge.h
"

10 
	~"misc_cmd.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gComm⁄Ns
;

14 
usög
 
«me•a˚
 
	gF™Ns
;

17 
	gRï‹tP©F‹m©Cmd
::
Rï‹tP©F‹m©Cmd
(c⁄° 
°d
::
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

18 
›tMgr_
.
	`£tName
(
«me
);

19 
›tMgr_
.
	`£tSh‹tDes
("reportÖattern format");

20 
›tMgr_
.
	`£tDes
("reportÖattern format");

21 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

22 
›t
->
	`addFœg
("h");

23 
›t
->
	`addFœg
("help");

24 
›tMgr_
.
	`ªgO±
(
›t
);

25 
	}
}

26 
	gRï‹tP©F‹m©Cmd
::~
	$Rï‹tP©F‹m©Cmd
(Ë{
	}
}

29 
boﬁ
 
Rï‹tP©F‹m©Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

30 
›tMgr_
.
∑r£
(
¨gv
);

32 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

33 
	g›tMgr_
.
ußge
();

34  
	gåue
;

37 
	gcout
 << "<PIÇames> | <PPIÇames> | <POÇames>" << 
	gídl
;

38 
	gcout
 << "<BASIC_SCAN | LAUNCH_CAPTURE | LAUNCH_SHIFT>" << 
	gídl
;

39 
	gcout
 << "_num_of_∑âîn_<numbî>" << 
	gídl
;

40 
	gcout
 << "[ _pattern_<number> <PI1> | [PI2] | [PPI] | ";

41 
	gcout
 << "[SI] | [PO1] | [PO2] | [PPO] ]..." << 
	gídl
;

42  
	gåue
;

46 
	gRï‹tMemUsgCmd
::
Rï‹tMemUsgCmd
(c⁄° 
°d
::
°rög
 &
«me
) :

47 
	$Cmd
(
«me
) {

48 
›tMgr_
.
	`£tName
(
«me
);

49 
›tMgr_
.
	`£tSh‹tDes
("reportÑesource usage");

50 
›tMgr_
.
	`£tDes
("reportÑesource usage");

51 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

52 
›t
->
	`addFœg
("h");

53 
›t
->
	`addFœg
("help");

54 
›tMgr_
.
	`ªgO±
(
›t
);

55 
	}
}

56 
	gRï‹tMemUsgCmd
::~
	$Rï‹tMemUsgCmd
(Ë{
	}
}

59 
boﬁ
 
Rï‹tMemUsgCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

60 
›tMgr_
.
∑r£
(
¨gv
);

62 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

63 
	g›tMgr_
.
ußge
();

64  
	gåue
;

67 
TmSèt
 
	g°©
;

68 
TmUßge
 
	gtmusg
;

69 
	gtmusg
.
gëPîiodUßge
(
°©
);

70 
	gcout
 << "# Memory ";

71 
	gcout
 << "cuºíà" << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB ";

72 
	gcout
 << "≥ak " << ()
	g°©
.
	gvmPók
 / 1024.0 << " MB" << 
	gídl
;

74  
	gåue
;

	@atpg/src/misc_cmd.h

8 #i‚de‡
_FAN_MISC_CMD_H_


9 
	#_FAN_MISC_CMD_H_


	)

11 
	~"comm⁄/cmd.h
"

13 
«me•a˚
 
	gF™Ns
 {

16 ˛as†
	cRï‹tP©F‹m©Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

17 
public
:

18 
Rï‹tP©F‹m©Cmd
(c⁄° 
°d
::
°rög
 &
«me
);

19 ~
Rï‹tP©F‹m©Cmd
();

21 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

25 ˛as†
	cRï‹tMemUsgCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

26 
public
:

27 
Rï‹tMemUsgCmd
(c⁄° 
°d
::
°rög
 &
«me
);

28 ~
Rï‹tMemUsgCmd
();

30 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

	@atpg/src/setup_cmd.cpp

8 
	~"öãrÁ˚/√éi°_buûdî.h
"

9 
	~"öãrÁ˚/ãchlib_buûdî.h
"

11 
	~"£tup_cmd.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gComm⁄Ns
;

15 
usög
 
«me•a˚
 
	gI¡fNs
;

16 
usög
 
«me•a˚
 
	gC‹eNs
;

17 
usög
 
«me•a˚
 
	gF™Ns
;

21 
	gRódLibCmd
::
RódLibCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
Ë: 
	$Cmd
(
«me
) {

22 
ÁnMgr_
 = 
ÁnMgr
;

23 
›tMgr_
.
	`£tName
(
«me
);

24 
›tMgr_
.
	`£tSh‹tDes
("read mentorÅechnologyÜibrary");

25 
›tMgr_
.
	`£tDes
("read mentorÅechnologyÜibrary");

26 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "mentorÅechnologyÜibrary file",

28 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

29 
›t
->
	`addFœg
("h");

30 
›t
->
	`addFœg
("help");

31 
›tMgr_
.
	`ªgO±
(
›t
);

32 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "verbose on. Default is off", "");

33 
›t
->
	`addFœg
("v");

34 
›t
->
	`addFœg
("verbose");

35 
›tMgr_
.
	`ªgO±
(
›t
);

36 
	}
}

38 
	gRódLibCmd
::~
	$RódLibCmd
(Ë{
	}
}

41 
boﬁ
 
RódLibCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

42 
›tMgr_
.
∑r£
(
¨gv
);

44 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

45 
	g›tMgr_
.
ußge
();

46  
	gåue
;

49 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

50 
	g˚º
 << "**ERROR ReadLibCmd::exec():Üibrary fileÇeeded";

51 
	g˚º
 << 
	gídl
;

52  
	gÁl£
;

57 
dñëe
 
	gÁnMgr_
->
	glib
;

58 
	gÁnMgr_
->
	glib
 = 
√w
 
Techlib
;

59 
MdtFûe
 *
	glibBldî
 = 
√w
 
MdtLibBuûdî
(
ÁnMgr_
->
lib
);

62 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

63 
	gcout
 << "# RódögÅechnﬁogyÜibøry ..." << 
	gídl
;

64 
boﬁ
 
	gvîbo£
 = 
›tMgr_
.
isFœgSë
("v");

65 i‡(!
	glibBldî
->
ªad
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
(), 
vîbo£
)) {

66 
	g˚º
 << "**ERROR RódLibCmd::exec(): MDTÜib buûdîÉº‹" << 
	gídl
;

67 
dñëe
 
	glibBldî
;

68 
dñëe
 
	gÁnMgr_
->
	glib
;

69 
	gÁnMgr_
->
	glib
 = 
NULL
;

70  
	gÁl£
;

74 i‡(!
	gÁnMgr_
->
	glib
->
check
(
vîbo£
)) {

75 
	g˚º
 << "**ERROR RódLibCmd::exec(): MDTÜibÉº‹" << 
	gídl
;

76 
dñëe
 
	glibBldî
;

77 
dñëe
 
	gÁnMgr_
->
	glib
;

78 
	gÁnMgr_
->
	glib
 = 
NULL
;

79  
	gÁl£
;

82 
TmSèt
 
	g°©
;

83 i‡(!
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
))

84 
	gcout
 << "fishy ..." << 
	gídl
;

85 
	gcout
 << "# FöishedÑódögÜibøry `" << 
	g›tMgr_
.
gëP¨£dArg
(0) << "'";

86 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

87 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

89 
dñëe
 
	glibBldî
;

90  
	gåue
;

95 
	gRódNlCmd
::
RódNlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
Ë: 
	$Cmd
(
«me
) {

96 
ÁnMgr_
 = 
ÁnMgr
;

97 
›tMgr_
.
	`£tName
(
«me
);

98 
›tMgr_
.
	`£tSh‹tDes
("read verilog gateÜevelÇetlist");

99 
›tMgr_
.
	`£tDes
("read verilog gateÜevelÇetlist");

100 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "verilog gateÜevelÇetlist file",

102 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

103 
›t
->
	`addFœg
("h");

104 
›t
->
	`addFœg
("help");

105 
›tMgr_
.
	`ªgO±
(
›t
);

106 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "verbose on. Default is off", "");

107 
›t
->
	`addFœg
("v");

108 
›t
->
	`addFœg
("verbose");

109 
›tMgr_
.
	`ªgO±
(
›t
);

110 
	}
}

111 
	gRódNlCmd
::~
	$RódNlCmd
(Ë{
	}
}

114 
boﬁ
 
RódNlCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

115 
›tMgr_
.
∑r£
(
¨gv
);

117 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

118 
	g›tMgr_
.
ußge
();

119  
	gåue
;

122 i‡(!
	gÁnMgr_
->
	glib
) {

123 
	g˚º
 << "**ERROR ReadNlCmd::exec():ÅechnologyÜibraryÇeeded";

124 
	g˚º
 << 
	gídl
;

125  
	gÁl£
;

128 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

129 
	g˚º
 << "**ERROR ReadNlCmd::exec():Çetlist fileÇeeded";

130 
	g˚º
 << 
	gídl
;

131  
	gÁl£
;

135 
dñëe
 
	gÁnMgr_
->
	g∆
;

136 
	gÁnMgr_
->
	g∆
 = 
√w
 
Nëli°
;

137 
	gÁnMgr_
->
	g∆
->
£tTechlib
(
ÁnMgr_
->
lib
);

138 
VlogFûe
 *
	g∆Bldî
 = 
√w
 
VlogNlBuûdî
(
ÁnMgr_
->
∆
);

141 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

142 
	gcout
 << "# RódögÇëli° ..." << 
	gídl
;

143 
boﬁ
 
	gvîbo£
 = 
›tMgr_
.
isFœgSë
("v");

144 i‡(!
	g∆Bldî
->
ªad
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
(), 
vîbo£
)) {

145 
	g˚º
 << "**ERROR RódNlCmd()::exec(): vîûog buûdîÉº‹" << 
	gídl
;

146 
dñëe
 
	gÁnMgr_
->
	g∆
;

147 
dñëe
 
	g∆Bldî
;

148 
	gÁnMgr_
->
	g∆
 = 
NULL
;

149  
	gÁl£
;

153 i‡(!
	gÁnMgr_
->
	g∆
->
check
(
vîbo£
)) {

154 
	g˚º
 << "**ERROR RódNlCmd()::exec():Çëli°Éº‹" << 
	gídl
;

155 
dñëe
 
	gÁnMgr_
->
	g∆
;

156 
dñëe
 
	g∆Bldî
;

157 
	gÁnMgr_
->
	g∆
 = 
NULL
;

158  
	gÁl£
;

161 
TmSèt
 
	g°©
;

162 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
);

163 
	gcout
 << "# FöishedÑódögÇëli° `" << 
	g›tMgr_
.
gëP¨£dArg
(0) << "'";

164 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

165 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

167 
dñëe
 
	g∆Bldî
;

168  
	gåue
;

172 
	gSëFau…Ty≥Cmd
::
SëFau…Ty≥Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

173 
	$Cmd
(
«me
) {

174 
ÁnMgr_
 = 
ÁnMgr
;

175 
›tMgr_
.
	`£tName
(
«me
);

176 
›tMgr_
.
	`£tSh‹tDes
("set faultÅype");

177 
›tMgr_
.
	`£tDes
("set faultÅype. Currently supports stuck-at faultándÅransition delay fault");

178 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "either saf orÅdf",

180 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

181 
›t
->
	`addFœg
("h");

182 
›t
->
	`addFœg
("help");

183 
›tMgr_
.
	`ªgO±
(
›t
);

184 
	}
}

185 
	gSëFau…Ty≥Cmd
::~
	$SëFau…Ty≥Cmd
(Ë{
	}
}

188 
boﬁ
 
SëFau…Ty≥Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

189 
›tMgr_
.
∑r£
(
¨gv
);

191 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

192 
	g›tMgr_
.
ußge
();

193  
	gåue
;

196 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

197 
	g˚º
 << "**ERROR SetFaultTypeCmd::exec(): faultÅypeÇeeded";

198 
	g˚º
 << 
	gídl
;

199  
	gÁl£
;

202 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

203 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

205 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
)

206 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
 = 
√w
 
Fau…Li°Exåa˘
;

208 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "saf") {

209 
cout
 << "# fau…Åy≥ sëÅÿ°uck-© fau…" << 
ídl
;

210 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
 = 
Fau…Li°Exåa˘
::
SAF
;

212 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "tdf") {

213 
cout
 << "# fau…Åy≥ sëÅÿå™sôi⁄ dñay fau…" << 
ídl
;

214 
	gÁnMgr_
->
	g©pg_mgr
->
	gfLi°Exåa˘_
->
	gty≥_
 = 
Fau…Li°Exåa˘
::
TDF
;

217 
	g˚º
 << "**ERROR SetFaultTypeCmd::exec(): unknown faultÅype `";

218 
	g˚º
 << 
	g›tMgr_
.
gëP¨£dArg
(0Ë<< "'" << 
	gídl
;

219  
	gÁl£
;

222  
	gåue
;

226 
	gRï‹tNëli°Cmd
::
Rï‹tNëli°Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

227 
	$Cmd
(
«me
) {

228 
ÁnMgr_
 = 
ÁnMgr
;

229 
›tMgr_
.
	`£tName
(
«me
);

230 
›tMgr_
.
	`£tSh‹tDes
("reportÇetlist");

231 
›tMgr_
.
	`£tDes
("reportÇetlist information");

232 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

233 
›t
->
	`addFœg
("h");

234 
›t
->
	`addFœg
("help");

235 
›tMgr_
.
	`ªgO±
(
›t
);

236 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, "print more detailed information", "");

237 
›t
->
	`addFœg
("more");

238 
›tMgr_
.
	`ªgO±
(
›t
);

239 
	}
}

240 
	gRï‹tNëli°Cmd
::~
	$Rï‹tNëli°Cmd
(Ë{
	}
}

243 
boﬁ
 
Rï‹tNëli°Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

244 
›tMgr_
.
∑r£
(
¨gv
);

246 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

247 
	g›tMgr_
.
ußge
();

248  
	gåue
;

251 i‡(!
	gÁnMgr_
->
	g∆
) {

252 
	g˚º
 << "**ERROR Rï‹tNëli°Cmd::exec():Çëli°Çìded" << 
	gídl
;

253  
	gÁl£
;

256 
	gcout
 << "#Çëli° inf‹m©i⁄" << 
	gídl
;

257 
	gcout
 << "#Çumbî o‡moduÀs: " << 
	gÁnMgr_
->
	g∆
->
gëNModuÀ
(Ë<< 
	gídl
;

258 
	gcout
 << "# modules: ";

259 
size_t
 
	gi
 = 0; i < 
	gÁnMgr_
->
	g∆
->
gëNModuÀ
(); ++i)

260 
	gcout
 << " " << 
	gÁnMgr_
->
	g∆
->
gëModuÀ
(
i
)->
	g«me_
;

261 
	gcout
 << 
	gídl
;

262 
Cñl
 *
	gt›
 = 
ÁnMgr_
->
∆
->
gëT›
();

263 
	gcout
 << "# cuºíàmoduÀ: " << 
	gt›
->
	g«me_
 << 
	gídl
;

264 
	gcout
 << "#Çumbî o‡p‹ts: " << 
	gt›
->
gëNP‹t
(Ë<< 
	gídl
;

265 
	gcout
 << "#Çumbî o‡˚Œs: " << 
	gt›
->
gëNCñl
(Ë<< 
	gídl
;

266 
	gcout
 << "#Çumbî o‡√ts: " << 
	gt›
->
gëNNë
(Ë<< 
	gídl
;

267 i‡(!
	g›tMgr_
.
isFœgSë
("more"))

268  
	gåue
;

269 
	gcout
 << "#Öorts: ";

270 
size_t
 
	gi
 = 0; i < 
	gt›
->
gëNP‹t
(); ++i)

271 
	gcout
 << " " << 
	gt›
->
gëP‹t
(
i
)->
	g«me_
;

272 
	gcout
 << 
	gídl
;

273 
	gcout
 << "# cells: ";

274 
size_t
 
	gi
 = 0; i < 
	gt›
->
gëNCñl
(); ++i)

275 
	gcout
 << " " << 
	gt›
->
gëCñl
(
i
)->
	g«me_
;

276 
	gcout
 << 
	gídl
;

277 
	gcout
 << "#Çets: ";

278 
size_t
 
	gi
 = 0; i < 
	gt›
->
gëNNë
(); ++i)

279 
	gcout
 << " " << 
	gt›
->
gëNë
(
i
)->
	g«me_
;

280 
	gcout
 << 
	gídl
;

282  
	gåue
;

286 
	gRï‹tCñlCmd
::
Rï‹tCñlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

287 
	$Cmd
(
«me
) {

288 
ÁnMgr_
 = 
ÁnMgr
;

289 
›tMgr_
.
	`£tName
(
«me
);

290 
›tMgr_
.
	`£tSh‹tDes
("report cell");

291 
›tMgr_
.
	`£tDes
("reports CELL information inÅheÇetlist");

292 
Arg
 *
¨g
 = 
√w
 
	`Arg
(Arg::
OPT_INF
,

295 
›tMgr_
.
	`ªgArg
(
¨g
);

296 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

297 
›t
->
	`addFœg
("h");

298 
›t
->
	`addFœg
("help");

299 
›tMgr_
.
	`ªgO±
(
›t
);

300 
	}
}

301 
	gRï‹tCñlCmd
::~
	$Rï‹tCñlCmd
(Ë{
	}
}

304 
boﬁ
 
Rï‹tCñlCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

305 
›tMgr_
.
∑r£
(
¨gv
);

307 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

308 
	g›tMgr_
.
ußge
();

309  
	gåue
;

312 i‡(!
	gÁnMgr_
->
	g∆
) {

313 
	g˚º
 << "**ERROR Rï‹tCñlCmd::exec():Çëli°Çìded" << 
	gídl
;

314  
	gÁl£
;

317 i‡(
	g›tMgr_
.
gëNP¨£dArg
() == 0)

318 
size_t
 
i
 = 0; 
	gi
 < 
	gÁnMgr_
->
	g∆
->
gëT›
()->
gëNCñl
(); ++i)

319 
ªp‹tCñl
(
i
);

321 
size_t
 
	gi
 = 0; i < 
	g›tMgr_
.
gëNP¨£dArg
(); ++i) {

322 
°rög
 
	g«me
 = 
›tMgr_
.
gëP¨£dArg
(
i
);

323 
Cñl
 *
	gc
 = 
ÁnMgr_
->
∆
->
gëT›
()->
gëCñl
(
«me
.
c_°r
());

324 i‡(!
	gc
) {

325 
	g˚º
 << "**ERROR ReportCellCmd::exec(): cell `";

326 
	g˚º
 << 
	g«me
 << "' d€†nŸÉxi°" << 
	gídl
;

329 
ªp‹tCñl
(
c
->
id_
);

333  
	gåue
;

336 
	gRï‹tCñlCmd
::
	$ªp‹tCñl
(c⁄° 
size_t
 &
i
) const {

337 
Cñl
 *
c
 = 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëCñl
(
i
);

338 
cout
 << "# Cñ»" << 
c
->
«me_
 << " " << c->
ty≥Name_
 << 
ídl
;

339 
CñlSë
 
fis
 = 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëF™ö
(
i
);

340 
cout
 << "# fi[" << 
fis
.
	`size
() << "]";

341 
CñlSë
::
ôî©‹
 
ô
 = 
fis
.
	`begö
(); ià!fis.
	`íd
(); ++it) {

342 
cout
 << " " << (*
ô
)->
«me_
;

344 
cout
 << 
ídl
;

345 
CñlSë
 
fos
 = 
ÁnMgr_
->
∆
->
	`gëT›
()->
	`gëF™out
(
i
);

346 
cout
 << "# fo[" << 
fos
.
	`size
() << "]";

347 
CñlSë
::
ôî©‹
 
ô
 = 
fos
.
	`begö
(); ià!fos.
	`íd
(); ++it) {

348 
cout
 << " " << (*
ô
)->
«me_
;

350 
cout
 << 
ídl
 <<Éndl;

351 
	}
}

354 
	gRï‹tLibCmd
::
Rï‹tLibCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

355 
	$Cmd
(
«me
) {

356 
ÁnMgr_
 = 
ÁnMgr
;

357 
›tMgr_
.
	`£tName
(
«me
);

358 
›tMgr_
.
	`£tSh‹tDes
("reportÜibrary");

359 
›tMgr_
.
	`£tDes
("reportÜibrary information");

360 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

361 
›t
->
	`addFœg
("h");

362 
›t
->
	`addFœg
("help");

363 
›tMgr_
.
	`ªgO±
(
›t
);

364 
	}
}

365 
	gRï‹tLibCmd
::~
	$Rï‹tLibCmd
(Ë{
	}
}

368 
boﬁ
 
Rï‹tLibCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

369 
›tMgr_
.
∑r£
(
¨gv
);

371 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

372 
	g›tMgr_
.
ußge
();

373  
	gåue
;

376 i‡(!
	gÁnMgr_
->
	glib
) {

377 
	g˚º
 << "**ERROR Rï‹tLibøryCmd::exec():ÜibøryÇìded" << 
	gídl
;

378  
	gÁl£
;

381 
	gcout
 << "#Üibøry inf‹m©i⁄" << 
	gídl
;

382 
	gcout
 << "#Çumbî o‡modñs: " << 
	gÁnMgr_
->
	glib
->
gëNCñl
(Ë<< 
	gídl
;

383 
	gcout
 << "# models: ";

384 
size_t
 
	gi
 = 0; i < 
	gÁnMgr_
->
	glib
->
gëNCñl
(); ++i)

385 
	gcout
 << " " << 
	gÁnMgr_
->
	glib
->
gëCñl
(
i
)->
	g«me_
;

386 
	gcout
 << 
	gídl
;

388  
	gåue
;

392 
	gBuûdCúcuôCmd
::
BuûdCúcuôCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

393 
	$Cmd
(
«me
) {

394 
ÁnMgr_
 = 
ÁnMgr
;

395 
›tMgr_
.
	`£tName
(
«me
);

396 
›tMgr_
.
	`£tSh‹tDes
("build circuit");

397 
›tMgr_
.
	`£tDes
("buildÇetlist into internal circuit data structure");

398 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

399 
›t
->
	`addFœg
("h");

400 
›t
->
	`addFœg
("help");

401 
›tMgr_
.
	`ªgO±
(
›t
);

402 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, "number of frames", "NUM");

403 
›t
->
	`addFœg
("f");

404 
›t
->
	`addFœg
("frame");

405 
›tMgr_
.
	`ªgO±
(
›t
);

406 
	}
}

407 
	gBuûdCúcuôCmd
::~
	$BuûdCúcuôCmd
(Ë{
	}
}

410 
boﬁ
 
BuûdCúcuôCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

411 
›tMgr_
.
∑r£
(
¨gv
);

413 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

414 
	g›tMgr_
.
ußge
();

415  
	gåue
;

418 i‡(!
	gÁnMgr_
->
	g∆
) {

419 
	g˚º
 << "**ERROR BuûdCúucôCmd::exec():Çëli°Çìded" << 
	gídl
;

420  
	gÁl£
;

423 
	gn‰ame
 = 1;

424 i‡(
	g›tMgr_
.
isFœgSë
("f")) {

425 
	gn‰ame
 = 
©oi
(
›tMgr_
.
gëFœgV¨
("f").
c_°r
());

426 
	gn‰ame
 = 
n‰ame
 < 1 ? 1 :Çframe;

429 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

430 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

432 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
 = 
√w
 
Cúcuô
;

434 
	gÁnMgr_
->
	gtmusg
.
≥riodSèπ
();

435 
	gcout
 << "# Buûdög cúcuô ..." << 
	gídl
;

436 if(
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 && f™Mgr_->©pg_mgr->pcﬁl_->
	gty≥_
 =
P©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
)

437 
ÁnMgr_
->
©pg_mgr
->
cú_
->
buûd
(ÁnMgr_->
∆
, 
n‰ame
, 
Cúcuô
::
SHIFT
);

439 
	gÁnMgr_
->
	g©pg_mgr
->
	gcú_
->
buûd
(
ÁnMgr_
->
∆
, 
n‰ame
);

441 
TmSèt
 
	g°©
;

442 
	gÁnMgr_
->
	gtmusg
.
gëPîiodUßge
(
°©
);

443 
	gcout
 << "# Finished building circuit";

444 
	gcout
 << " " << ()
	g°©
.
	grTime
 / 1000000.0 << " s";

445 
	gcout
 << " " << ()
	g°©
.
	gvmSize
 / 1024.0 << " MB" << 
	gídl
;

447  
	gåue
;

451 
	gSëP©ã∫Ty≥Cmd
::
SëP©ã∫Ty≥Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

452 
	$Cmd
(
«me
) {

453 
ÁnMgr_
 = 
ÁnMgr
;

454 
›tMgr_
.
	`£tName
(
«me
);

455 
›tMgr_
.
	`£tSh‹tDes
("setÖatternÅype");

456 
›tMgr_
.
	`£tDes
("setÖatternÅype. Currently supports basic scan,Üaunch on shiftándÜaunch on capture");

457 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "either BASIC, LOC or LOS",

459 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

460 
›t
->
	`addFœg
("h");

461 
›t
->
	`addFœg
("help");

462 
›tMgr_
.
	`ªgO±
(
›t
);

463 
	}
}

464 
	gSëP©ã∫Ty≥Cmd
::~
	$SëP©ã∫Ty≥Cmd
(Ë{
	}
}

467 
boﬁ
 
SëP©ã∫Ty≥Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

468 
›tMgr_
.
∑r£
(
¨gv
);

470 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

471 
	g›tMgr_
.
ußge
();

472  
	gåue
;

475 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

476 
	g˚º
 << "**ERROR SetPatternTypeCmd::exec():ÖatternÅypeÇeeded";

477 
	g˚º
 << 
	gídl
;

478  
	gÁl£
;

481 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

482 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

484 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
)

485 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

487 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "BASIC") {

488 
cout
 << "#Ö©ã∫Åy≥ sëÅÿbasi¯sˇn" << 
ídl
;

489 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gty≥_
 = 
P©ã∫Pro˚ss‹
::
BASIC_SCAN
;

491 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "LOC") {

492 
cout
 << "#Ö©ã∫Åy≥ sëÅÿœunch o¿ˇ±uª" << 
ídl
;

493 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gty≥_
 = 
P©ã∫Pro˚ss‹
::
LAUNCH_CAPTURE
;

495 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "LOS") {

496 
cout
 << "#Ö©ã∫Åy≥ sëÅÿœunch o¿shi·" << 
ídl
;

497 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gty≥_
 = 
P©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
;

498 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gnsi_
 = 1;

501 
	g˚º
 << "**ERROR SetPatternTypeCmd::exec(): unknownÖatternÅype `";

502 
	g˚º
 << 
	g›tMgr_
.
gëP¨£dArg
(0Ë<< "'" << 
	gídl
;

503  
	gÁl£
;

506  
	gåue
;

510 
	gSëSèticCom¥essi⁄Cmd
::
SëSèticCom¥essi⁄Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

511 
	$Cmd
(
«me
) {

512 
ÁnMgr_
 = 
ÁnMgr
;

513 
›tMgr_
.
	`£tName
(
«me
);

514 
›tMgr_
.
	`£tSh‹tDes
("set static compression");

515 
›tMgr_
.
	`£tDes
("set static compression on/off");

516 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "either on or off",

518 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

519 
›t
->
	`addFœg
("h");

520 
›t
->
	`addFœg
("help");

521 
›tMgr_
.
	`ªgO±
(
›t
);

522 
	}
}

523 
	gSëSèticCom¥essi⁄Cmd
::~
	$SëSèticCom¥essi⁄Cmd
(Ë{
	}
}

526 
boﬁ
 
SëSèticCom¥essi⁄Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

527 
›tMgr_
.
∑r£
(
¨gv
);

529 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

530 
	g›tMgr_
.
ußge
();

531  
	gåue
;

534 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

535 
	g˚º
 << "**ERROR SetStaticCompressionCmd::exec(): on/offÇeeded";

536 
	g˚º
 << 
	gídl
;

537  
	gÁl£
;

540 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

541 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

543 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
)

544 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

547 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "on") {

548 
cout
 << "# sèti¯com¥essi⁄ sëÅÿ⁄" << 
ídl
;

550 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g°©icCom¥essi⁄_
 = 
P©ã∫Pro˚ss‹
::
ON
;

552 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "off") {

553 
cout
 << "# sèti¯com¥essi⁄ sëÅÿoff" << 
ídl
;

555 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	g°©icCom¥essi⁄_
 = 
P©ã∫Pro˚ss‹
::
OFF
;

558 
	g˚º
 << "**ERROR SetStaticCompressionCmd::exec(): unknownárgument `";

559 
	g˚º
 << 
	g›tMgr_
.
gëP¨£dArg
(0Ë<< "'" << 
	gídl
;

560  
	gÁl£
;

563  
	gåue
;

567 
	gSëDy«micCom¥essi⁄Cmd
::
SëDy«micCom¥essi⁄Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

568 
	$Cmd
(
«me
) {

569 
ÁnMgr_
 = 
ÁnMgr
;

570 
›tMgr_
.
	`£tName
(
«me
);

571 
›tMgr_
.
	`£tSh‹tDes
("set dynamic compression");

572 
›tMgr_
.
	`£tDes
("set dynamic compression on/off");

573 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "either on or off",

575 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

576 
›t
->
	`addFœg
("h");

577 
›t
->
	`addFœg
("help");

578 
›tMgr_
.
	`ªgO±
(
›t
);

579 
	}
}

580 
	gSëDy«micCom¥essi⁄Cmd
::~
	$SëDy«micCom¥essi⁄Cmd
(Ë{
	}
}

583 
boﬁ
 
SëDy«micCom¥essi⁄Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

584 
›tMgr_
.
∑r£
(
¨gv
);

586 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

587 
	g›tMgr_
.
ußge
();

588  
	gåue
;

591 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

592 
	g˚º
 << "**ERROR SetDynamicCompressionCmd::exec(): on/offÇeeded";

593 
	g˚º
 << 
	gídl
;

594  
	gÁl£
;

597 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

598 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

600 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
)

601 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

604 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "on") {

605 
cout
 << "# dy«mi¯com¥essi⁄ sëÅÿ⁄" << 
ídl
;

607 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gdy«micCom¥essi⁄_
 = 
P©ã∫Pro˚ss‹
::
ON
;

609 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "off") {

610 
cout
 << "# dy«mi¯com¥essi⁄ sëÅÿoff" << 
ídl
;

612 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gdy«micCom¥essi⁄_
 = 
P©ã∫Pro˚ss‹
::
OFF
;

615 
	g˚º
 << "**ERROR SetDynamicCompressionCmd::exec(): unknownárgument `";

616 
	g˚º
 << 
	g›tMgr_
.
gëP¨£dArg
(0Ë<< "'" << 
	gídl
;

617  
	gÁl£
;

620  
	gåue
;

624 
	gSëXFûlCmd
::
SëXFûlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
) :

625 
	$Cmd
(
«me
) {

626 
ÁnMgr_
 = 
ÁnMgr
;

627 
›tMgr_
.
	`£tName
(
«me
);

628 
›tMgr_
.
	`£tSh‹tDes
("set X-Fill");

629 
›tMgr_
.
	`£tDes
("set X-Fill on/off");

630 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "either on or off",

632 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

633 
›t
->
	`addFœg
("h");

634 
›t
->
	`addFœg
("help");

635 
›tMgr_
.
	`ªgO±
(
›t
);

636 
	}
}

637 
	gSëXFûlCmd
::~
	$SëXFûlCmd
(Ë{
	}
}

640 
boﬁ
 
SëXFûlCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

641 
›tMgr_
.
∑r£
(
¨gv
);

643 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

644 
	g›tMgr_
.
ußge
();

645  
	gåue
;

648 i‡(
	g›tMgr_
.
gëNP¨£dArg
() < 1) {

649 
	g˚º
 << "**ERROR SetXFillCmd::exec(): on/offÇeeded";

650 
	g˚º
 << 
	gídl
;

651  
	gÁl£
;

654 i‡(!
	gÁnMgr_
->
	g©pg_mgr
)

655 
	gÁnMgr_
->
	g©pg_mgr
 = 
√w
 
AçgMgr
;

657 i‡(!
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
)

658 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
 = 
√w
 
P©ã∫Pro˚ss‹
;

661 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "on") {

662 
cout
 << "# X-Fû»£àtÿ⁄" << 
ídl
;

664 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gXFûl_
 = 
P©ã∫Pro˚ss‹
::
ON
;

666 i‡(
	g›tMgr_
.
gëP¨£dArg
(0) == "off") {

667 
cout
 << "# X-Fû»£àtÿoff" << 
ídl
;

669 
	gÁnMgr_
->
	g©pg_mgr
->
	gpcﬁl_
->
	gXFûl_
 = 
P©ã∫Pro˚ss‹
::
OFF
;

672 
	g˚º
 << "**ERROR SetXFillCmd::exec(): unknownárgument `";

673 
	g˚º
 << 
	g›tMgr_
.
gëP¨£dArg
(0Ë<< "'" << 
	gídl
;

674  
	gÁl£
;

677  
	gåue
;

	@atpg/src/setup_cmd.h

8 #i‚de‡
_FAN_SETUP_CMD_H_


9 
	#_FAN_SETUP_CMD_H_


	)

11 
	~"comm⁄/cmd.h
"

13 
	~"Án_mgr.h
"

15 
«me•a˚
 
	gF™Ns
 {

18 ˛as†
	cRódLibCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

19 
public
:

20 
RódLibCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

21 ~
RódLibCmd
();

23 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

25 
	g¥iv©e
:

26 
F™Mgr
 *
ÁnMgr_
;

29 ˛as†
	cRódNlCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

30 
public
:

31 
RódNlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

32 ~
RódNlCmd
();

34 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

36 
	g¥iv©e
:

37 
F™Mgr
 *
ÁnMgr_
;

40 ˛as†
	cSëFau…Ty≥Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

41 
public
:

42 
SëFau…Ty≥Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

43 ~
SëFau…Ty≥Cmd
();

45 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

47 
	g¥iv©e
:

48 
F™Mgr
 *
ÁnMgr_
;

51 ˛as†
	cRï‹tNëli°Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

52 
public
:

53 
Rï‹tNëli°Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

54 ~
Rï‹tNëli°Cmd
();

56 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

58 
	g¥iv©e
:

59 
F™Mgr
 *
ÁnMgr_
;

62 ˛as†
	cRï‹tCñlCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

63 
public
:

64 
Rï‹tCñlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

65 ~
Rï‹tCñlCmd
();

67 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

69 
	g¥iv©e
:

70 
F™Mgr
 *
ÁnMgr_
;

71 
ªp‹tCñl
(c⁄° 
size_t
 &
i
) const;

74 ˛as†
	cRï‹tLibCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

75 
public
:

76 
Rï‹tLibCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

77 ~
Rï‹tLibCmd
();

79 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

81 
	g¥iv©e
:

82 
F™Mgr
 *
ÁnMgr_
;

85 ˛as†
	cBuûdCúcuôCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

86 
public
:

87 
BuûdCúcuôCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

88 ~
BuûdCúcuôCmd
();

90 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

92 
	g¥iv©e
:

93 
F™Mgr
 *
ÁnMgr_
;

97 ˛as†
	cSëP©ã∫Ty≥Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

98 
public
:

99 
SëP©ã∫Ty≥Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

100 ~
SëP©ã∫Ty≥Cmd
();

102 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

104 
	g¥iv©e
:

105 
F™Mgr
 *
ÁnMgr_
;

108 ˛as†
	cSëSèticCom¥essi⁄Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

109 
public
:

110 
SëSèticCom¥essi⁄Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

111 ~
SëSèticCom¥essi⁄Cmd
();

113 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

115 
	g¥iv©e
:

116 
F™Mgr
 *
ÁnMgr_
;

119 ˛as†
	cSëDy«micCom¥essi⁄Cmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

120 
public
:

121 
SëDy«micCom¥essi⁄Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

122 ~
SëDy«micCom¥essi⁄Cmd
();

124 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

126 
	g¥iv©e
:

127 
F™Mgr
 *
ÁnMgr_
;

130 ˛as†
	cSëXFûlCmd
 : 
public
 
Comm⁄Ns
::
Cmd
 {

131 
public
:

132 
SëXFûlCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
F™Mgr
 *
ÁnMgr
);

133 ~
SëXFûlCmd
();

135 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

137 
	g¥iv©e
:

138 
F™Mgr
 *
ÁnMgr_
;

	@common/src/ascii.h

8 #i‚de‡
_COMMON_ASCII_H_


9 
	#_COMMON_ASCII_H_


	)

11 
«me•a˚
 
	gComm⁄Ns
 {

14 c⁄° 
	gASCII_MIN_PR
 = 0x20;

15 c⁄° 
	gASCII_MAX_PR
 = 0x7e;

18 c⁄° 
	gASCII_NUL
 = 0x00;

19 c⁄° 
	gASCII_SOH
 = 0x01;

20 c⁄° 
	gASCII_STX
 = 0x02;

21 c⁄° 
	gASCII_ETX
 = 0x03;

22 c⁄° 
	gASCII_EOT
 = 0x04;

23 c⁄° 
	gASCII_ENQ
 = 0x05;

24 c⁄° 
	gASCII_ACK
 = 0x06;

25 c⁄° 
	gASCII_BEL
 = 0x07;

26 c⁄° 
	gASCII_BS
 = 0x08;

27 c⁄° 
	gASCII_HT
 = 0x09;

28 c⁄° 
	gASCII_LF
 = 0x0a;

29 c⁄° 
	gASCII_VT
 = 0x0b;

30 c⁄° 
	gASCII_FF
 = 0x0c;

31 c⁄° 
	gASCII_CR
 = 0x0d;

32 c⁄° 
	gASCII_SO
 = 0x0e;

33 c⁄° 
	gASCII_SI
 = 0x0f;

34 c⁄° 
	gASCII_DLE
 = 0x10;

35 c⁄° 
	gASCII_DC1
 = 0x11;

36 c⁄° 
	gASCII_DC2
 = 0x12;

37 c⁄° 
	gASCII_DC3
 = 0x13;

38 c⁄° 
	gASCII_DC4
 = 0x14;

39 c⁄° 
	gASCII_NAK
 = 0x15;

40 c⁄° 
	gASCII_SYN
 = 0x16;

41 c⁄° 
	gASCII_ETB
 = 0x17;

42 c⁄° 
	gASCII_CAN
 = 0x18;

43 c⁄° 
	gASCII_EM
 = 0x19;

44 c⁄° 
	gASCII_SUB
 = 0x1a;

45 c⁄° 
	gASCII_ESC
 = 0x1b;

46 c⁄° 
	gASCII_FS
 = 0x1c;

47 c⁄° 
	gASCII_GS
 = 0x1d;

48 c⁄° 
	gASCII_RS
 = 0x1e;

49 c⁄° 
	gASCII_US
 = 0x1f;

50 c⁄° 
	gASCII_DEL
 = 0x7f;

53 c⁄° 
	gASCII_SPACE
 = 0x20;

54 c⁄° 
	gASCII_EXCLM
 = 0x21;

55 c⁄° 
	gASCII_QUOT
 = 0x22;

56 c⁄° 
	gASCII_HASH
 = 0x23;

57 c⁄° 
	gASCII_DOLLR
 = 0x24;

58 c⁄° 
	gASCII_PCT
 = 0x25;

59 c⁄° 
	gASCII_AMP
 = 0x26;

60 c⁄° 
	gASCII_APOST
 = 0x27;

61 c⁄° 
	gASCII_L_RND
 = 0x28;

62 c⁄° 
	gASCII_R_RND
 = 0x29;

63 c⁄° 
	gASCII_ASTER
 = 0x2a;

64 c⁄° 
	gASCII_PLUS
 = 0x2b;

65 c⁄° 
	gASCII_COMMA
 = 0x2c;

66 c⁄° 
	gASCII_MINUS
 = 0x2d;

67 c⁄° 
	gASCII_DOT
 = 0x2e;

68 c⁄° 
	gASCII_SLASH
 = 0x2f;

69 c⁄° 
	gASCII_0
 = 0x30;

70 c⁄° 
	gASCII_1
 = 0x31;

71 c⁄° 
	gASCII_2
 = 0x32;

72 c⁄° 
	gASCII_3
 = 0x33;

73 c⁄° 
	gASCII_4
 = 0x34;

74 c⁄° 
	gASCII_5
 = 0x35;

75 c⁄° 
	gASCII_6
 = 0x36;

76 c⁄° 
	gASCII_7
 = 0x37;

77 c⁄° 
	gASCII_8
 = 0x38;

78 c⁄° 
	gASCII_9
 = 0x39;

79 c⁄° 
	gASCII_COLON
 = 0x3a;

80 c⁄° 
	gASCII_SEMI
 = 0x3b;

81 c⁄° 
	gASCII_L_ANG
 = 0x3c;

82 c⁄° 
	gASCII_EQUAL
 = 0x3d;

83 c⁄° 
	gASCII_R_ANG
 = 0x3e;

84 c⁄° 
	gASCII_QUES
 = 0x3f;

85 c⁄° 
	gASCII_AT
 = 0x40;

86 c⁄° 
	gASCII_A
 = 0x41;

87 c⁄° 
	gASCII_B
 = 0x42;

88 c⁄° 
	gASCII_C
 = 0x43;

89 c⁄° 
	gASCII_D
 = 0x44;

90 c⁄° 
	gASCII_E
 = 0x45;

91 c⁄° 
	gASCII_F
 = 0x46;

92 c⁄° 
	gASCII_G
 = 0x47;

93 c⁄° 
	gASCII_H
 = 0x48;

94 c⁄° 
	gASCII_I
 = 0x49;

95 c⁄° 
	gASCII_J
 = 0x4a;

96 c⁄° 
	gASCII_K
 = 0x4b;

97 c⁄° 
	gASCII_L
 = 0x4c;

98 c⁄° 
	gASCII_M
 = 0x4d;

99 c⁄° 
	gASCII_N
 = 0x4e;

100 c⁄° 
	gASCII_O
 = 0x4f;

101 c⁄° 
	gASCII_P
 = 0x50;

102 c⁄° 
	gASCII_Q
 = 0x51;

103 c⁄° 
	gASCII_R
 = 0x52;

104 c⁄° 
	gASCII_S
 = 0x53;

105 c⁄° 
	gASCII_T
 = 0x54;

106 c⁄° 
	gASCII_U
 = 0x55;

107 c⁄° 
	gASCII_V
 = 0x56;

108 c⁄° 
	gASCII_W
 = 0x57;

109 c⁄° 
	gASCII_X
 = 0x58;

110 c⁄° 
	gASCII_Y
 = 0x59;

111 c⁄° 
	gASCII_Z
 = 0x5a;

112 c⁄° 
	gASCII_L_SQU
 = 0x5b;

113 c⁄° 
	gASCII_B_SSH
 = 0x5c;

114 c⁄° 
	gASCII_R_SQU
 = 0x5d;

115 c⁄° 
	gASCII_CARET
 = 0x5e;

116 c⁄° 
	gASCII_UNDER
 = 0x5f;

117 c⁄° 
	gASCII_ACCNT
 = 0x60;

118 c⁄° 
	gASCII_a
 = 0x61;

119 c⁄° 
	gASCII_b
 = 0x62;

120 c⁄° 
	gASCII_c
 = 0x63;

121 c⁄° 
	gASCII_d
 = 0x64;

122 c⁄° 
	gASCII_e
 = 0x65;

123 c⁄° 
	gASCII_f
 = 0x66;

124 c⁄° 
	gASCII_g
 = 0x67;

125 c⁄° 
	gASCII_h
 = 0x68;

126 c⁄° 
	gASCII_i
 = 0x69;

127 c⁄° 
	gASCII_j
 = 0x6a;

128 c⁄° 
	gASCII_k
 = 0x6b;

129 c⁄° 
	gASCII_l
 = 0x6c;

130 c⁄° 
	gASCII_m
 = 0x6d;

131 c⁄° 
	gASCII_n
 = 0x6e;

132 c⁄° 
	gASCII_o
 = 0x6f;

133 c⁄° 
	gASCII_p
 = 0x70;

134 c⁄° 
	gASCII_q
 = 0x71;

135 c⁄° 
	gASCII_r
 = 0x72;

136 c⁄° 
	gASCII_s
 = 0x73;

137 c⁄° 
	gASCII_t
 = 0x74;

138 c⁄° 
	gASCII_u
 = 0x75;

139 c⁄° 
	gASCII_v
 = 0x76;

140 c⁄° 
	gASCII_w
 = 0x77;

141 c⁄° 
	gASCII_x
 = 0x78;

142 c⁄° 
	gASCII_y
 = 0x79;

143 c⁄° 
	gASCII_z
 = 0x7a;

144 c⁄° 
	gASCII_L_SCO
 = 0x7b;

145 c⁄° 
	gASCII_VBAR
 = 0x7c;

146 c⁄° 
	gASCII_R_SCO
 = 0x7d;

147 c⁄° 
	gASCII_TILDE
 = 0x7e;

	@common/src/cmd.cpp

8 
	~<sys/io˘l.h
>

9 
	~<sys/°©.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<pwd.h
>

12 
	~<uni°d.h
>

13 
	~<ãrmios.h
>

14 
	~<dúít.h
>

15 
	~<c°dlib
>

16 
	~<c°rög
>

17 
	~<iom™ù
>

19 
	~"ascii.h
"

20 
	~"vt100.h
"

21 
	~"cmd.h
"

23 
usög
 
«me•a˚
 
	g°d
;

24 
usög
 
«me•a˚
 
	gComm⁄Ns
;

26 
°rög
 
	gCmdMgr
::
	$ex∑ndV¨
(c⁄° 
°rög
 &
°r
) const {

27 
°rög
 
exp
 = 
°r
;

28 
size_t
 
i
 = 0; i < 
exp
.
	`size
(); ++i) {

29 i‡(
exp
[
i
] =
ASCII_DOLLR
) {

30 
size_t
 
j
 = 
i
 + 1;

31 i‡(
j
 < 
exp
.
	`size
(Ë&&Éxp[j] =
ASCII_L_SCO
)

32 
j
++;

33 
°rög
 
v¨
 = "";

34 
	`isLegÆV¨Ch¨
(
exp
[
j
])) {

35 
v¨
 +
exp
[
j
];

36 
j
++;

38 
m≠
<
°rög
, såög>::
c⁄°_ôî©‹
 
ô
 = 
v¨M≠_
.
	`föd
(
v¨
);

39 
°rög
 
ªp
 = 
ô
 =
v¨M≠_
.
	`íd
(Ë? "" : it->
£c⁄d
;

40 i‡(
ªp
.
	`size
() == 0)

41 i‡(
	`gëív
(
v¨
.
	`c_°r
()))

42 
ªp
 = 
	`gëív
(
v¨
.
	`c_°r
());

43 i‡(
j
 < 
exp
.
	`size
(Ë&&Éxp[j] =
ASCII_R_SCO
)

44 
j
++;

45 
exp
.
	`ª∂a˚
(
i
, 
j
 - i, 
ªp
);

46 
i
 +
ªp
.
	`size
();

49  
exp
;

50 
	}
}

52 
°rög
 
	gCmdMgr
::
	$ex∑ndHome
(c⁄° 
°rög
 &
∑th
) const {

53 
°rög
 
exp
 = 
∑th
;

54 
size_t
 
i
 = 0; i < 
exp
.
	`size
(); ++i) {

55 i‡(
exp
[
i
] == '~') {

56 
size_t
 
j
 = 
i
 + 1;

57 
j
 < 
exp
.
	`size
(Ë&& 
	`isLegÆV¨Ch¨
(exp[j]))

58 
j
++;

59 
°rög
 
u«me
 = 
exp
.
	`sub°r
(
i
, 
j
 - i);

60 
∑sswd
 *
¥ofûe
 = 
NULL
;

61 i‡(
u«me
.
	`size
() == 1)

62 
¥ofûe
 = 
	`gëpwuid
(
	`gëuid
());

64 
¥ofûe
 = 
	`gëpw«m
(
u«me
.
	`sub°r
(1).
	`c_°r
());

65 i‡(
¥ofûe
) {

66 
exp
.
	`ª∂a˚
(
i
, 
j
 - i, 
¥ofûe
->
pw_dú
);

67 
i
 +
	`°æí
(
¥ofûe
->
pw_dú
);

70 
i
 = 
j
;

73  
exp
;

74 
	}
}

76 
	gCmdMgr
::
	$gëTîmCﬁ
() const {

77 
fd
 = 
	`fûío
(
°dout
);

78 
wösize
 
ts
;

79 
	`io˘l
(
fd
, 
TIOCGWINSZ
, &
ts
);

80  
ts
.
ws_cﬁ
;

81 
	}
}

83 
size_t
 
	gCmdMgr
::
	$cmnPªfix
(c⁄° 
°rög
 &
s1
, c⁄° såög &
s2
) const {

84 
size_t
 
i
 = 0;

85  ; 
i
 < 
s1
.
	`size
(Ë&& i < 
s2
.size() && s1[i] == s2[i]; ++i)

87  
i
;

88 
	}
}

90 
Cmd
 *
	gCmdMgr
::
	$gëCmd
(c⁄° 
°rög
 &
«me
) const {

91 i‡(
cmdM≠_
.
	`föd
(
«me
Ë!cmdM≠_.
	`íd
())

92  
cmdM≠_
.
	`föd
(
«me
)->
£c⁄d
;

94  
NULL
;

95 
	}
}

97 
	gCmdMgr
::
	$ußge
(
o°ªam
 &
out
) {

98 
C©M≠Iãr
 
cIt
 = 
ˇtM≠_
.
	`begö
(); cIà!ˇtM≠_.
	`íd
(); ++cIt) {

99 
out
 << 
cIt
->
fú°
 << " comm™ds" << 
ídl
;

100 
size_t
 
maxLí
 = 0;

101 
£t
<
°rög
>::
ôî©‹
 
£tIt
 = 
cIt
->
£c⁄d
.
	`begö
();

102  ; 
£tIt
 !
cIt
->
£c⁄d
.
	`íd
(); ++setIt)

103 i‡(
maxLí
 < (*
£tIt
).
	`size
())

104 
maxLí
 = (*
£tIt
).
	`size
();

105 
£tIt
 = 
cIt
->
£c⁄d
.
	`begö
();

106 
size_t
 
cmdsPîLöe
 = (size_t)
	`gëTîmCﬁ
(Ë/ (
maxLí
 + 2);

107 
size_t
 
i
 = 0;

108  ; 
£tIt
 !
cIt
->
£c⁄d
.
	`íd
(); ++£tIt, ++
i
) {

109 
out
 << 
	`£tw
(
maxLí
 + 2Ë<< 
À·
 << (*
£tIt
);

110 i‡((
i
 + 1Ë% 
cmdsPîLöe
 == 0)

111 
out
 << 
ídl
;

113 i‡(
cIt
->
£c⁄d
.
	`size
(Ë% 
cmdsPîLöe
 != 0)

114 
out
 << 
ídl
;

115 
out
 << 
ídl
;

117 
	}
}

125 
	gCmdMgr
::
	$ªgCmd
(c⁄° 
°rög
 &
ˇt
, 
Cmd
 * c⁄° 
cmd
) {

126 
°rög
 
«me
 = 
cmd
->
	`gëName
();

127 i‡(
cmdM≠_
.
	`föd
(
«me
Ë=cmdM≠_.
	`íd
()) {

128 
cmdM≠_
[
«me
] = 
cmd
;

129 i‡(
ˇtM≠_
.
	`föd
(
ˇt
Ë=ˇtM≠_.
	`íd
()) {

130 
£t
<
°rög
> 
cmdSåSë
;

131 
cmdSåSë
.
	`ö£π
(
«me
);

132 
ˇtM≠_
[
ˇt
] = 
cmdSåSë
;

135 
ˇtM≠_
.
	`föd
(
ˇt
)->
£c⁄d
.
	`ö£π
(
«me
);

138 
˚º
 << "**ERROR CmdMgr::ªgCmd(): Thêcomm™d `" << 
«me
;

139 
˚º
 << "' ha†Æªady bì¿ªgi°îed" << 
ídl
;

140 
îr‹_
 = 
E_EXIST
;

142 
	}
}

150 
	gCmdMgr
::
	$£tStdö
() const {

151 
fd
 = 
	`fûío
(
°dö
);

152 
ãrmios
 
tcÊags
;

153 
	`tcgë©å
(
fd
, &
tcÊags
);

154 
tcÊags
.
c_lÊag
 &~(
ICANON
 | 
ECHO
);

155 
	`tc£èâr
(
fd
, 
TCSANOW
, &
tcÊags
);

156 
	}
}

164 
	gCmdMgr
::
	$ª£tStdö
() const {

165 
fd
 = 
	`fûío
(
°dö
);

166 
ãrmios
 
tcÊags
;

167 
	`tcgë©å
(
fd
, &
tcÊags
);

168 
tcÊags
.
c_lÊag
 |
ICANON
 | 
ECHO
;

169 
	`tc£èâr
(
fd
, 
TCSANOW
, &
tcÊags
);

170 
	}
}

178 
	gve˘‹
<
	g°rög
> 
	gCmdMgr
::
	$gëDúCts
(c⁄° 
°rög
 &
dúSå
) const {

179 
ve˘‹
<
°rög
> 
˘s
;

180 
DIR
 *
dú
;

181 
dúít
 *
dúCts
;

182 i‡((
dú
 = 
	`›ídú
(
dúSå
.
	`c_°r
())Ë!
NULL
) {

183 (
dúCts
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

184 
°rög
 
ôem
 = 
	`°rög
(
dúCts
->
d_«me
);

185 i‡(
ôem
 != "." && item != "..")

186 
˘s
.
	`push_back
(
	`°rög
(
dúCts
->
d_«me
));

188 
	`˛o£dú
(
dú
);

190  
˘s
;

191 
	}
}

200 
	gCmdMgr
::
Resu…
 
CmdMgr
::
	$ªad
() {

201 
	`£tStdö
();

204 
cout
 << 
VT100_ARM_ON
 << 
VT100_CSRS
 << 
Êush
;

207 
ch
 = -1;

208 
cmdSå_
 = "";

209 
c§Pos_
 = 0;

210 
maxPos_
 = 
¥om±_
.
	`size
();

211 
cmdHisPå_
 = 
cmdHis_
.
	`size
();

212 
°rög
 
cmdSåBak
 = "";

213 
size_t
 
c§PosBak
 = 0;

214 
	`ª‰esh
();

215 
ch
 !
ASCII_LF
) {

216 
ch
 = 
	`gëch¨
();

218 i‡(
ch
 >
ASCII_MIN_PR
 && ch <
ASCII_MAX_PR
) {

219 
cmdSå_
.
	`ö£π
(cmdSå_.
	`begö
(Ë+ 
c§Pos_
, 
ch
);

220 
c§Pos_
++;

221 
	`ª‰esh
();

224 i‡(
ch
 < 
ASCII_MIN_PR
 || ch > 
ASCII_MAX_PR
) {

225 
ch
) {

239 
ASCII_DEL
:

240 i‡(
c§Pos_
 > 0) {

241 
c§Pos_
--;

242 
cmdSå_
.
	`îa£
(cmdSå_.
	`begö
(Ë+ 
c§Pos_
);

243 
	`ª‰esh
();

247 
ASCII_BS
:

248 i‡(
c§Pos_
 > 0) {

249 
c§Pos_
--;

250 
cmdSå_
.
	`îa£
(cmdSå_.
	`begö
(Ë+ 
c§Pos_
);

251 
	`ª‰esh
();

255 
ASCII_HT
:

256 
	`autoCm∂t
();

257 
	`ª‰esh
();

260 
ASCII_ESC
:

261 
ch1
, 
ch2
;

262 
ch1
 = 
	`gëch¨
()) {

263 
ASCII_L_SQU
:

264 
ch2
 = 
	`gëch¨
()) {

266 
ASCII_A
:

267 i‡(
cmdHisPå_
 =
cmdHis_
.
	`size
()) {

268 
cmdSåBak
 = 
cmdSå_
;

269 
c§PosBak
 = 
c§Pos_
;

271 i‡(
cmdHisPå_
 > 0) {

272 
cmdHisPå_
--;

273 
cmdSå_
 = 
cmdHis_
[
cmdHisPå_
];

274 
c§Pos_
 = 
cmdHis_
[
cmdHisPå_
].
	`size
();

276 
	`ª‰esh
();

278 
ASCII_B
:

279 i‡(
cmdHisPå_
 + 1 < 
cmdHis_
.
	`size
()) {

280 
cmdHisPå_
++;

281 
cmdSå_
 = 
cmdHis_
[
cmdHisPå_
];

282 
c§Pos_
 = 
cmdHis_
[
cmdHisPå_
].
	`size
();

285 
cmdHisPå_
 = 
cmdHis_
.
	`size
();

286 
cmdSå_
 = 
cmdSåBak
;

287 
c§Pos_
 = 
c§PosBak
;

289 
	`ª‰esh
();

291 
ASCII_C
:

292 i‡(
c§Pos_
 < 
cmdSå_
.
	`size
()) {

293 
c§Pos_
++;

294 
	`ª‰esh
();

297 
ASCII_D
:

298 i‡(
c§Pos_
 > 0) {

299 
c§Pos_
--;

300 
	`ª‰esh
();

305 
ASCII_1
:

306 
	`gëch¨
();

307 
c§Pos_
 = 0;

308 
	`ª‰esh
();

310 
ASCII_3
:

311 
	`gëch¨
();

312 i‡(
c§Pos_
 < 
cmdSå_
.
	`size
()) {

313 
cmdSå_
.
	`îa£
(cmdSå_.
	`begö
()

314 + 
c§Pos_
);

315 
	`ª‰esh
();

318 
ASCII_4
:

319 
	`gëch¨
();

320 
c§Pos_
 = 
cmdSå_
.
	`size
();

321 
	`ª‰esh
();

323 
ASCII_2
:

324 
ASCII_5
:

325 
ASCII_6
:

326 
	`gëch¨
();

330 #ifde‡
DEBUG_MODE


331 
cout
 << 
ídl
 << 
ch1
 << " ";

332 
cout
 << 
ch2
 << 
ídl
;

338 
ASCII_O
:

340 i‡((
ch2
 = 
	`gëch¨
()Ë=
ASCII_H
)

341 
c§Pos_
 = 0;

342 i‡(
ch2
 =
ASCII_F
)

343 
c§Pos_
 = 
cmdSå_
.
	`size
();

344 
	`ª‰esh
();

348 #ifde‡
DEBUG_MODE


349 
cout
 << 
ídl
 << 
ch1
 <<Éndl;

358 i‡(
ch
 !
ASCII_LF
)

359 
ch
 = -1;

361 
cout
 << 
ídl
;

363 
	`ª£tStdö
();

365  
	`exec
(
cmdSå_
);

366 
	}
}

376 
	gCmdMgr
::
	$ª‰esh
() {

378 i‡(
¥om±_
.
	`size
(Ë+ 
cmdSå_
.size(Ë> 
maxPos_
) {

379 
size_t
 
nLöePªv
 = 
maxPos_
 / (size_t)
	`gëTîmCﬁ
();

380 
maxPos_
 = 
¥om±_
.
	`size
(Ë+ 
cmdSå_
.size();

381 
size_t
 
nLöeCur
 = 
maxPos_
 / (size_t)
	`gëTîmCﬁ
();

382 
size_t
 
i
 = 0; i < 
nLöeCur
 - 
nLöePªv
; ++i)

383 
cout
 << 
VT100_SCRU
;

387 
size_t
 
nRow
 = 
maxPos_
 / (size_t)
	`gëTîmCﬁ
();

388 
cout
 << 
VT100_CSRR
;

389 
size_t
 
i
 = 0; i < 
nRow
; ++i)

390 
cout
 << 
VT100_CSRU
;

391 
cout
 << 
VT100_ERSD
 << 
Êush
;

394 
cﬁ‹_
) {

395 
BLACK
:

396 
cout
 << 
ANSI_BLACK
;

398 
RED
:

399 
cout
 << 
ANSI_RED
;

401 
GREEN
:

402 
cout
 << 
ANSI_GREEN
;

404 
YELLOW
:

405 
cout
 << 
ANSI_YELLOW
;

407 
BLUE
:

408 
cout
 << 
ANSI_BLUE
;

410 
PURPLE
:

411 
cout
 << 
ANSI_PURPLE
;

413 
CYAN
:

414 
cout
 << 
ANSI_CYAN
;

416 
WHITE
:

417 
cout
 << 
ANSI_WHITE
;

420 
cout
 << 
ANSI_WHITE
;

423 
cout
 << 
¥om±_
 << 
ANSI_RESET
 << 
cmdSå_
;

426 
size_t
 
c§Lí
 = 
¥om±_
.
	`size
(Ë+ 
c§Pos_
;

427 
size_t
 
row
 = 
nRow
 - 
c§Lí
 / (size_t)
	`gëTîmCﬁ
();

428 
size_t
 
cﬁ
 = 
c§Lí
 % (size_t)
	`gëTîmCﬁ
();

429 
cout
 << 
VT100_CSRR
;

430 
size_t
 
i
 = 0; i < 
row
; ++i)

431 
cout
 << 
VT100_CSRU
;

432 
size_t
 
i
 = 0; i < 
cﬁ
; ++i)

433 
cout
 << 
VT100_CSRF
;

435 
cout
 << 
Êush
;

436 
	}
}

446 
	gve˘‹
<
	g°rög
> 
	gCmdMgr
::
	$∑r£
(c⁄° 
°rög
 &
cmdSå
) const {

447 
ch
;

448 
size_t
 
i
 = 0;

449 
°rög
 
°r
 = "";

450 
boﬁ
 
öQuŸ
 = 
Ál£
;

451 
ve˘‹
<
°rög
> 
¨gv
;

452 
i
 < 
cmdSå
.
	`size
()) {

453 
ch
 = 
cmdSå
[
i
];

456 i‡(
ch
 =
commít_
) {

457 i‡(
°r
 != "")

458 
¨gv
.
	`push_back
(
°r
);

459  
¨gv
;

463 i‡(
ch
 =
ASCII_QUOT
)

464 
öQuŸ
 = inQuŸ ? 
Ál£
 : 
åue
;

467 i‡(
ch
 =
ASCII_R_ANG
 && !
öQuŸ
) {

468 i‡(
°r
 != "") {

469 
¨gv
.
	`push_back
(
°r
);

470 
°r
 = "";

472 i‡(
i
 + 1 < 
cmdSå
.
	`size
(Ë&& cmdSå[ò+ 1] =
ASCII_R_ANG
) {

473 
¨gv
.
	`push_back
(">>");

474 
i
 += 2;

477 
¨gv
.
	`push_back
(">");

478 
i
++;

484 i‡((
ch
 =
ASCII_SPACE
 || ch =
ASCII_HT
 || ch =
ASCII_LF


485 || 
ch
 =
ASCII_QUOT
Ë&& !
öQuŸ
) {

486 i‡(
°r
 != "") {

487 
¨gv
.
	`push_back
(
°r
);

488 
°r
 = "";

490 
i
++;

495 i‡(
ch
 !
ASCII_QUOT
)

496 
°r
 +
ch
;

498 
i
++;

501 i‡(
°r
 != "")

502 
¨gv
.
	`push_back
(
°r
);

504  
¨gv
;

505 
	}
}

516 
	gCmdMgr
::
	$autoCm∂t
() {

517 
ve˘‹
<
°rög
> 
¨gv
 = 
	`∑r£
(
cmdSå_
.
	`sub°r
(0, 
c§Pos_
));

519 
boﬁ
 
isCmd
 = 
¨gv
.
	`size
() == 0

520 || (
¨gv
.
	`size
(Ë=1 && 
cmdSå_
[
c§Pos_
 - 1] != ' ');

521 
boﬁ
 
isO±
 = 
¨gv
.
	`size
(Ë> 1 && 
cmdSå_
[
c§Pos_
 - 1] != ' '

522 && 
¨gv
[¨gv.
	`size
() - 1][0] == '-'

523 && 
cmdM≠_
.
	`cou¡
(
¨gv
[0]);

524 
boﬁ
 
isV¨
 = 
¨gv
.
	`size
(Ë> 1 && 
cmdSå_
[
c§Pos_
 - 1] != ' '

525 && 
¨gv
[¨gv.
	`size
() - 1][0] == '$'

526 && 
¨gv
[¨gv.
	`size
(Ë- 1].
	`föd
('}'Ë=
°rög
::
≈os


527 && 
¨gv
[¨gv.
	`size
(Ë- 1].
	`föd
('/'Ë=
°rög
::
≈os
;

528 
boﬁ
 
isFûe
 = 
Ál£
;

530 
ve˘‹
<
°rög
> 
cddts
;

531 
°rög
 
¥e
;

532 
boﬁ
 
isL⁄g
;

533 i‡(
isCmd
) {

534 
¥e
 = 
¨gv
.
	`size
() == 0 ? "" :árgv[0];

537 
CmdM≠Iãr
 
ô
 = 
cmdM≠_
.
	`begö
(); ià!cmdM≠_.
	`íd
(); ++it) {

538 
°rög
 
cmd
 = 
ô
->
fú°
;

539 i‡(
¥e
 ="" ||Öª.
	`com∑ª
(
cmd
.
	`sub°r
(0,Öª.
	`size
())) == 0)

540 
cddts
.
	`push_back
(
cmd
);

543 i‡(
isO±
) {

544 
Cmd
 *
cmd
 = 
cmdM≠_
.
	`föd
(
¨gv
[0])->
£c⁄d
;

545 
isL⁄g
 = 
¨gv
[¨gv.
	`size
() - 1].size() > 1

546 && 
¨gv
[¨gv.
	`size
() - 1][1] == '-';

547 i‡(
isL⁄g
)

548 
¥e
 = 
¨gv
[¨gv.
	`size
(Ë- 1].
	`sub°r
(2);

550 
¥e
 = 
¨gv
[¨gv.
	`size
(Ë- 1].
	`sub°r
(1);

551 
size_t
 
i
 = 0; i < 
cmd
->
›tMgr_
.
	`gëNFœg
(); ++i) {

552 
°rög
 
Êag
 = 
cmd
->
›tMgr_
.
	`gëFœg
(
i
);

553 i‡(
¥e
 ="" ||Öª.
	`com∑ª
(
Êag
.
	`sub°r
(0,Öª.
	`size
())) == 0) {

554 i‡(
Êag
.
	`size
(Ë=1 && !
isL⁄g
)

555 
cddts
.
	`push_back
(
Êag
);

556 i‡(
Êag
.
	`size
(Ë> 1 && 
isL⁄g
)

557 
cddts
.
	`push_back
(
Êag
);

561 i‡(
isV¨
) {

562 
isL⁄g
 = 
¨gv
[¨gv.
	`size
() - 1].size() > 1

563 && 
¨gv
[¨gv.
	`size
() - 1][1] == '{';

564 i‡(
isL⁄g
)

565 
¥e
 = 
¨gv
[¨gv.
	`size
(Ë- 1].
	`sub°r
(2);

567 
¥e
 = 
¨gv
[¨gv.
	`size
(Ë- 1].
	`sub°r
(1);

568 
V¨M≠Iãr
 
ô
 = 
v¨M≠_
.
	`begö
(); ià!v¨M≠_.
	`íd
(); ++it) {

569 
°rög
 
v¨
 = 
ô
->
fú°
;

570 i‡(
¥e
 ="" ||Öª.
	`com∑ª
(
v¨
.
	`sub°r
(0,Öª.
	`size
())) == 0)

571 
cddts
.
	`push_back
(
v¨
);

576 
°rög
 
dúSå
;

577 i‡(
cmdSå_
[
c§Pos_
 - 1] != ' ') {

578 
°rög
 
∑th
 = 
¨gv
[¨gv.
	`size
() - 1];

579 i‡(
∑th
.
	`föd_œ°_of
('/'Ë=∑th.
≈os
) {

580 
dúSå
 = "./";

581 
¥e
 = 
∑th
;

584 
dúSå
 = 
∑th
.
	`sub°r
(0,Ö©h.
	`föd_œ°_of
('/'));

585 
dúSå
 = 
	`ex∑ndV¨
(dirStr);

586 
dúSå
 = 
	`ex∑ndHome
(dirStr) + '/';

587 
¥e
 = 
∑th
.
	`sub°r
’©h.
	`föd_œ°_of
('/') + 1);

592 
dúSå
 = "./";

593 
¥e
 = "";

597 
ve˘‹
<
°rög
> 
˘s
 = 
	`gëDúCts
(
dúSå
);

598 
size_t
 
i
 = 0; i < 
˘s
.
	`size
(); ++i) {

599 
°rög
 
fûe
 = 
˘s
[
i
];

600 i‡(
¥e
 ="" ||Öª.
	`com∑ª
(
fûe
.
	`sub°r
(0,Öª.
	`size
())) == 0) {

601 
°©
 
fSèt
;

602 
°rög
 
∑th
 = 
dúSå
 + "/" + 
fûe
;

603 i‡(
	`°©
(
∑th
.
	`c_°r
(), &
fSèt
) == 0

604 && 
	`S_ISDIR
(
fSèt
.
°_mode
) != 0)

605 
fûe
 += "/";

607 
isFûe
 = 
åue
;

608 
cddts
.
	`push_back
(
fûe
);

614 
size_t
 
nAddedCh¨
 = 0;

615 
size_t
 
cmnPos
 = 0;

616 
°rög
 
cmn
 = 
cddts
.
	`size
() > 0 ? cddts[0] : "";

617 
size_t
 
maxCddtLí
 = 
cddts
.
	`size
() > 0 ? cddts[0].size() : 0;

618 
size_t
 
i
 = 1; i < 
cddts
.
	`size
(); ++i) {

619 i‡(
cddts
[
i
].
	`size
(Ë> 
maxCddtLí
)

620 
maxCddtLí
 = 
cddts
[
i
].
	`size
();

621 
cmnPos
 = 
	`cmnPªfix
(
cmn
, 
cddts
[
i
]);

622 
cmn
 = cmn.
	`sub°r
(0, 
cmnPos
);

624 i‡(
cmn
.
	`size
() != 0) {

625 
cmn
 = cmn.
	`sub°r
(
¥e
.
	`size
());

626 
cmdSå_
.
	`ö£π
(
c§Pos_
, 
cmn
);

627 
c§Pos_
 +
cmn
.
	`size
();

628 
nAddedCh¨
 +
cmn
.
	`size
();

632 i‡(
cddts
.
	`size
() == 1) {

633 i‡(
isCmd
 || 
isO±
 || 
isV¨
 || 
isFûe
) {

634 
cmdSå_
.
	`ö£π
(
c§Pos_
, " ");

635 
c§Pos_
++;

636 
nAddedCh¨
++;

641 i‡(
cddts
.
	`size
() > 1) {

642 
cout
 << 
VT100_CSRR
 << 
VT100_SCRU
 << 
Êush
;

643 
size_t
 
fûesPîLöe
 = (size_t)
	`gëTîmCﬁ
(Ë/ (
maxCddtLí
 + 2);

644 
size_t
 
i
 = 0; i < 
cddts
.
	`size
(); ++i) {

645 
cout
 << 
	`£tw
(
maxCddtLí
 + 2Ë<< 
À·
 << 
cddts
[
i
];

646 i‡((
i
 + 1Ë% 
fûesPîLöe
 == 0)

647 
cout
 << 
ídl
;

649 i‡(
cddts
.
	`size
(Ë% 
fûesPîLöe
 != 0)

650 
cout
 << 
ídl
;

651 
size_t
 
nLöePªv
 = 
maxPos_
 / (size_t)
	`gëTîmCﬁ
();

652 
size_t
 
nLöeCur
 = (
maxPos_
 + 
nAddedCh¨
Ë/ (size_t)
	`gëTîmCﬁ
();

653 
size_t
 
i
 = 0; i < 
nLöePªv
 - (
nLöeCur
 -ÇLinePrev); ++i)

654 
cout
 << 
VT100_SCRU
 << 
Êush
;

655 
cout
 << 
VT100_CSRS
 << 
Êush
;

657 
	}
}

667 
	gCmdMgr
::
Resu…
 
CmdMgr
::
	$exec
(c⁄° 
°rög
 &
cmdSå
) {

668 
ve˘‹
<
°rög
> 
¨gv
 = 
	`∑r£
(
cmdSå
);

670 
Resu…
 
ªs
 = 
NOP
;

673 
size_t
 
i
 = 1; i < 
¨gv
.
	`size
(); ++i)

674 
¨gv
[
i
] = 
	`ex∑ndV¨
(argv[i]);

677 
size_t
 
i
 = 1; i < 
¨gv
.
	`size
(); ++i)

678 
¨gv
[
i
] = 
	`ex∑ndHome
(argv[i]);

681 
boﬁ
 
isRedúe˘ed
 = 
Ál£
;

682 
°doutFd
;

683 
Âos_t
 
°doutPos
;

684 i‡(
¨gv
.
	`size
() >= 2

685 && (
¨gv
[¨gv.
	`size
() - 2] == ">" ||árgv[argv.size() - 2] == ">>")) {

686 
°rög
 
mode
 = 
¨gv
[¨gv.
	`size
() - 2] == ">" ? "w" : "a";

687 i‡(
	`£tStdoutRedú
(
¨gv
[¨gv.
	`size
(Ë- 1], 
mode
, 
°doutFd
, 
°doutPos
))

688 
isRedúe˘ed
 = 
åue
;

689 
¨gv
.
	`îa£
◊rgv.
	`íd
() - 2,árgv.end());

693 i‡(
¨gv
.
	`size
() > 0) {

694 
cmdHis_
.
	`push_back
(
cmdSå
);

696 
CmdM≠Iãr
 
ô
 = 
cmdM≠_
.
	`föd
(
¨gv
[0]);

697 i‡(
ô
 =
cmdM≠_
.
	`íd
()) {

698 
îr‹Så_
 = 
¨gv
[0];

699 
îr‹_
 = 
E_NOT_REG
;

700 
ªs
 = 
NOT_EXIST
;

703 
ªs
 = 
ô
->
£c⁄d
->
	`exec
(
¨gv
Ë? (
exô_
 ? 
EXIT
 : 
SUCCESS
Ë: 
FAIL
;

707 i‡(
isRedúe˘ed
)

708 
	`ª£tStdout
(
°doutFd
, 
°doutPos
);

710  
ªs
;

711 
	}
}

715 
boﬁ
 
	gCmdMgr
::
	$£tStdoutRedú
(c⁄° 
°rög
 &
‚ame
, c⁄° såög &
mode
,

716 &
°doutFd
, 
Âos_t
 &
°doutPos
) const {

717 
°doutFd
 = 
	`dup
(
	`fûío
(
°dout
));

718 
	`fgëpos
(
°dout
, &
°doutPos
);

719 
FILE
 *
Âå
 = 
	`f›í
(
‚ame
.
	`c_°r
(), 
mode
.c_str());

720 i‡(
Âå
) {

721 
	`f˛o£
(
Âå
);

722 i‡(!
	`‰e›í
(
‚ame
.
	`c_°r
(), 
mode
.c_°r(), 
°dout
)) {

723 
˚º
 << "**WARN CmdMgr::£tStdoutRedú(): fûê`" << 
‚ame
;

724 
˚º
 << "' c™nŸ bêwrôãn" << 
ídl
;

725  
Ál£
;

729 
˚º
 << "**WARN CmdMgr::£tStdoutRedú(): fûê`" << 
‚ame
 << "' ";

730 
˚º
 << "ˇ¬Ÿ bêwrôãn" << 
ídl
;

731  
Ál£
;

733  
åue
;

734 
	}
}

736 
	gCmdMgr
::
	$ª£tStdout
(c⁄° &
°doutFd
, c⁄° 
Âos_t
 &
°doutPos
) const {

737 
	`fÊush
(
°dout
);

738 
	`dup2
(
°doutFd
, 
	`fûío
(
°dout
));

739 
	`˛o£
(
°doutFd
);

740 
	`˛óªº
(
°dout
);

741 
	`f£ços
(
°dout
, &
°doutPos
);

742 
	}
}

	@common/src/cmd.h

9 #i‚de‡
_COMMON_CMD_H_


10 
	#_COMMON_CMD_H_


	)

12 
	~"ascii.h
"

13 
	~"gë_›t.h
"

15 
	~<c°dio
>

17 
«me•a˚
 
	gComm⁄Ns
 {

20 
˛ass
 
	gCmd
;

21 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::
	t£t
<°d::°rög> > 
	tC©M≠
;

22 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::°rög> 
	tV¨M≠
;

23 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, 
	tCmd
 *> 
	tCmdM≠
;

24 
	gC©M≠
::
	tôî©‹
 
	tC©M≠Iãr
;

25 
	gV¨M≠
::
	tôî©‹
 
	tV¨M≠Iãr
;

26 
	gCmdM≠
::
	tôî©‹
 
	tCmdM≠Iãr
;

29 ˛as†
	cCmd
 {

30 
	gpublic
:

31 
Cmd
(c⁄° 
°d
::
°rög
 &
«me
);

32 
	gvútuÆ
 ~
Cmd
();

33 
vútuÆ
 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
) = 0;

34 
	g°d
::
°rög
 
gëName
() const;

35 
O±Mgr
 
	g›tMgr_
;

38 ˛as†
	cCmdMgr
 {

39 
	gpublic
:

41 
	eResu…
 { 
EXIT
 = -1, 
	gSUCCESS
, 
	gFAIL
, 
	gNOT_EXIST
, 
	gNOP
 };

42 
	eEº‹
 { 
	gE_EXIST
 = 0, 
	gE_NOT_REG
, 
	gE_INVALID_VAR
 };

43 
	eCﬁ‹
 { 
	gBLACK
 = 0, 
	gRED
, 
	gGREEN
, 
	gYELLOW
, 
	gBLUE
, 
	gPURPLE
, 
	gCYAN
,

44 
	gWHITE
 };

46 
CmdMgr
();

47 ~
CmdMgr
();

49 
ªgCmd
(c⁄° 
°d
::
°rög
 &
ˇt
, 
Cmd
 * c⁄° 
cmd
);

50 
Cmd
 *
gëCmd
(c⁄° 
°d
::
°rög
 &
«me
) const;

51 
Resu…
 
ªad
();

52 
Resu…
 
exec
(c⁄° 
°d
::
°rög
 &
cmdSå
);

53 
£tCommít
(c⁄° &
ch
);

54 
£tProm±
(c⁄° 
°d
::
°rög
 &
°r
);

55 
£tCﬁ‹
(c⁄° 
Cﬁ‹
 &
cﬁ‹
);

56 
£tExô
(c⁄° 
boﬁ
 &
exô
);

57 
boﬁ
 
addV¨
(c⁄° 
°d
::
°rög
 &
v¨
, c⁄° std::°rög &
°r
);

58 
V¨M≠
 
gëV¨s
() const;

59 
Eº‹
 
gëEº‹
() const;

60 
	g°d
::
°rög
 
gëEº‹Så
() const;

62 
ußge
(
°d
::
o°ªam
 &
out
 = std::
cout
);

64 
	g¥iv©e
:

66 
°d
::
°rög
 
ex∑ndV¨
(c⁄° std::°rög &
v¨
) const;

67 
	g°d
::
°rög
 
ex∑ndHome
(c⁄° 
°d
::°rög &
∑th
) const;

68 
boﬁ
 
isLegÆV¨
(c⁄° 
°d
::
°rög
 &
v¨
) const;

69 
boﬁ
 
isLegÆV¨Ch¨
(c⁄° &
ch
) const;

72 
£tStdö
() const;

73 
ª£tStdö
() const;

76 
boﬁ
 
£tStdoutRedú
(c⁄° 
°d
::
°rög
 &
‚ame
,

77 c⁄° 
°d
::
°rög
 &
mode
,

78 &
°doutFd
,

79 
Âos_t
 &
°doutPos
) const;

80 
ª£tStdout
(c⁄° &
°doutFd
,

81 c⁄° 
Âos_t
 &
°doutPos
) const;

84 
ª‰esh
();

85 
autoCm∂t
();

86 
gëTîmCﬁ
() const;

87 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
gëDúCts
(c⁄° std::°rög &
dúSå
) const;

88 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∑r£
(c⁄° std::°rög &
cmdSå
) const;

89 
size_t
 
cmnPªfix
(c⁄° 
°d
::
°rög
 &
s1
,

90 c⁄° 
°d
::
°rög
 &
s2
) const;

93 
	g°d
::
°rög
 
¥om±_
;

94 
	gcommít_
;

95 
Cﬁ‹
 
	gcﬁ‹_
;

96 
	g°d
::
°rög
 
îr‹Så_
;

97 
Eº‹
 
	gîr‹_
;

98 
boﬁ
 
	gexô_
;

100 
C©M≠
 
	gˇtM≠_
;

101 
V¨M≠
 
	gv¨M≠_
;

102 
CmdM≠
 
	gcmdM≠_
;

103 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
cmdHis_
;

104 
size_t
 
	gcmdHisPå_
;

105 
	g°d
::
°rög
 
cmdSå_
;

106 
size_t
 
	gc§Pos_
;

107 
size_t
 
	gmaxPos_
;

112 
ölöe
 
	gCmd
::
Cmd
(c⁄° 
°d
::
°rög
 &
«me
) {

113 
›tMgr_
.
£tName
(
«me
);

116 
ölöe
 
	gCmd
::~
	$Cmd
(Ë{
	}
}

118 
ölöe
 
°d
::
°rög
 
Cmd
::
	$gëName
() const {

119  
›tMgr_
.
	`gëName
();

120 
	}
}

123 
ölöe
 
	gCmdMgr
::
	$CmdMgr
() {

124 
¥om±_
 = "cmd> ";

125 
commít_
 = '#';

126 
cﬁ‹_
 = 
WHITE
;

127 
îr‹_
 = 
E_EXIST
;

128 
exô_
 = 
Ál£
;

129 
	}
}

131 
ölöe
 
	gCmdMgr
::~
	$CmdMgr
(Ë{
	}
}

133 
ölöe
 
CmdMgr
::
	$£tCommít
(c⁄° &
ch
) {

134 
commít_
 = 
ch
;

135 
	}
}

137 
ölöe
 
	gCmdMgr
::
£tProm±
(c⁄° 
°d
::
°rög
 &
s
) {

138 
¥om±_
 = 
s
;

141 
ölöe
 
	gCmdMgr
::
	$£tCﬁ‹
(c⁄° 
Cﬁ‹
 &
cﬁ‹
) {

142 
cﬁ‹_
 = 
cﬁ‹
;

143 
	}
}

145 
ölöe
 
	gCmdMgr
::
	$£tExô
(c⁄° 
boﬁ
 &
exô
) {

146 
exô_
 = 
exô
;

147 
	}
}

149 
ölöe
 
boﬁ
 
	gCmdMgr
::
addV¨
(c⁄° 
°d
::
°rög
 &
v¨
, c⁄° std::°rög &
°r
) {

150 i‡(!
isLegÆV¨
(
v¨
)) {

151 
îr‹Så_
 = 
v¨
;

152 
	gîr‹_
 = 
E_INVALID_VAR
;

153  
	gÁl£
;

155 
	gv¨M≠_
[
v¨
] = 
ex∑ndV¨
(
°r
);

156  
	gåue
;

159 
ölöe
 
boﬁ
 
	gCmdMgr
::
isLegÆV¨
(c⁄° 
°d
::
°rög
 &
v¨
) const {

160 
size_t
 
i
 = 0; 
	gi
 < 
	gv¨
.
size
(); ++i) {

161 i‡(
	gv¨
[
i
] >
ASCII_0
 && 
v¨
[i] <
ASCII_9
)

163 i‡(
	gv¨
[
i
] >
ASCII_A
 && 
v¨
[i] <
ASCII_Z
)

165 i‡(
	gv¨
[
i
] >
ASCII_a
 && 
v¨
[i] <
ASCII_z
)

167 i‡(
	gv¨
[
i
] =
ASCII_UNDER
)

169  
	gÁl£
;

171  
	gåue
;

174 
ölöe
 
boﬁ
 
	gCmdMgr
::
	$isLegÆV¨Ch¨
(c⁄° &
ch
) const {

175 i‡(
ch
 >
ASCII_0
 && ch <
ASCII_9
)

176  
åue
;

177 i‡(
ch
 >
ASCII_A
 && ch <
ASCII_Z
)

178  
åue
;

179 i‡(
ch
 >
ASCII_a
 && ch <
ASCII_z
)

180  
åue
;

181 i‡(
ch
 =
ASCII_UNDER
)

182  
åue
;

183  
Ál£
;

184 
	}
}

186 
ölöe
 
V¨M≠
 
	gCmdMgr
::
	$gëV¨s
() const {

187  
v¨M≠_
;

188 
	}
}

190 
ölöe
 
	gCmdMgr
::
Eº‹
 
CmdMgr
::
	$gëEº‹
() const {

191  
îr‹_
;

192 
	}
}

194 
ölöe
 
	g°d
::
°rög
 
CmdMgr
::
	$gëEº‹Så
() const {

195  
îr‹Så_
;

196 
	}
}

	@common/src/common_test.cpp

8 
	~<c°dlib
>

9 
	~<sys/times.h
>

11 
usög
 
«me•a˚
 
	g°d
;

13 
	~"tm_ußge.h
"

14 
	~"gë_›t.h
"

15 
	~"cmd.h
"

16 
	~"sys_cmd.h
"

18 
usög
 
«me•a˚
 
	gComm⁄Ns
;

20 
öôO±s
(
O±Mgr
 *
mgr
);

21 
öôCmds
(
CmdMgr
 *
mgr
);

22 
ußge
(
O±Mgr
 *
mgr
);

24 
	$maö
(
¨gc
, **
¨gv
) {

25 
TmUßge
 
tmUsg
;

26 
tmUsg
.
	`tŸÆSèπ
();

28 
O±Mgr
 *
›tMgr
 = 
√w
 OptMgr;

29 
CmdMgr
 *
cmdMgr
 = 
√w
 CmdMgr;

31 
	`öôO±s
(
›tMgr
);

32 
	`öôCmds
(
cmdMgr
);

34 
›tMgr
->
	`∑r£
(
¨gc
, 
¨gv
);

35 i‡(
›tMgr
->
	`isFœgSë
("h")) {

36 
›tMgr
->
	`ußge
();

37 
	`exô
(0);

41 
cout
 << "** Thi†i†thêcomm⁄Öackagêã° bö¨y" << 
ídl
;

42 
cout
 << "** PÀa£Ñï‹à™y bug†tÿlôéeshamoo. Th™ks" << 
ídl
;

43 
CmdMgr
::
Resu…
 
ªs
 = CmdMgr::
SUCCESS
;

44 
cmdMgr
->
	`£tCommít
('#');

45 
cmdMgr
->
	`£tProm±
("test> ");

46 
cmdMgr
->
	`£tCﬁ‹
(
CmdMgr
::
YELLOW
);

47 
ªs
 !
CmdMgr
::
EXIT
) {

48 
ªs
 = 
cmdMgr
->
	`ªad
();

49 i‡(
ªs
 =
CmdMgr
::
NOT_EXIST
) {

50 
˚º
 << "**ERROR maö(): comm™d `" << 
cmdMgr
->
	`gëEº‹Så
();

51 
˚º
 << "'ÇŸ found" << 
ídl
;

54 i‡(
ªs
 !
CmdMgr
::
NOP
)

55 
cout
 << 
ªs
 << 
ídl
;

58 
TmSèt
 
tmEnd
;

59 i‡(!
tmUsg
.
	`gëTŸÆUßge
(
tmEnd
))

60 
˚º
 << "**ERROR maö(): c™nŸ gëÑesour˚ ußge" << 
ídl
;

61 
cout
 << "# Ru¡imê™d mem‹y ußge" << 
ídl
;

62 
cout
 << "# u£∏time: " << ()
tmEnd
.
uTime
 / 1000000.0 << "s" <<
ídl
;

63 
cout
 << "# sy†time: " << ()
tmEnd
.
sTime
 / 1000000.0 << "s" <<
ídl
;

64 
cout
 << "#Ñó»time: " << ()
tmEnd
.
rTime
 / 1000000.0 << "s" <<
ídl
;

65 
cout
 << "# cu∏mem: " << ()
tmEnd
.
vmSize
 / 1024.0 << "MB" << 
ídl
;

66 
cout
 << "#Öók mem: " << ()
tmEnd
.
vmPók
 / 1024.0 << "MB" << 
ídl
;

67 
cout
 << "# dif‡mem: " << ()
tmEnd
.
vmDiff
 / 1024.0 << "MB" << 
ídl
;

68 
cout
 << 
ídl
;

69 
cout
 << "** Goodbye" << 
ídl
;

72 
	}
}

75 
	$ußge
(
O±Mgr
 *
mgr
) {

76 
mgr
->
	`ußge
();

77 
	}
}

79 ˛as†
	cTe°L¨geLo›Cmd
 : 
public
 
Cmd
 {

80 
public
:

81 
Te°L¨geLo›Cmd
(c⁄° 
°rög
 &
«me
);

82 ~
Te°L¨geLo›Cmd
();

84 
boﬁ
 
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
);

87 
	gTe°L¨geLo›Cmd
::
	$Te°L¨geLo›Cmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

88 
›tMgr_
.
	`£tName
("test_large_loop");

89 
›tMgr_
.
	`£tSh‹tDes
("evaluateáÜargeÜoopÅoÅestÑuntime");

90 
°rög
 
des
 = "test_large_loop constructsáÅhree-levelÜoop with size";

91 
des
 += " based onÅhe integerárgumentándÖerformsárithmetic";

92 
des
 += " operations.";

93 
›tMgr_
.
	`£tDes
(
des
);

95 
des
 = "Loop size. Default is 1500 ifÇot set.";

96 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
OPT
, 
des
, "size"));

98 
O±
 *
›t
;

99 
des
 = "Test mode selection ('a' for stuck-at fault, 's' for";

100 
des
 += "Üaunch-off-shiftÅransition faultánd 'c' for";

101 
des
 += "Üaunch-off-capture.)";

102 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "<a|s|c>");

103 
›t
->
	`addFœg
("m");

104 
›t
->
	`addFœg
("x");

105 
›t
->
	`addFœg
("mode");

106 
›t
->
	`addFœg
("cool");

107 
›tMgr_
.
	`ªgO±
(
›t
);

109 
	}
}

111 
	gTe°L¨geLo›Cmd
::~
	$Te°L¨geLo›Cmd
(Ë{
	}
}

113 
boﬁ
 
Te°L¨geLo›Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

114 
›tMgr_
.
∑r£
(
¨gv
);

115 
	gsize
 = 
›tMgr_
.
gëNP¨£dArg
() > 0 ?

116 
©oi
(
›tMgr_
.
gëP¨£dArg
(0).
c_°r
()) : 1500;

118 
	gªs
 = 0;

119 
	gi
 = 0; i < 
	gsize
; ++i)

120 
	gj
 = 0; j < 
	gsize
; ++j)

121 
	gk
 = 0; k < 
	gsize
; ++k)

122 
	gªs
 +
i
 + 
j
 * 
k
;

124 
	gcout
 << "ªsu…: " << 
	gªs
 << 
	gídl
;

126  
	gåue
;

130 
	$öôO±s
(
O±Mgr
 *
mgr
) {

131 
mgr
->
	`£tName
("fan");

132 
mgr
->
	`£tSh‹tDes
("An ATPGÅool based on FANálgorithm");

133 
°rög
 
des
 = "fanÅakesán input verilog gate-levelÇetlistánd";

134 
des
 += "ÖerformsÅest generation or fault simulation. Currently";

135 
des
 += " supports stuck-at fault modelándÅransition delay fault";

136 
des
 += " model. Additional functions includeÅestÑelaxationánd";

137 
des
 += " SAT-basedÅest generation.";

138 
mgr
->
	`£tDes
(
des
);

140 
des
 = "Input circuitÇetlist.";

141 
mgr
->
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, 
des
, "circuit_netlist"));

143 
O±
 *
›t
;

144 
des
 = "Test mode selection ('a' for stuck-at fault, 's' for";

145 
des
 += "Üaunch-off-shiftÅransition faultánd 'c' for";

146 
des
 += "Üaunch-off-capture.)";

147 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "<a|s|c>");

148 
›t
->
	`addFœg
("m");

149 
›t
->
	`addFœg
("mode");

150 
mgr
->
	`ªgO±
(
›t
);

152 
des
 = "EnableÑandom simulationándÅheÑandom_limit specifiesÅhe";

153 
des
 += " iteration of simulationÅimes.";

154 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "random_limit");

155 
›t
->
	`addFœg
("r");

156 
›t
->
	`addFœg
("random");

157 
mgr
->
	`ªgO±
(
›t
);

159 
des
 = "Limitation of dynamic compaction. It specifiesÅhe maximum";

160 
des
 += "Çumber of failingÅimes. Default = 300. If specified '-1'Åhen";

161 
des
 += " dynamic compaciton will beÅurned off. The deterministicÅest";

162 
des
 += " genration will be disabled if '-2' is specified. NoteÅhat";

163 
des
 += "Ñandom simulation '-r' option should beÅurned on orÅhis";

164 
des
 += " option will be ignored.";

165 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "dynamic_fail_limit");

166 
›t
->
	`addFœg
("d");

167 
mgr
->
	`ªgO±
(
›t
);

169 
des
 = "Limitation of dynamic compaction. It specifiesÅhe maximum";

170 
des
 += "Çumber of compaction fault in oneÖattern.";

171 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "dynamic_fault_num");

172 
›t
->
	`addFœg
("D");

173 
mgr
->
	`ªgO±
(
›t
);

175 
des
 = "BacktrackÜimit ofÅhe FANálgorithm.";

176 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "backtrack_limit");

177 
›t
->
	`addFœg
("b");

178 
mgr
->
	`ªgO±
(
›t
);

180 
des
 = "OutputÖatternsÅoÖattern_file.";

181 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "pattern_file");

182 
›t
->
	`addFœg
("f");

183 
mgr
->
	`ªgO±
(
›t
);

185 
des
 = "Output undetected faultsÅo undetected_file.";

186 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "undetected_file");

187 
›t
->
	`addFœg
("u");

188 
mgr
->
	`ªgO±
(
›t
);

190 
des
 = "N-detect mode withÇ_num detection.";

191 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "n_num");

192 
›t
->
	`addFœg
("N");

193 
mgr
->
	`ªgO±
(
›t
);

195 
des
 = "Enable MT-fill,án optionalÜimit specifiesÅheÜimit of fill";

196 
des
 += "Ñatio,Ñange from 0.0 ~ 1.0.";

197 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "mt_fill_num");

198 
›t
->
	`addFœg
("a");

199 
mgr
->
	`ªgO±
(
›t
);

201 
des
 = "DoÇot fill don't care bits duringÅest generation.";

202 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, 
des
, "");

203 
›t
->
	`addFœg
("x");

204 
mgr
->
	`ªgO±
(
›t
);

206 
des
 = "Fault simulation forÅhe sim_file. NoteÅhat if '-f' option is";

207 
des
 += "ápplied,Åhe fault dictionary will be dumped.";

208 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "sim_file");

209 
›t
->
	`addFœg
("y");

210 
mgr
->
	`ªgO±
(
›t
);

212 
des
 = "PerformÅestÑelaxation onÖatterns inÑelax_file.";

213 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "relax_file");

214 
›t
->
	`addFœg
("X");

215 
mgr
->
	`ªgO±
(
›t
);

217 
des
 = "At-speed delayÅest mode. NoteÅhatÅhis only works for";

218 
des
 += "Üaunch-off-captureÅransition faultÅest.";

219 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, 
des
, "");

220 
›t
->
	`addFœg
("i");

221 
mgr
->
	`ªgO±
(
›t
);

223 
des
 = "Enable SAT-basedÅestÖattern generation.";

224 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, 
des
, "");

225 
›t
->
	`addFœg
("s");

226 
mgr
->
	`ªgO±
(
›t
);

228 
des
 = "Mask PO or PPO inÅhe mask_file. If it isÇot specified,áll POs";

229 
des
 += "ánd PPOs will be masked.";

230 
›t
 = 
√w
 
	`O±
(
O±
::
STR_OPT
, 
des
, "mask_file");

231 
›t
->
	`addFœg
("M");

232 
mgr
->
	`ªgO±
(
›t
);

234 
des
 = "Constraint PI or PPI value inÅhe constraint_file.";

235 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "constraint_file");

236 
›t
->
	`addFœg
("c");

237 
mgr
->
	`ªgO±
(
›t
);

239 
des
 = "Extract faultÜist from fault_list_file.";

240 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "fault_list_file");

241 
›t
->
	`addFœg
("l");

242 
mgr
->
	`ªgO±
(
›t
);

244 
des
 = "Outputá verilogÅest benchÅo vlog_test_file.";

245 
›t
 = 
√w
 
	`O±
(
O±
::
STR_REQ
, 
des
, "vlog_test_file");

246 
›t
->
	`addFœg
("v");

247 
mgr
->
	`ªgO±
(
›t
);

249 
des
 = "PrintÅhis usage.";

250 
›t
 = 
√w
 
	`O±
(
O±
::
BOOL
, 
des
, "");

251 
›t
->
	`addFœg
("h");

252 
›t
->
	`addFœg
("help");

253 
mgr
->
	`ªgO±
(
›t
);

254 
	}
}

257 
	$öôCmds
(
CmdMgr
 *
mgr
) {

259 
Cmd
 *
bashCmd
 = 
√w
 
	`SysBashCmd
("bash");

260 
Cmd
 *
li°Cmd
 = 
√w
 
	`SysLi°Cmd
("ls");

261 
Cmd
 *
cdCmd
 = 
√w
 
	`SysCdCmd
("cd");

262 
Cmd
 *
ˇtCmd
 = 
√w
 
	`SysC©Cmd
("cat");

263 
Cmd
 *
pwdCmd
 = 
√w
 
	`SysPwdCmd
("pwd");

264 
Cmd
 *
£tCmd
 = 
√w
 
	`SysSëCmd
("£t", 
mgr
);

265 
Cmd
 *
exôCmd
 = 
√w
 
	`SysExôCmd
("exô", 
mgr
);

266 
Cmd
 *
quôCmd
 = 
√w
 
	`SysExôCmd
("quô", 
mgr
);

267 
Cmd
 *
sour˚Cmd
 = 
√w
 
	`SysSour˚Cmd
("sour˚", 
mgr
);

268 
Cmd
 *
hñpCmd
 = 
√w
 
	`SysHñpCmd
("hñp", 
mgr
);

269 
mgr
->
	`ªgCmd
("Sy°em", 
bashCmd
);

270 
mgr
->
	`ªgCmd
("Sy°em", 
li°Cmd
);

271 
mgr
->
	`ªgCmd
("Sy°em", 
cdCmd
);

272 
mgr
->
	`ªgCmd
("Sy°em", 
ˇtCmd
);

273 
mgr
->
	`ªgCmd
("Sy°em", 
pwdCmd
);

274 
mgr
->
	`ªgCmd
("Sy°em", 
£tCmd
);

275 
mgr
->
	`ªgCmd
("Sy°em", 
exôCmd
);

276 
mgr
->
	`ªgCmd
("Sy°em", 
quôCmd
);

277 
mgr
->
	`ªgCmd
("Sy°em", 
sour˚Cmd
);

278 
mgr
->
	`ªgCmd
("Sy°em", 
hñpCmd
);

281 
Cmd
 *
ã°1Cmd
 = 
√w
 
	`Te°L¨geLo›Cmd
("test_large_loop");

282 
mgr
->
	`ªgCmd
("Te°", 
ã°1Cmd
);

283 
	}
}

	@common/src/get_opt.cpp

8 
	~<sys/io˘l.h
>

10 
	~"gë_›t.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gComm⁄Ns
;

16 
boﬁ
 
	gO±Mgr
::
	$ªgArg
(
Arg
 * c⁄° 
¨g
) {

17 
¨gs_
.
	`push_back
(
¨g
);

18  
åue
;

19 
	}
}

22 
boﬁ
 
	gO±Mgr
::
	$ªgO±
(
O±
 * c⁄° 
›t
) {

23 i‡(
›t
->
Êags_
.
	`size
() == 0) {

24 
˚º
 << "**ERROR O±Mgr::ªgO±(): Nÿ›ti⁄ fœg†found" << 
ídl
;

25 
îr‹_
 = 
E_REQ
;

26  
Ál£
;

30 
£t
<
°rög
>::
c⁄°_ôî©‹
 
sIt
 = 
›t
->
Êags_
.
	`begö
();

31  ; 
sIt
 !
›t
->
Êags_
.
	`íd
(); ++sIt) {

32 i‡(
ÊagToO±_
.
	`cou¡
(*
sIt
) > 0) {

33 
˚º
 << "**ERROR O±Mgr::ªgO±(): ThêÊag `" << *
sIt
 << "' ";

34 
˚º
 << "ha†Æªady bì¿ªgi°îed" << 
ídl
;

35 
îr‹_
 = 
E_EXIST
;

36  
Ál£
;

41 
sIt
 = 
›t
->
Êags_
.
	`begö
();

42  ; 
sIt
 !
›t
->
Êags_
.
	`íd
(); ++sIt) {

43 
Êags_
.
	`push_back
(*
sIt
);

44 
ÊagToO±_
[*
sIt
] = 
›t
;

46 
›tToSë_
[
›t
] = 
Ál£
;

47 
›tToV¨_
[
›t
] = "";

49  
åue
;

50 
	}
}

53 
boﬁ
 
	gO±Mgr
::
	$∑r£
(
¨gc
, **
¨gv
) {

54 
ve˘‹
<
°rög
> 
¨gs
;

55 
i
 = 0; i < 
¨gc
; ++i)

56 
¨gs
.
	`push_back
(
	`°rög
(
¨gv
[
i
]));

57  
	`∑r£
(
¨gs
);

58 
	}
}

61 
boﬁ
 
	gO±Mgr
::
∑r£
(
ve˘‹
<
°rög
> 
¨gs
) {

63 
∑r£dArgs_
.
˛ór
();

64 
	gm≠
<
	gO±
 *, 
	gboﬁ
>::
ôî©‹
 
bIt
 = 
›tToSë_
.
begö
();

65  ; 
	gbIt
 !
›tToSë_
.
íd
(); ++bIt)

66 
	gbIt
->
	g£c⁄d
 = 
Ál£
;

67 
	gm≠
<
	gO±
 *, 
	g°rög
>::
ôî©‹
 
sIt
 = 
›tToV¨_
.
begö
();

68  ; 
	gsIt
 !
›tToV¨_
.
íd
(); ++sIt)

69 
	gsIt
->
	g£c⁄d
 = "";

72 i‡(
	gkìpFú°Arg_
 && 
	g¨gs
.
size
() >= 1)

73 
∑r£dArgs_
.
push_back
(
¨gs
[0]);

75 
size_t
 
	gi
 = 1; i < 
	g¨gs
.
size
(); ++i) {

76 
°rög
 
	g¨g
 = 
¨gs
[
i
];

77 
	gm≠
<
	g°rög
, 
	gO±
 *>::
ôî©‹
 
ôî
;

78 
boﬁ
 
	gisL⁄g
 = 
Ál£
;

79 
boﬁ
 
	gisC⁄√˘ed
 = 
Ál£
;

80 i‡(
	g¨g
.
size
(Ë>2 && 
¨g
[0] == '-') {

81 i‡(
¨g
[1] != '-') {

82 
ôî
 = 
ÊagToO±_
.
föd
(
¨g
.
sub°r
(1, 1));

83 
	gisL⁄g
 = 
Ál£
;

84 i‡(
	g¨g
.
size
() >= 3) {

85 
isC⁄√˘ed
 = 
åue
;

86 i‡(
	gôî
 !
ÊagToO±_
.
íd
()) {

87 
O±
::
Ty≥
 
ty≥
 = 
ôî
->
£c⁄d
->
ty≥_
;

88 i‡(
	gty≥
 =
O±
::
BOOL
) {

89 
°rög
 
√xtArg
 = "-" + 
¨g
.
sub°r
(2);

90 
	g¨gs
.
ö£π
(
¨gs
.
begö
(Ë+ 
i
 + 1, 
√xtArg
);

91 
	g¨g
 = 
¨g
.
sub°r
(0, 2);

92 
	g¨gs
[
i
] = 
¨g
;

98 
size_t
 
	gpos
 = 
¨g
.
föd_fú°_of
('=');

99 i‡(
	gpos
 !
¨g
.
≈os
)

100 
isC⁄√˘ed
 = 
åue
;

101 
	gôî
 = 
ÊagToO±_
.
föd
(
¨g
.
sub°r
(2, 
pos
 - 2));

102 
	gisL⁄g
 = 
åue
;

104 i‡(
	gôî
 !
ÊagToO±_
.
íd
()) {

105 
O±
 *
›t
 = 
ôî
->
£c⁄d
;

106 i‡(!
£tO±
(
›t
, 
isL⁄g
, 
isC⁄√˘ed
, 
i
, 
¨gs
))

107  
	gÁl£
;

110 
	g˚º
 << "**ERROR: o±i⁄ `" << 
	g¨g
;

111 
	g˚º
 << "'ÇŸÑegi°îed" << 
	gídl
;

112 
	gîr‹_
 = 
E_NOT_REG
;

113  
	gÁl£
;

117 
	g∑r£dArgs_
.
push_back
(
¨g
);

120  
	gåue
;

125 
boﬁ
 
	gO±Mgr
::
£tO±
(
O±
 * c⁄° 
›t
, c⁄° boﬁ &
isL⁄g
,

126 c⁄° 
boﬁ
 &
isC⁄√˘ed
, 
size_t
 &
i
,

127 
ve˘‹
<
°rög
> &
¨gs
) {

128 
°rög
 
	g¨g
 = 
¨gs
[
i
];

129 
	g›t
->
	gty≥_
) {

130 
	gO±
::
BOOL
:

132 
	gO±
::
STR_REQ
:

133 i‡(!
isC⁄√˘ed
) {

134 ++
i
;

135 i‡(
	gi
 >
¨gs
.
size
()) {

136 
˚º
 << "**ERROR: o±i⁄ `" << 
¨g
;

137 
	g˚º
 << "'Ñequúe†®vÆue" << 
	gídl
;

138 
	gîr‹_
 = 
E_REQ
;

139  
	gÁl£
;

141 
	g›tToV¨_
[
›t
] = 
¨gs
[
i
];

144 
°rög
 
	gvÆue
 = "";

145 i‡(
	gisL⁄g
) {

146 
	gvÆue
 = 
¨g
.
sub°r
◊rg.
föd_fú°_of
('='));

147 i‡(
	gvÆue
.
size
() == 1) {

148 
˚º
 << "**ERROR: o±i⁄ `" << 
¨g
;

149 
	g˚º
 << "'Ñequúe†®vÆue" << 
	gídl
;

150 
	gîr‹_
 = 
E_REQ
;

151  
	gÁl£
;

153 
	gvÆue
 = 
vÆue
.
sub°r
(1);

156 
	gvÆue
 = 
¨g
.
sub°r
(2);

157 
	g›tToV¨_
[
›t
] = 
vÆue
;

160 
	gO±
::
STR_OPT
:

161 i‡(!
isC⁄√˘ed
) {

162 ++
i
;

163 i‡(
	gi
 < 
	g¨gs
.
size
(Ë&&árgs[
i
][0] != '-')

164 
›tToV¨_
[
›t
] = 
¨gs
[
i
];

166 --
	gi
;

169 
°rög
 
	gvÆue
 = "";

170 i‡(
	gisL⁄g
) {

171 
	gvÆue
 = 
¨g
.
sub°r
◊rg.
föd_fú°_of
('='));

172 i‡(
	gvÆue
.
size
() > 1)

173 
	g›tToV¨_
[
›t
] = 
vÆue
.
sub°r
(1);

176 
	g›tToV¨_
[
›t
] = 
¨g
.
sub°r
(2);

182 
	g›tToSë_
[
›t
] = 
åue
;

184  
	gåue
;

216 
	gO±Mgr
::
	$ußge
(
o°ªam
 &
out
) {

217 
size_t
 
wsCﬁ
 = 
wsCﬁ_
;

218 
size_t
 
èbSize
 = 
èbSize_
;

221 
wösize
 
ws
;

222 
wsCﬁ
 = 
	`io˘l
(0, 
TIOCGWINSZ
, &
ws
Ë=0 ? ws.
ws_cﬁ
 - 2 : wsCol;

225 
wsCﬁ
 = wsCﬁ < 3 * 
èbSize
 ? 3 *ÅabSize : wsCol;

227 
out
 << 
ídl
;

230 
out
 << "NAME" << 
ídl
;

231 
°rög
 
«meSec
 = 
«me_
 + " - " + 
sh‹tDes_
;

232 
ve˘‹
<
°rög
> 
«meSecVec
 = 
	`•lôSåög
(
«meSec
, 
wsCﬁ
 - 
èbSize
);

233 
size_t
 
i
 = 0; i < 
«meSecVec
.
	`size
(); ++i)

234 
out
 << 
	`°rög
(
èbSize
, ' 'Ë<< 
«meSecVec
[
i
] << 
ídl
;

235 
out
 << 
ídl
;

237 
out
 << "SYNOPSIS" << 
ídl
;

238 
°rög
 
synSec
 = 
«me_
 + " ";

239 
°rög
 
sögÀCh¨Syn
 = "";

240 
°rög
 
mu…iCh¨Syn
 = "";

241 
m≠
<
O±
 *, 
°rög
>::
ôî©‹
 
›tIt
 = 
›tToV¨_
.
	`begö
();

242  ; 
›tIt
 !
›tToV¨_
.
	`íd
(); ++optIt) {

243 
O±
 *
›t
 = 
›tIt
->
fú°
;

244 
£t
<
°rög
>::
ôî©‹
 
fIt
 = 
›t
->
Êags_
.
	`begö
();

245  ; 
fIt
 !
›t
->
Êags_
.
	`íd
(); ++fIt) {

246 
°rög
 
Êag
 = *
fIt
;

247 i‡(
Êag
.
	`size
(Ë=1 && 
›t
->
mëa_
.size() == 0)

248 
sögÀCh¨Syn
 +
Êag
;

250 
mu…iCh¨Syn
 += " ";

251 i‡(
Êag
.
	`size
() == 1)

252 
mu…iCh¨Syn
 += "[-";

254 
mu…iCh¨Syn
 += "[--";

255 
mu…iCh¨Syn
 +
Êag
;

256 i‡(
›t
->
mëa_
.
	`size
() == 0)

257 
mu…iCh¨Syn
 += "]";

259 i‡(
›t
->
ty≥_
 =
O±
::
STR_OPT
)

260 
mu…iCh¨Syn
 +" [" + 
›t
->
mëa_
 + "]]";

262 
mu…iCh¨Syn
 +" " + 
›t
->
mëa_
 + "]";

267 i‡(
sögÀCh¨Syn
.
	`size
() != 0)

268 
sögÀCh¨Syn
 = "[-" + singleCharSyn + "]";

269 
synSec
 +
sögÀCh¨Syn
 + 
mu…iCh¨Syn
;

270 
°rög
 
¨gMëaSyn
 = "";

271 
size_t
 
i
 = 0; i < 
¨gs_
.
	`size
(); ++i) {

272 
Arg
 *
¨g
 = 
¨gs_
[
i
];

273 i‡(
¨g
->
mëa_
.
	`size
() == 0)

275 
¨gMëaSyn
 += " ";

276 i‡(
¨g
->
ty≥_
 =
Arg
::
REQ
)

277 
¨gMëaSyn
 +
¨g
->
mëa_
;

278 i‡(
¨g
->
ty≥_
 =
Arg
::
OPT
)

279 
¨gMëaSyn
 +"[" + 
¨g
->
mëa_
 + "]";

280 i‡(
¨g
->
ty≥_
 =
Arg
::
REQ_INF
)

281 
¨gMëaSyn
 +
¨g
->
mëa_
 + "...";

282 i‡(
¨g
->
ty≥_
 =
Arg
::
OPT_INF
)

283 
¨gMëaSyn
 +"[" + 
¨g
->
mëa_
 + "]...";

285 
synSec
 +
¨gMëaSyn
;

286 
ve˘‹
<
°rög
> 
synSecVec
 = 
	`•lôSåög
(
synSec
, 
wsCﬁ
 - 
èbSize
, 
åue
,

288 
size_t
 
i
 = 0; i < 
synSecVec
.
	`size
(); ++i)

289 
out
 << 
	`°rög
(
èbSize
, ' 'Ë<< 
synSecVec
[
i
] << 
ídl
;

290 
out
 << 
ídl
;

292 
out
 << "DESCRIPTION" << 
ídl
;

293 
ve˘‹
<
°rög
> 
desSecVec
 = 
	`•lôSåög
(
des_
, 
wsCﬁ
 - 
èbSize
);

294 
size_t
 
i
 = 0; i < 
desSecVec
.
	`size
(); ++i)

295 
out
 << 
	`°rög
(
èbSize
, ' 'Ë<< 
desSecVec
[
i
] << 
ídl
;

296 
out
 << 
ídl
;

298 i‡(
¨gs_
.
	`size
() != 0)

299 
out
 << "ARGUMENTS" << 
ídl
;

300 
size_t
 
i
 = 0; i < 
¨gs_
.
	`size
(); ++i) {

301 
Arg
 *
¨g
 = 
¨gs_
[
i
];

302 
out
 << 
	`°rög
(
èbSize
, ' 'Ë<< 
¨g
->
mëa_
;

303 i‡(
¨g
->
mëa_
.
	`size
(Ë+ 2 >
èbSize
)

304 
out
 << 
ídl
;

306 
size_t
 
j
 = 
¨g
->
mëa_
.
	`size
(); j < 
èbSize
; ++j)

307 
out
 << " ";

308 
ve˘‹
<
°rög
> 
¨gDesVec
 = 
	`•lôSåög
(
¨g
->
des_
,

309 
wsCﬁ
 - 2 * 
èbSize
);

310 
size_t
 
i
 = 0; i < 
¨gDesVec
.
	`size
(); ++i) {

311 i‡(
i
 !0 || 
¨g
->
mëa_
.
	`size
(Ë+ 2 >
èbSize
)

312 
out
 << 
	`°rög
(2 * 
èbSize
, ' ');

313 
out
 << 
¨gDesVec
[
i
] << 
ídl
;

315 
out
 << 
ídl
;

319 i‡(
›tToV¨_
.
	`size
() != 0)

320 
out
 << "OPTIONS" << 
ídl
;

321 
›tIt
 = 
›tToV¨_
.
	`begö
(); o±Ià!›tToV¨_.
	`íd
(); ++optIt) {

322 
O±
 *
›t
 = 
›tIt
->
fú°
;

323 
£t
<
°rög
>::
ôî©‹
 
fIt
 = 
›t
->
Êags_
.
	`begö
();

324 
°rög
 
ÊagSå
 = "";

325 
size_t
 
i
 = 0; 
fIt
 !
›t
->
Êags_
.
	`íd
(); ++fIt, ++i) {

326 i‡((*
fIt
).
	`size
() == 1)

327 
ÊagSå
 +"-" + (*
fIt
);

329 
ÊagSå
 +"--" + (*
fIt
);

330 i‡(
i
 + 1 !
›t
->
Êags_
.
	`size
())

331 
ÊagSå
 += ",";

333 i‡(
›t
->
mëa_
.
	`size
() != 0)

334 
ÊagSå
 +" " + 
›t
->
mëa_
;

335 
out
 << 
	`°rög
(
èbSize
, ' 'Ë<< 
ÊagSå
;

336 i‡(
ÊagSå
.
	`size
(Ë+ 2 >
èbSize
)

337 
out
 << 
ídl
;

339 
size_t
 
i
 = 
ÊagSå
.
	`size
(); i < 
èbSize
; ++i)

340 
out
 << " ";

341 
ve˘‹
<
°rög
> 
›tDesVec
 = 
	`•lôSåög
(
›t
->
des_
,

342 
wsCﬁ
 - 2 * 
èbSize
);

343 
size_t
 
i
 = 0; i < 
›tDesVec
.
	`size
(); ++i) {

344 i‡(
i
 !0 || 
ÊagSå
.
	`size
(Ë+ 2 >
èbSize
)

345 
out
 << 
	`°rög
(2 * 
èbSize
, ' ');

346 
out
 << 
›tDesVec
[
i
] << 
ídl
;

348 
out
 << 
ídl
;

351 
	}
}

366 
	gve˘‹
<
	g°rög
> 
	gO±Mgr
::
	$•lôSåög
(c⁄° 
°rög
 &
öput
,

367 c⁄° 
size_t
 &
löeWidth
,

368 c⁄° 
boﬁ
 &
fôLöe
,

369 c⁄° 
°rög
 &
£p
) {

370 
ve˘‹
<
°rög
> 
•lôSå
;

371 i‡(
löeWidth
 < 1) {

372 
•lôSå
.
	`push_back
(
öput
);

373  
•lôSå
;

376 
size_t
 
°¨tPos
 = 0;

377 
size_t
 
öputPos
 = 
löeWidth
;

378 
öputPos
 < 
öput
.
	`size
()) {

379 
°rög
 
löeSeg
 = 
öput
.
	`sub°r
(
°¨tPos
, 
löeWidth
);

380 i‡(
öput
[
öputPos
] == ' ') {

381 i‡(
fôLöe
)

382 
•lôSå
.
	`push_back
(
this
->
	`fôLöe
(
löeSeg
, 
löeWidth
));

384 
•lôSå
.
	`push_back
(
löeSeg
);

385 
°¨tPos
 = 
öputPos
 + 1;

386 
öputPos
 +
löeWidth
 + 1;

389 
size_t
 
cutPos
 = 
löeSeg
.
	`föd_œ°_of
(
£p
);

390 i‡(
cutPos
 =
löeSeg
.
≈os
)

391 
•lôSå
.
	`push_back
(
öput
.
	`sub°r
(
°¨tPos
, 
löeWidth
));

393 
cutPos
++;

394 
löeSeg
 = 
öput
.
	`sub°r
(
°¨tPos
, 
cutPos
);

395 i‡(
fôLöe
)

396 
•lôSå
.
	`push_back
(
this
->
	`fôLöe
(
löeSeg
, 
löeWidth
));

398 
•lôSå
.
	`push_back
(
löeSeg
);

399 
öputPos
 = 
°¨tPos
 + 
cutPos
;

401 
°¨tPos
 = 
öputPos
;

402 
öputPos
 +
löeWidth
;

405 
•lôSå
.
	`push_back
(
öput
.
	`sub°r
(
°¨tPos
));

406  
•lôSå
;

407 
	}
}

420 
°rög
 
	gO±Mgr
::
	$fôLöe
(c⁄° 
°rög
 &
öput
, c⁄° 
size_t
 &
löeWidth
) {

422 
size_t
 
ÀadWht
 = 0;

423  ; 
ÀadWht
 < 
öput
.
	`size
() && input[leadWht] == ' '; ++leadWht)

425 
°rög
 
ouçut
 = 
öput
.
	`sub°r
(
ÀadWht
);

427 
size_t
 
åaûWht
 = 
ouçut
.
	`size
();

428  ; 
åaûWht
 > 0 && 
ouçut
[trailWht - 1] == ' '; --trailWht)

430 
ouçut
 = ouçut.
	`sub°r
(0, 
åaûWht
);

432 
size_t
 
nWht
 = 0;

433 
size_t
 
i
 = 0; i < 
ouçut
.
	`size
(); ++i)

434 i‡(
ouçut
[
i
] == ' ')

435 
nWht
++;

437 i‡(
löeWidth
 <
ouçut
.
	`size
())

438  
ouçut
;

440 
size_t
 
nFûlWht
 = 
löeWidth
 - 
ouçut
.
	`size
();

441 
size_t
 
nAddPîWht
 = 
nFûlWht
 / 
nWht
;

442 
size_t
 
nLe·Wht
 = 
nFûlWht
 % 
nWht
;

443 
size_t
 
whtNo
 = 0;

444 
size_t
 
i
 = 0; i < 
ouçut
.
	`size
(); ++i) {

445 i‡(
ouçut
[
i
] == ' ') {

446 
size_t
 
nAddWht
 = 
nAddPîWht
;

447 
nAddWht
 +
whtNo
 < 
nLe·Wht
 ? 1 : 0;

448 
°rög
 
exåaWht
 = "";

449 
size_t
 
j
 = 0; j < 
nAddWht
; ++j)

450 
exåaWht
 += " ";

451 
ouçut
 = ouçut.
	`sub°r
(0, 
i
Ë+ 
exåaWht
 + output.substr(i);

452 
i
 +
nAddWht
;

453 
whtNo
++;

457  
ouçut
;

458 
	}
}

	@common/src/get_opt.h

9 #i‚de‡
_COMMON_GET_OPT_H_


10 
	#_COMMON_GET_OPT_H_


	)

12 
	~<io°ªam
>

13 
	~<°rög
>

14 
	~<ve˘‹
>

15 
	~<m≠
>

16 
	~<£t
>

18 
«me•a˚
 
	gComm⁄Ns
 {

20 
	g°d
::
	t£t
<
	t°d
::
	t°rög
> 
	tFœgSë
;

23 
	sArg
 {

24 
	eTy≥
 { 
	gREQ
 = 0, 
	gOPT
, 
	gREQ_INF
, 
	gOPT_INF
 };

26 
Arg
(c⁄° 
Ty≥
 &
ty≥
,

27 c⁄° 
°d
::
°rög
 &
des
,

28 c⁄° 
°d
::
°rög
 &
mëa
);

29 ~
Arg
();

31 
Ty≥
 
	gty≥_
;

32 
	g°d
::
°rög
 
des_
;

33 
	g°d
::
°rög
 
mëa_
;

36 
	sO±
 {

37 
	eTy≥
 { 
	gBOOL
 = 0, 
	gSTR_REQ
, 
	gSTR_OPT
 };

39 
O±
(c⁄° 
Ty≥
 &
ty≥
,

40 c⁄° 
°d
::
°rög
 &
des
,

41 c⁄° 
°d
::
°rög
 &
mëa
);

42 ~
O±
();

44 
addFœg
(c⁄° 
°d
::
°rög
 &
f
);

46 
Ty≥
 
	gty≥_
;

47 
	g°d
::
°rög
 
des_
;

48 
	g°d
::
°rög
 
mëa_
;

49 
FœgSë
 
	gÊags_
;

53 ˛as†
	cO±Mgr
 {

54 
	gpublic
:

55 
	eEº‹
 { 
E_EXIST
 = 0, 
	gE_NOT_REG
, 
	gE_REQ
 };

57 
O±Mgr
();

58 ~
O±Mgr
();

60 
	g°d
::
°rög
 
gëName
() const;

61 
£tName
(c⁄° 
°d
::
°rög
 &
«me
);

62 
£tKìpFú°Arg
(c⁄° 
boﬁ
 &
kìp
);

63 
£tSh‹tDes
(c⁄° 
°d
::
°rög
 &
sh‹tDes
);

64 
£tDes
(c⁄° 
°d
::
°rög
 &
des
);

65 
Eº‹
 
gëEº‹
() const;

67 
size_t
 
gëNP¨£dArg
() const;

68 
	g°d
::
°rög
 
gëP¨£dArg
(c⁄° 
size_t
 &
i
) const;

69 
size_t
 
gëNFœg
() const;

70 
	g°d
::
°rög
 
gëFœg
(c⁄° 
size_t
 &
i
) const;

71 
boﬁ
 
isFœgSë
(c⁄° 
°d
::
°rög
 &
f
) const;

72 
	g°d
::
°rög
 
gëFœgV¨
(c⁄° 
°d
::°rög &
f
) const;

74 
boﬁ
 
ªgArg
(
Arg
 * c⁄° 
¨g
);

75 
boﬁ
 
ªgO±
(
O±
 * c⁄° 
›t
);

76 
boﬁ
 
∑r£
(
¨gc
, **
¨gv
);

77 
boﬁ
 
∑r£
(
°d
::
ve˘‹
<°d::
°rög
> 
¨gs
);

79 
ußge
(
°d
::
o°ªam
 &
out
 = std::
cout
);

81 
	g¥iv©e
:

82 
°d
::
ve˘‹
<°d::
°rög
> 
•lôSåög
(c⁄° std::°rög &
öput
,

83 c⁄° 
size_t
 &
löeWidth
,

84 c⁄° 
boﬁ
 &
fôLöe
 = 
åue
,

85 c⁄° 
°d
::
°rög
 &
£p
 = "- ");

86 
	g°d
::
°rög
 
fôLöe
(c⁄° 
°d
::°rög &
öput
,

87 c⁄° 
size_t
 &
löeWidth
);

88 
boﬁ
 
£tO±
(
O±
 * c⁄° 
›t
,

89 c⁄° 
boﬁ
 &
isL⁄g
,

90 c⁄° 
boﬁ
 &
isC⁄√˘ed
,

91 
size_t
 &
i
,

92 
°d
::
ve˘‹
<°d::
°rög
> &
¨gs
);

94 c⁄° 
size_t
 
	gwsCﬁ_
 = 78;

95 c⁄° 
size_t
 
	gèbSize_
 = 8;

97 
boﬁ
 
	gkìpFú°Arg_
;

98 
	g°d
::
°rög
 
«me_
;

99 
	g°d
::
°rög
 
sh‹tDes_
;

100 
	g°d
::
°rög
 
des_
;

101 
Eº‹
 
	gîr‹_
;

103 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
Êags_
;

104 
	g°d
::
ve˘‹
<
Arg
 *> 
¨gs_
;

105 
	g°d
::
m≠
<
°d
::
°rög
, 
	gO±
 *> 
	gÊagToO±_
;

106 
	g°d
::
m≠
<
O±
 *, 
	gboﬁ
> 
	g›tToSë_
;

107 
	g°d
::
m≠
<
O±
 *, std::
°rög
> 
›tToV¨_
;

108 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∑r£dArgs_
;

113 
ölöe
 
	gArg
::
Arg
(c⁄° 
Ty≥
 &
ty≥
,

114 c⁄° 
°d
::
°rög
 &
des
,

115 c⁄° 
°d
::
°rög
 &
mëa
) {

116 
ty≥_
 = 
ty≥
;

117 
	gdes_
 = 
des
;

118 
	gmëa_
 = 
mëa
;

121 
ölöe
 
	gArg
::~
	$Arg
(Ë{
	}
}

124 
ölöe
 
O±
::O±(c⁄° 
Ty≥
 &
ty≥
,

125 c⁄° 
°d
::
°rög
 &
des
,

126 c⁄° 
°d
::
°rög
 &
mëa
) {

127 
ty≥_
 = 
ty≥
;

128 
	gdes_
 = 
des
;

129 
	gmëa_
 = 
mëa
;

132 
ölöe
 
	gO±
::~
	$O±
(Ë{
	}
}

134 
ölöe
 
O±
::
addFœg
(c⁄° 
°d
::
°rög
 &
f
) {

135 
Êags_
.
ö£π
(
f
.
sub°r
(0, f.
föd_fú°_of
(' ')));

140 
ölöe
 
	gO±Mgr
::
	$O±Mgr
() {

141 
kìpFú°Arg_
 = 
Ál£
;

142 
«me_
 = "PROG";

143 
des_
 = "NONE";

144 
sh‹tDes_
 = "NONE";

145 
îr‹_
 = 
E_EXIST
;

146 
	}
}

148 
ölöe
 
	gO±Mgr
::~
	$O±Mgr
(Ë{
	}
}

150 
ölöe
 
°d
::
°rög
 
O±Mgr
::
	$gëName
() const {

151  
«me_
;

152 
	}
}

154 
ölöe
 
	gO±Mgr
::
£tName
(c⁄° 
°d
::
°rög
 &
«me
) {

155 
«me_
 = 
«me
;

158 
ölöe
 
	gO±Mgr
::
	$£tKìpFú°Arg
(c⁄° 
boﬁ
 &
kìp
) {

159 
kìpFú°Arg_
 = 
kìp
;

160 
	}
}

162 
ölöe
 
	gO±Mgr
::
£tSh‹tDes
(c⁄° 
°d
::
°rög
 &
sh‹tDes
) {

163 
sh‹tDes_
 = 
sh‹tDes
;

166 
ölöe
 
	gO±Mgr
::
£tDes
(c⁄° 
°d
::
°rög
 &
des
) {

167 
des_
 = 
des
;

170 
ölöe
 
	gO±Mgr
::
Eº‹
 
O±Mgr
::
	$gëEº‹
() const {

171  
îr‹_
;

172 
	}
}

174 
ölöe
 
size_t
 
	gO±Mgr
::
	$gëNP¨£dArg
() const {

175  
∑r£dArgs_
.
	`size
();

176 
	}
}

178 
ölöe
 
	g°d
::
°rög
 
O±Mgr
::
	$gëP¨£dArg
(c⁄° 
size_t
 &
i
) const {

179  
∑r£dArgs_
[
i
];

180 
	}
}

182 
ölöe
 
size_t
 
	gO±Mgr
::
	$gëNFœg
() const {

183  
Êags_
.
	`size
();

184 
	}
}

186 
ölöe
 
	g°d
::
°rög
 
O±Mgr
::
	$gëFœg
(c⁄° 
size_t
 &
i
) const {

187  
Êags_
[
i
];

188 
	}
}

190 
ölöe
 
boﬁ
 
	gO±Mgr
::
isFœgSë
(c⁄° 
°d
::
°rög
 &
f
) const {

191 
°d
::
m≠
<°d::
°rög
, 
	gO±
 *>::
c⁄°_ôî©‹
 
fIt
 = 
ÊagToO±_
.
föd
(
f
);

192 i‡(
	gfIt
 =
ÊagToO±_
.
íd
())

193  
Ál£
;

194 
	g°d
::
m≠
<
O±
 *, 
	gboﬁ
>::
c⁄°_ôî©‹
 
›tIt
;

195 
	g›tIt
 = 
›tToSë_
.
föd
(
fIt
->
£c⁄d
);

196 i‡(
	g›tIt
 =
›tToSë_
.
íd
())

197  
Ál£
;

199  
	g›tIt
->
	g£c⁄d
;

202 
ölöe
 
	g°d
::
°rög
 
O±Mgr
::
gëFœgV¨
(c⁄° 
°d
::°rög &
f
) const {

203 
°d
::
m≠
<°d::
°rög
, 
	gO±
 *>::
c⁄°_ôî©‹
 
fIt
 = 
ÊagToO±_
.
föd
(
f
);

204 i‡(
	gfIt
 =
ÊagToO±_
.
íd
())

206 
	g°d
::
m≠
<
O±
 *, std::
°rög
>::
c⁄°_ôî©‹
 
›tIt
;

207 
	g›tIt
 = 
›tToV¨_
.
föd
(
fIt
->
£c⁄d
);

208 i‡(
	g›tIt
 =
›tToV¨_
.
íd
())

211  
	g›tIt
->
	g£c⁄d
;

	@common/src/sys_cmd.cpp

8 
	~<c°dlib
>

9 
	~<f°ªam
>

11 
	~"sys_cmd.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gComm⁄Ns
;

17 
	gSysBashCmd
::
	$SysBashCmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

18 
›tMgr_
.
	`£tSh‹tDes
("opensáÇew bash shellÉnvironment");

19 
›tMgr_
.
	`£tDes
("opensáÇew bash shellÉnvironment");

20 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

21 
›t
->
	`addFœg
("h");

22 
›t
->
	`addFœg
("help");

23 
›tMgr_
.
	`ªgO±
(
›t
);

24 
	}
}

26 
	gSysBashCmd
::~
	$SysBashCmd
(Ë{
	}
}

28 
boﬁ
 
SysBashCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

29 
›tMgr_
.
∑r£
(
¨gv
);

30 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

31 
	g›tMgr_
.
ußge
();

32  
	gåue
;

35 
	gªs
 = 
sy°em
("bash --login");

36 i‡(
	gªs
 != 0)

37  
Ál£
;

38  
	gåue
;

42 
	gSysLi°Cmd
::
	$SysLi°Cmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

43 
›tMgr_
.
	`£tSh‹tDes
("list diectory contents");

44 
›tMgr_
.
	`£tDes
("lists contents in DIRECTORY. IfÇot specified,Üist current directory content.");

45 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
OPT
, "target directories", "DIRECTORY"));

46 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

47 
›t
->
	`addFœg
("h");

48 
›t
->
	`addFœg
("help");

49 
›tMgr_
.
	`ªgO±
(
›t
);

50 
	}
}

52 
	gSysLi°Cmd
::~
	$SysLi°Cmd
(Ë{
	}
}

54 
boﬁ
 
SysLi°Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

55 
›tMgr_
.
∑r£
(
¨gv
);

56 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

57 
	g›tMgr_
.
ußge
();

58  
	gåue
;

61 
°rög
 
	gcmdSå
 = "";

62 
°rög
 
	g¨g
 = "";

63 
size_t
 
	gi
 = 0; i < 
	g¨gv
.
size
(); ++i)

64 
	g¨g
 +
¨gv
[
i
] + " ";

65 
	gcmdSå
 = 
¨g
 + " --color=always -F 2> /dev/null";

66 i‡(
sy°em
(
cmdSå
.
c_°r
()) != 0) {

67 
˚º
 << "**ERROR SysLi°Cmd::exec():Üi° dúe˘‹y faûed" << 
ídl
;

68  
	gÁl£
;

70  
	gåue
;

74 
	gSysC©Cmd
::
	$SysC©Cmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

75 
›tMgr_
.
	`£tSh‹tDes
("concatenate filesándÖrint onÅhe standard output");

76 
›tMgr_
.
	`£tDes
("Concatenate FILE(s), or standard input,Åo standard output");

77 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ_INF
, "filesÅo beÖrinted", "FILE"));

78 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

79 
›t
->
	`addFœg
("h");

80 
›t
->
	`addFœg
("help");

81 
›tMgr_
.
	`ªgO±
(
›t
);

82 
	}
}

84 
	gSysC©Cmd
::~
	$SysC©Cmd
(Ë{
	}
}

86 
boﬁ
 
SysC©Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

87 
›tMgr_
.
∑r£
(
¨gv
);

88 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

89 
	g›tMgr_
.
ußge
();

90  
	gåue
;

93 i‡(
	g¨gv
.
size
() < 2) {

94 
	g˚º
 << "**ERROR SysC©Cmd::exec(): fûê√eded" << 
	gídl
;

95  
	gÁl£
;

98 
°rög
 
	gcmdSå
 = "";

99 
°rög
 
	g¨g
 = "";

100 
size_t
 
	gi
 = 0; i < 
	g¨gv
.
size
(); ++i)

101 
	g¨g
 +
¨gv
[
i
] + " ";

102 
	gcmdSå
 = 
¨g
 + " 2> /dev/null";

103 i‡(
sy°em
(
cmdSå
.
c_°r
()) != 0) {

104 
˚º
 << "**ERROR SysC©Cmd::exec(): c© fûe†Áûed" << 
ídl
;

105  
	gÁl£
;

107  
	gåue
;

111 
	gSysCdCmd
::
	$SysCdCmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

112 
›tMgr_
.
	`£tSh‹tDes
("change directory");

113 
›tMgr_
.
	`£tDes
("changes working directoryÅo DIRECTORY. IfÇot specified, changesÅo home directory.");

114 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
OPT
, "target directories", "DIRECTORY"));

115 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

116 
›t
->
	`addFœg
("h");

117 
›t
->
	`addFœg
("help");

118 
›tMgr_
.
	`ªgO±
(
›t
);

119 
	}
}

120 
	gSysCdCmd
::~
	$SysCdCmd
(Ë{
	}
}

122 
boﬁ
 
SysCdCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

123 
›tMgr_
.
∑r£
(
¨gv
);

124 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

125 
	g›tMgr_
.
ußge
();

126  
	gåue
;

129 i‡(
	g¨gv
.
size
() == 1) {

130 
°rög
 
home
 = såög(
gëív
("HOME"));

131 i‡(
chdú
(
home
.
c_°r
()) != 0) {

132 
˚º
 << "**ERROR SysCdCmd::exec(): ";

133 
	g˚º
 << "ˇ¬Ÿ ch™gêtÿèrgë dúe˘‹y" << 
	gídl
;

134  
	gÁl£
;

136  
	gåue
;

138 i‡(
	g¨gv
.
size
() > 1) {

139 
°rög
 
	gde°
 = 
¨gv
[1];

140 i‡(
chdú
(
de°
.
c_°r
()) != 0) {

141 
˚º
 << "**ERROR SysCdCmd::exec(): ";

142 
	g˚º
 << "ˇ¬Ÿ ch™gêtÿèrgë dúe˘‹y" << 
	gídl
;

143  
	gÁl£
;

146  
	gåue
;

150 
	gSysPwdCmd
::
	$SysPwdCmd
(c⁄° 
°rög
 &
«me
Ë: 
	$Cmd
(
«me
) {

151 
›tMgr_
.
	`£tSh‹tDes
("printÇame of current directory");

152 
›tMgr_
.
	`£tDes
("printsÅhe full filename ofÅhe current working directory");

153 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

154 
›t
->
	`addFœg
("h");

155 
›t
->
	`addFœg
("help");

156 
›tMgr_
.
	`ªgO±
(
›t
);

157 
	}
}

159 
	gSysPwdCmd
::~
	$SysPwdCmd
(Ë{
	}
}

161 
boﬁ
 
SysPwdCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

162 
›tMgr_
.
∑r£
(
¨gv
);

163 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

164 
	g›tMgr_
.
ußge
();

165  
	gåue
;

168 
	gªs
 = 
sy°em
("pwd");

169 i‡(
	gªs
 != 0)

170  
Ál£
;

171  
	gåue
;

175 
	gSysSëCmd
::
	$SysSëCmd
(c⁄° 
°rög
 &
«me
, 
CmdMgr
 *
cmdMgr
Ë: 
	$Cmd
(
«me
) {

176 
cmdMgr_
 = 
cmdMgr
;

177 
›tMgr_
.
	`£tSh‹tDes
("set variables");

178 
›tMgr_
.
	`£tDes
("set VARÅo STRING");

179 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "variableÇame", "VAR"));

180 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "stringÅo be substituted", "STRING"));

181 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

182 
›t
->
	`addFœg
("h");

183 
›t
->
	`addFœg
("help");

184 
›tMgr_
.
	`ªgO±
(
›t
);

185 
	}
}

187 
	gSysSëCmd
::~
	$SysSëCmd
(Ë{
	}
}

189 
boﬁ
 
SysSëCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

190 
›tMgr_
.
∑r£
(
¨gv
);

191 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

192 
	g›tMgr_
.
ußge
();

193  
	gåue
;

196 i‡(
	g¨gv
.
size
() == 1) {

197 
V¨M≠
 
v¨s
 = 
cmdMgr_
->
gëV¨s
();

198 
	gcout
 << "# së v¨übÀs" << 
	gídl
;

199 
V¨M≠Iãr
 
	gô
 = 
v¨s
.
begö
(); ià!v¨s.
íd
(); ++it)

200 
	gcout
 << "# " << 
	gô
->
	gfú°
 << " = " << it->
	g£c⁄d
 << 
	gídl
;

201  
	gåue
;

204 i‡(
	g¨gv
.
size
() < 3) {

205 
	g˚º
 << "**ERROR SysSetCmd::exec(): variableánd stringÇeeded";

206 
	g˚º
 << 
	gídl
;

207  
	gÁl£
;

210 i‡(!
	gcmdMgr_
->
addV¨
(
¨gv
[1],árgv[2])) {

211 
	g˚º
 << "**ERROR SysSëCmd::exec(): v¨übÀ `" << 
	g¨gv
[1] << "' ";

212 
	g˚º
 << "£àÁûed" << 
	gídl
;

213  
	gÁl£
;

216  
	gåue
;

220 
	gSysExôCmd
::
	$SysExôCmd
(c⁄° 
°rög
 &
«me
, 
CmdMgr
 *
cmdMgr
Ë: 
	$Cmd
(
«me
) {

221 
cmdMgr_
 = 
cmdMgr
;

222 
›tMgr_
.
	`£tSh‹tDes
("exitÅheÖrogram");

223 
›tMgr_
.
	`£tDes
("exitsÅheÖrogram");

224 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

225 
›t
->
	`addFœg
("h");

226 
›t
->
	`addFœg
("help");

227 
›tMgr_
.
	`ªgO±
(
›t
);

228 
	}
}

229 
	gSysExôCmd
::~
	$SysExôCmd
(Ë{
	}
}

231 
boﬁ
 
SysExôCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

232 
›tMgr_
.
∑r£
(
¨gv
);

233 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

234 
	g›tMgr_
.
ußge
();

235  
	gåue
;

238 
	gcmdMgr_
->
£tExô
(
åue
);

239  
	gåue
;

243 
	gSysSour˚Cmd
::
	$SysSour˚Cmd
(c⁄° 
°rög
 &
«me
, 
CmdMgr
 *
cmdMgr
Ë: 
	$Cmd
(
«me
) {

244 
cmdMgr_
 = 
cmdMgr
;

245 
›tMgr_
.
	`£tSh‹tDes
("run commands from startup file");

246 
›tMgr_
.
	`£tDes
("runs commands from FILE");

247 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
REQ
, "target file with commands", "FILE"));

248 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

249 
›t
->
	`addFœg
("h");

250 
›t
->
	`addFœg
("help");

251 
›tMgr_
.
	`ªgO±
(
›t
);

252 
	}
}

253 
	gSysSour˚Cmd
::~
	$SysSour˚Cmd
(Ë{
	}
}

255 
boﬁ
 
SysSour˚Cmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

256 
›tMgr_
.
∑r£
(
¨gv
);

257 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

258 
	g›tMgr_
.
ußge
();

259  
	gåue
;

262 i‡(
	g¨gv
.
size
() < 2) {

263 
	g˚º
 << "**ERROR SysSourceCmd::exec(): ";

264 
	g˚º
 << "∂ó£ s≥cify sour˚ fûe" << 
	gídl
;

265  
	gÁl£
;

268 
if°ªam
 
	gf°r
;

269 
	gf°r
.
›í
(
¨gv
[1].
c_°r
(), 
if°ªam
::
ö
);

270 i‡(!
	gf°r
) {

271 
	g˚º
 << "**ERROR SysSourceCmd::exec(): ";

272 
	g˚º
 << "fûê`" << 
	g¨gv
[1] << "' c™nŸ bê›íed" << 
	gídl
;

273  
	gÁl£
;

276 
size_t
 
	gpos
 = 
¨gv
[1].
föd_œ°_of
('/');

277 
°rög
 
	gba£Name
 = 
pos
 =
¨gv
[1].
≈os
 ?árgv[1] :árgv[1].
sub°r
(pos);

279 
	gcou¡
 = 0;

280 
°rög
 
	gcmdSå
;

281 
	gCmdMgr
::
Resu…
 
ªs
;

282 
	gf°r
.
good
()) {

283 
gëlöe
(
f°r
, 
cmdSå
);

284 
	gcou¡
++;

285 i‡(
	gcmdSå
 == "")

288 
	gcout
 << 
	gba£Name
 << " " << 
	gcou¡
 << "> ";

289 
	gcout
 << 
	gcmdSå
 << 
	gídl
;

290 
	gªs
 = 
cmdMgr_
->
exec
(
cmdSå
);

291 i‡(
	gªs
 =
CmdMgr
::
NOT_EXIST
) {

292 
˚º
 << "**ERROR SysSourceCmd::exec(): ";

293 
	g˚º
 << "comm™d d€†nŸÉxi°" << 
	gídl
;

295 i‡(
	gªs
 =
CmdMgr
::
EXIT
)

298 
	gf°r
.
˛o£
();

300  
	gåue
;

304 
	gSysHñpCmd
::
	$SysHñpCmd
(c⁄° 
°rög
 &
«me
, 
CmdMgr
 *
cmdMgr
Ë: 
	$Cmd
(
«me
) {

305 
cmdMgr_
 = 
cmdMgr
;

306 
›tMgr_
.
	`£tSh‹tDes
("print help messages");

307 
›tMgr_
.
	`£tDes
("prints help for COMMAND. IfÇo specitfied,ÖrintsÅhe usage ofÅhe command manager.");

308 
›tMgr_
.
	`ªgArg
(
√w
 
	`Arg
(
Arg
::
OPT
, "target command", "COMMAND"));

309 
O±
 *
›t
 = 
√w
 
	`O±
(O±::
BOOL
, "print usage", "");

310 
›t
->
	`addFœg
("h");

311 
›t
->
	`addFœg
("help");

312 
›tMgr_
.
	`ªgO±
(
›t
);

313 
	}
}

314 
	gSysHñpCmd
::~
	$SysHñpCmd
(Ë{
	}
}

316 
boﬁ
 
SysHñpCmd
::
exec
(c⁄° 
ve˘‹
<
°rög
> &
¨gv
) {

317 
›tMgr_
.
∑r£
(
¨gv
);

318 i‡(
	g›tMgr_
.
isFœgSë
("h")) {

319 
	g›tMgr_
.
ußge
();

320  
	gåue
;

323 i‡(
	g¨gv
.
size
() == 1) {

324 
cmdMgr_
->
ußge
();

325  
	gåue
;

327 i‡(
	g¨gv
.
size
() > 1) {

328 
°rög
 
	gcmdSå
 = 
¨gv
[1];

329 
Cmd
 *
	gcmd
 = 
cmdMgr_
->
gëCmd
(
cmdSå
);

330 i‡(!
	gcmd
) {

331 
	g˚º
 << "**ERROR SysHñpCmd::exec(): comm™d `" << 
	gcmdSå
 << "' ";

332 
	g˚º
 << "d€†nŸÉxi°" << 
	gídl
;

333  
	gÁl£
;

336 
	gcmd
->
	g›tMgr_
.
ußge
();

338  
	gåue
;

	@common/src/sys_cmd.h

8 #i‚de‡
_COMMON_SYS_CMD_H_


9 
	#_COMMON_SYS_CMD_H_


	)

11 
	~"cmd.h
"

13 
«me•a˚
 
	gComm⁄Ns
 {

15 ˛as†
	cSysBashCmd
 : 
public
 
Cmd
 {

16 
public
:

17 
SysBashCmd
(c⁄° 
°d
::
°rög
 &
«me
);

18 ~
SysBashCmd
();

20 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

23 ˛as†
	cSysLi°Cmd
 : 
public
 
Cmd
 {

24 
public
:

25 
SysLi°Cmd
(c⁄° 
°d
::
°rög
 &
«me
);

26 ~
SysLi°Cmd
();

28 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

31 ˛as†
	cSysC©Cmd
 : 
public
 
Cmd
 {

32 
public
:

33 
SysC©Cmd
(c⁄° 
°d
::
°rög
 &
«me
);

34 ~
SysC©Cmd
();

36 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

39 ˛as†
	cSysCdCmd
 : 
public
 
Cmd
 {

40 
public
:

41 
SysCdCmd
(c⁄° 
°d
::
°rög
 &
«me
);

42 ~
SysCdCmd
();

44 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

47 ˛as†
	cSysPwdCmd
 : 
public
 
Cmd
 {

48 
public
:

49 
SysPwdCmd
(c⁄° 
°d
::
°rög
 &
«me
);

50 ~
SysPwdCmd
();

52 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

55 ˛as†
	cSysSëCmd
 : 
public
 
Cmd
 {

56 
public
:

57 
SysSëCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
CmdMgr
 *
mgr
);

58 ~
SysSëCmd
();

60 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

62 
	g¥iv©e
:

63 
CmdMgr
 *
cmdMgr_
;

66 ˛as†
	cSysExôCmd
 : 
public
 
Cmd
 {

67 
public
:

68 
SysExôCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
CmdMgr
 *
mgr
);

69 ~
SysExôCmd
();

71 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

73 
	g¥iv©e
:

74 
CmdMgr
 *
cmdMgr_
;

77 ˛as†
	cSysSour˚Cmd
 : 
public
 
Cmd
 {

78 
public
:

79 
SysSour˚Cmd
(c⁄° 
°d
::
°rög
 &
«me
, 
CmdMgr
 *
mgr
);

80 ~
SysSour˚Cmd
();

82 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

84 
	g¥iv©e
:

85 
CmdMgr
 *
cmdMgr_
;

88 ˛as†
	cSysHñpCmd
 : 
public
 
Cmd
 {

89 
public
:

90 
SysHñpCmd
(c⁄° 
°d
::
°rög
 &
«me
, 
CmdMgr
 *
mgr
);

91 ~
SysHñpCmd
();

93 
boﬁ
 
exec
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
> &
¨gv
);

95 
	g¥iv©e
:

96 
CmdMgr
 *
cmdMgr_
;

	@common/src/tm_usage.cpp

8 
	~<sys/ªsour˚.h
>

9 
	~<sys/time.h
>

10 
	~<c°dio
>

11 
	~<c°rög
>

12 
	~<c°dlib
>

14 
	~"tm_ußge.h
"

16 
usög
 
«me•a˚
 
	g°d
;

17 
usög
 
«me•a˚
 
	gComm⁄Ns
;

19 
	gTmUßge
::
	$TmUßge
() {

20 
tSèπ_
.
uTime
 = 0;

21 
tSèπ_
.
sTime
 = 0;

22 
tSèπ_
.
rTime
 = 0;

23 
tSèπ_
.
vmSize
 = 0;

24 
tSèπ_
.
vmPók
 = 0;

25 
tSèπ_
.
vmDiff
 = 0;

26 
pSèπ_
.
uTime
 = 0;

27 
pSèπ_
.
sTime
 = 0;

28 
pSèπ_
.
rTime
 = 0;

29 
pSèπ_
.
vmSize
 = 0;

30 
pSèπ_
.
vmPók
 = 0;

31 
pSèπ_
.
vmDiff
 = 0;

32 
	}
}

34 
	gTmUßge
::~
	$TmUßge
(Ë{
	}
}

37 
boﬁ
 
TmUßge
::
	$tŸÆSèπ
() {

38  
	`checkUßge
(
tSèπ_
);

39 
	}
}

41 
boﬁ
 
	gTmUßge
::
	$≥riodSèπ
() {

42  
	`checkUßge
(
pSèπ_
);

43 
	}
}

45 
boﬁ
 
	gTmUßge
::
	$gëTŸÆUßge
(
TmSèt
 &
°
) const {

46 i‡(!
	`checkUßge
(
°
))

47  
Ál£
;

48 
°
.
uTime
 -
tSèπ_
.uTime;

49 
°
.
sTime
 -
tSèπ_
.sTime;

50 
°
.
rTime
 -
tSèπ_
.rTime;

51 
°
.
vmDiff
 = st.
vmSize
 - 
tSèπ_
.vmSize;

52 
°
.
vmPók
 = st.vmPók > 
tSèπ_
.vmPeak ? st.vmPeak :ÅStart_.vmPeak;

53  
åue
;

54 
	}
}

56 
boﬁ
 
	gTmUßge
::
	$gëPîiodUßge
(
TmSèt
 &
°
) const {

57 i‡(!
	`checkUßge
(
°
))

58  
Ál£
;

59 
°
.
uTime
 -
pSèπ_
.uTime;

60 
°
.
sTime
 -
pSèπ_
.sTime;

61 
°
.
rTime
 -
pSèπ_
.rTime;

62 
°
.
vmDiff
 = st.
vmSize
 - 
pSèπ_
.vmSize;

63 
°
.
vmPók
 = st.vmPók > 
pSèπ_
.vmPeak ? st.vmPeak :ÖStart_.vmPeak;

64  
åue
;

65 
	}
}

76 
boﬁ
 
	gTmUßge
::
	$checkUßge
(
TmSèt
 &
°
) const {

78 
rußge
 
tUsg
;

79 
timevÆ
 
tRól
;

80 
	`gërußge
(
RUSAGE_SELF
, &
tUsg
);

81 
	`gëtimeofday
(&
tRól
, 
NULL
);

82 
°
.
uTime
 = 
tUsg
.
ru_utime
.
tv_£c
 * 1000000 +ÅUsg.ru_utime.
tv_u£c
;

83 
°
.
sTime
 = 
tUsg
.
ru_°ime
.
tv_£c
 * 1000000 +ÅUsg.ru_°ime.
tv_u£c
;

84 
°
.
rTime
 = 
tRól
.
tv_£c
 * 1000000 +ÅRól.
tv_u£c
;

87 
FILE
 *
fmem
 = 
	`f›í
("/proc/self/status", "r");

88 i‡(!
fmem
) {

89 
	`Ârötf
(
°dîr
,

91 
°
.
vmSize
 = 0;

92 
°
.
vmPók
 = 0;

93  
Ál£
;

95 
membuf
[128];

96 
	`fgës
(
membuf
, 128, 
fmem
)) {

97 *
ch
;

98 i‡((
ch
 = 
	`°r°r
(
membuf
, "VmPeak:"))) {

99 
°
.
vmPók
 = 
	`©ﬁ
(
ch
 + 7);

102 i‡((
ch
 = 
	`°r°r
(
membuf
, "VmSize:"))) {

103 
°
.
vmSize
 = 
	`©ﬁ
(
ch
 + 7);

107 
	`f˛o£
(
fmem
);

108  
åue
;

109 
	}
}

	@common/src/tm_usage.h

9 #i‚de‡
_COMMON_TM_USAGE_H_


10 
	#_COMMON_TM_USAGE_H_


	)

12 
«me•a˚
 
	gComm⁄Ns
 {

14 
	sTmSèt
 {

15 
	gvmSize
;

16 
	gvmPók
;

17 
	gvmDiff
;

18 
	grTime
;

19 
	guTime
;

20 
	gsTime
;

23 ˛as†
	cTmUßge
 {

24 
	gpublic
:

25 
TmUßge
();

26 ~
TmUßge
();

28 
boﬁ
 
tŸÆSèπ
();

29 
boﬁ
 
≥riodSèπ
();

30 
boﬁ
 
gëTŸÆUßge
(
TmSèt
 &
°
) const;

31 
boﬁ
 
gëPîiodUßge
(
TmSèt
 &
°
) const;

32 
boﬁ
 
checkUßge
(
TmSèt
 &
°
) const;

34 
	g¥iv©e
:

35 
TmSèt
 
tSèπ_
;

36 
TmSèt
 
	gpSèπ_
;

	@common/src/vt100.h

13 #i‚de‡
_COMMON_VT100_H_


14 
	#_COMMON_VT100_H_


	)

16 
«me•a˚
 
	gComm⁄Ns
 {

19 c⁄° *c⁄° 
	gANSI_RESET
 = "\033[0m";

20 c⁄° *c⁄° 
	gANSI_BLACK
 = "\033[30m";

21 c⁄° *c⁄° 
	gANSI_RED
 = "\033[31m";

22 c⁄° *c⁄° 
	gANSI_GREEN
 = "\033[32m";

23 c⁄° *c⁄° 
	gANSI_YELLOW
 = "\033[33m";

24 c⁄° *c⁄° 
	gANSI_BLUE
 = "\033[34m";

25 c⁄° *c⁄° 
	gANSI_PURPLE
 = "\033[35m";

26 c⁄° *c⁄° 
	gANSI_CYAN
 = "\033[36m";

27 c⁄° *c⁄° 
	gANSI_WHITE
 = "\033[37m";

30 c⁄° *c⁄° 
	gVT100_LM_NL
 = "\033[20h";

31 c⁄° *c⁄° 
	gVT100_CKM_APP
 = "\033[?1h";

33 c⁄° *c⁄° 
	gVT100_COLM_132
 = "\033[?3h";

34 c⁄° *c⁄° 
	gVT100_SCLM_SM
 = "\033[?4h";

35 c⁄° *c⁄° 
	gVT100_SCNM_REV
 = "\033[?5h";

36 c⁄° *c⁄° 
	gVT100_OM_REL
 = "\033[?6h";

37 c⁄° *c⁄° 
	gVT100_AWM_ON
 = "\033[?7h";

38 c⁄° *c⁄° 
	gVT100_ARM_ON
 = "\033[?8h";

39 c⁄° *c⁄° 
	gVT100_INLM_ON
 = "\033[?9h";

41 c⁄° *c⁄° 
	gVT100_LM_LF
 = "\033[20h";

42 c⁄° *c⁄° 
	gVT100_CKM_CSR
 = "\033[?1h";

43 c⁄° *c⁄° 
	gVT100_VT52M
 = "\033[?1h";

44 c⁄° *c⁄° 
	gVT100_COLM_80
 = "\033[?3h";

45 c⁄° *c⁄° 
	gVT100_SCLM_JP
 = "\033[?4h";

46 c⁄° *c⁄° 
	gVT100_SCNM_NOR
 = "\033[?5h";

47 c⁄° *c⁄° 
	gVT100_OM_ABS
 = "\033[?6h";

48 c⁄° *c⁄° 
	gVT100_AWM_OFF
 = "\033[?7h";

49 c⁄° *c⁄° 
	gVT100_ARM_OFF
 = "\033[?8h";

50 c⁄° *c⁄° 
	gVT100_INLM_OFF
 = "\033[?9h";

53 c⁄° *c⁄° 
	gVT100_CSRU
 = "\033[1A";

54 c⁄° *c⁄° 
	gVT100_CSRD
 = "\033[1B";

55 c⁄° *c⁄° 
	gVT100_CSRF
 = "\033[1C";

56 c⁄° *c⁄° 
	gVT100_CSRB
 = "\033[1D";

57 c⁄° *c⁄° 
	gVT100_CSRL
 = "\033E";

58 c⁄° *c⁄° 
	gVT100_CSRS
 = "\0337";

59 c⁄° *c⁄° 
	gVT100_CSRR
 = "\0338";

62 c⁄° *c⁄° 
	gVT100_SCRU
 = "\033D";

63 c⁄° *c⁄° 
	gVT100_SCRD
 = "\033M";

64 c⁄° *c⁄° 
	gVT100_SCRE
 = "\033[r";

67 c⁄° *c⁄° 
	gVT100_TABSET
 = "\033H";

68 c⁄° *c⁄° 
	gVT100_TABCLR
 = "\033[g";

69 c⁄° *c⁄° 
	gVT100_TABCLRA
 = "\033[3g";

72 c⁄° *c⁄° 
	gVT100_ERSEOL
 = "\033[K";

73 c⁄° *c⁄° 
	gVT100_ERSSOL
 = "\033[1K";

74 c⁄° *c⁄° 
	gVT100_ERSL
 = "\033[2K";

75 c⁄° *c⁄° 
	gVT100_ERSD
 = "\033[J";

76 c⁄° *c⁄° 
	gVT100_ERSU
 = "\033[1J";

77 c⁄° *c⁄° 
	gVT100_ERSS
 = "\033[2J";

	@core/src/atpg.h

20 #i‚de‡
_CORE_ATPG_H_


21 
	#_CORE_ATPG_H_


	)

23 
	#_MAX_BACK_TRACK_LIMIT_
 256

	)

25 
	~"im∂.h
"

27 
«me•a˚
 
	gC‹eNs
 {

29 
	g°d
::
	t∑ú
<, 
	tVÆue
> 
	tObje˘ive
;

31 ˛as†
	cAçg
 {

32 
	gpublic
:

33 
	eGíSètus
 { 
TEST_FOUND
 = 0, 
	gUNTESTABLE
, 
	gABORT
 };

34 
	eAçgSètus
 { 
	gIMPLY_AND_CHECK
 = 0,

35 
	gDECISION
,

36 
	gBACKTRACE
,

37 
	gBACKTRACK
,

38 
	gEXIT
 };

40 
Açg
(
Cúcuô
 *
cú
, 
Fau…
 *
f
);

41 ~
Açg
();

43 
GíSètus
 
Tpg
();

45 
assignP©ã∫PiVÆue
(
P©ã∫
 *
∑t
);

46 
assignP©ã∫PoVÆue
(
P©ã∫
 *
∑t
);

48 
	g¥Ÿe˘ed
:

49 
Cúcuô
 *
cú_
;

50 
Im∂
 *
	gim∂_
;

52 
Fau…
 *
	gcuºít_Áu…_
;

56 
ölöe
 
	gAçg
::
	$Açg
(
Cúcuô
 *
cú
, 
Fau…
 *
f
) {

57 
cú_
 = 
cú
;

58 
im∂_
 = 
√w
 
	`Im∂
(
cú
, 
f
);

59 
	}
}

	@core/src/atpg_mgr.h

19 #i‚de‡
_CORE_ATPG_MGR_H_


20 
	#_CORE_ATPG_MGR_H_


	)

22 
	~"©pg.h
"

23 
	~"simuœt‹.h
"

25 
«me•a˚
 
	gC‹eNs
 {

27 
	g°d
::
	tve˘‹
<
	tAçg
*> 
	tAçgVec
;

29 ˛as†
	cAçgMgr
 {

30 
	gpublic
:

31 
AçgMgr
();

32 ~
AçgMgr
();

34 
Fau…Li°Exåa˘
 *
	gfLi°Exåa˘_
;

35 
P©ã∫Pro˚ss‹
 *
	gpcﬁl_
;

36 
Cúcuô
 *
	gcú_
;

37 
Simuœt‹
 *
	gsim_
;

38 
Açg
 *
	g©pg_
;

43 
ölöe
 
	gAçgMgr
::
	$AçgMgr
() {

44 
fLi°Exåa˘_
 = 
NULL
;

45 
pcﬁl_
 = 
NULL
;

46 
cú_
 = 
NULL
;

47 
sim_
 = 
NULL
;

48 
©pg_
 = 
NULL
;

49 
	}
}

51 
ölöe
 
	gAçgMgr
::~
	$AçgMgr
(Ë{
	}
}

	@core/src/circuit.cpp

8 
	~"cúcuô.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gI¡fNs
;

12 
usög
 
«me•a˚
 
	gC‹eNs
;

15 
boﬁ
 
	gCúcuô
::
	$buûd
(
Nëli°
 * c⁄° 
∆
, c⁄° &
n‰ame
,

16 c⁄° 
tfC⁄√˘Ty≥
 &
ty≥
) {

17 
n‰ame_
 = 
n‰ame
;

18 
Cñl
 *
t›
 = 
∆
->
	`gëT›
();

19 i‡(!
t›
) {

20 
˚º
 << "**ERROR Cúcuô::buûd():Çÿt› moduÀ së" << 
ídl
;

21  
Ál£
;

23 
Techlib
 *
lib
 = 
∆
->
	`gëTechlib
();

24 i‡(!
lib
) {

25 
˚º
 << "**ERROR Cúcuô::buûd():ÇÿãchnﬁogyÜibøry" << 
ídl
;

26  
Ál£
;

28 
∆_
 = 
∆
;

29 
n‰ame_
 = 
n‰ame
;

30 
c⁄nTy≥_
 = 
ty≥
;

33 
∆
->
	`Àvñize
();

34 
lib
->
	`Àvñize
();

37 
	`¸óãM≠
();

40 
g©es_
 = 
√w
 
G©e
[
ng©e_
 * 
n‰ame
];

41 
fis_
 = 
√w
 [
¬ë_
 * 
n‰ame
 + 
≈pi_
 * (nframe - 1)];

42 
fos_
 = 
√w
 [
¬ë_
 * 
n‰ame
 + 
≈pi_
 * (nframe - 1)];

46 
	`¸óãG©e
();

47 
	`c⁄√˘Føme
();

48 
	`assignFiMöLvl
();

51  
åue
;

52 
	}
}

68 
	gCúcuô
::
	$¸óãM≠
() {

69 
	`ˇlNg©e
();

70 
	`ˇlN√t
();

71 
	}
}

74 
	gCúcuô
::
	$ˇlNg©e
() {

75 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

76 
Techlib
 *
lib
 = 
∆_
->
	`gëTechlib
();

78 
ng©e_
 = 0;

80 
p‹tToG©e_
 = 
√w
 [
t›
->
	`gëNP‹t
()];

81 
≈i_
 = 0;

82 
size_t
 
i
 = 0; i < 
t›
->
	`gëNP‹t
(); ++i) {

83 
P‹t
 *
p
 = 
t›
->
	`gëP‹t
(
i
);

84 i‡(
p
->
ty≥_
 !
P‹t
::
INPUT
)

86 if(!
	`°rcmp
(
p
->
«me_
,"CK") || !strcmp(p->name_,"test_si") || !strcmp(p->name_,"test_se"))

88 
p‹tToG©e_
[
i
] = 
≈i_
;

89 
ng©e_
++;

90 
≈i_
++;

95 
≈pi_
 = 0;

96 
˚ŒToG©e_
 = 
√w
 [
t›
->
	`gëNCñl
()];

97 
size_t
 
i
 = 0 ; i < 
t›
->
	`gëNCñl
(); ++i) {

98 
˚ŒToG©e_
[
i
] = 
ng©e_
;

99 i‡(
lib
->
	`hasPmt
(
t›
->
	`gëCñl
(
i
)->
libc_
->
id_
, 
Pmt
::
DFF
)) {

100 
≈pi_
++;

101 
ng©e_
++;

104 
ng©e_
 +
t›
->
	`gëCñl
(
i
)->
libc_
->
	`gëNCñl
();

108 
ncomb_
 = 
ng©e_
 - 
≈i_
 - 
≈pi_
;

111 
≈o_
 = 0;

112 
size_t
 
i
 = 0; i < 
t›
->
	`gëNP‹t
(); ++i) {

113 i‡(
t›
->
	`gëP‹t
(
i
)->
ty≥_
 =
P‹t
::
OUTPUT
) {

114 if(!
	`°rcmp
(
t›
->
	`gëP‹t
(
i
)->
«me_
,"test_so"))

116 
p‹tToG©e_
[
i
] = 
ng©e_
;

117 
ng©e_
++;

118 
≈o_
++;

123 
ng©e_
 +
≈pi_
;

124 
	}
}

127 
	gCúcuô
::
	$ˇlN√t
() {

128 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

129 
Techlib
 *
lib
 = 
∆_
->
	`gëTechlib
();

131 
¬ë_
 = 0;

133 
size_t
 
i
 = 0; i < 
t›
->
	`gëNNë
(); ++i) {

134 
NëSë
 
eqvs
 = 
t›
->
	`gëEqvNës
(
i
);

135 
≈‹ts
 = 0;

136 
boﬁ
 
smÆÀ°
 = 
åue
;

137 
NëSë
::
ôî©‹
 
ô
 = 
eqvs
.
	`begö
(); ià!eqvs.
	`íd
(); ++it) {

138 i‡((*
ô
)->
id_
 < ()
i
) {

139 
smÆÀ°
 = 
Ál£
;

142 
≈‹ts
 +(*
ô
)->
	`gëNP‹t
();

144 i‡(
smÆÀ°
)

145 
¬ë_
 +
≈‹ts
 - 1;

149 
size_t
 
i
 = 0; i < 
t›
->
	`gëNCñl
(); ++i) {

150 
Cñl
 *
c
 = 
t›
->
	`gëCñl
(
i
);

151 i‡(!
lib
->
	`hasPmt
(
c
->
ty≥Name_
, 
Pmt
::
DFF
))

152 
¬ë_
 +
c
->
libc_
->
	`gëNNë
(Ë- c->libc_->
	`gëNP‹t
();

154 
	}
}

165 
	gCúcuô
::
	$¸óãG©e
() {

166 
nfi
 = 0;

167 
nfo
 = 0;

168 
	`¸óãPi
(
nfo
);

169 
	`¸óãPpi
(
nfo
);

170 
	`¸óãComb
(
nfi
, 
nfo
);

171 
	`¸óãPo
(
nfi
);

172 
	`¸óãPpo
(
nfi
);

173 
	}
}

175 
	gCúcuô
::
	$¸óãPi
(&
nfo
) {

176 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

178 
size_t
 
i
 = 0; i < 
t›
->
	`gëNP‹t
(); ++i) {

179 
P‹t
 *
p
 = 
t›
->
	`gëP‹t
(
i
);

180 if(!
	`°rcmp
(
p
->
«me_
,"CK") || !strcmp(p->name_,"test_si") || !strcmp(p->name_,"test_se"))

182 
id
 = 
p‹tToG©e_
[
i
];

183 i‡(
p
->
ty≥_
 !
P‹t
::
INPUT
 || 
id
 < 0)

185 
g©es_
[
id
].
id_
 = id;

186 
g©es_
[
id
].
cid_
 = 
i
;

187 
g©es_
[
id
].
pmtid_
 = 0;

188 
g©es_
[
id
].
lvl_
 = 0;

189 
g©es_
[
id
].
ty≥_
 = 
G©e
::
PI
;

190 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

191 
nfo
 +
t›
->
	`gëNëP‹ts
(
p
->
öNë_
->
id_
).
	`size
() - 1;

193 
	}
}

195 
	gCúcuô
::
	$¸óãPpi
(&
nfo
) {

196 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

197 
i
 = 0; i < 
≈pi_
; ++i) {

198 
Cñl
 *
c
 = 
t›
->
	`gëCñl
(
i
);

199 
id
 = 
˚ŒToG©e_
[
i
];

200 
g©es_
[
id
].
id_
 = id;

201 
g©es_
[
id
].
cid_
 = 
i
;

202 
g©es_
[
id
].
pmtid_
 = 0;

203 
g©es_
[
id
].
lvl_
 = 0;

204 
g©es_
[
id
].
ty≥_
 = 
G©e
::
PPI
;

205 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

206 
qid
 = 0;

207 
	`°rcmp
(
c
->
	`gëP‹t
(
qid
)->
«me_
,"Q"))++qid;

208 
nfo
 +
t›
->
	`gëNëP‹ts
(
c
->
	`gëP‹t
(
qid
)->
exNë_
->
id_
).
	`size
() - 2;

210 if(
n‰ame_
 > 1 && 
c⁄nTy≥_
 =
SHIFT
 && 
i
 < 
≈pi_
-1)++
nfo
;

214 
	}
}

217 
	gCúcuô
::
	$¸óãComb
(&
nfi
, &
nfo
) {

218 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

220 
i
 = 
≈pi_
; i < ()
t›
->
	`gëNCñl
(); ++i) {

221 
Cñl
 *
c
 = 
t›
->
	`gëCñl
(
i
);

222 
j
 = 0; j < ()
c
->
libc_
->
	`gëNCñl
(); ++j) {

223 
id
 = 
˚ŒToG©e_
[
i
] + 
j
;

224 
g©es_
[
id
].
id_
 = id;

225 
g©es_
[
id
].
cid_
 = 
c
->
id_
;

226 
g©es_
[
id
].
pmtid_
 = 
j
;

228 
Pmt
 *
pmt
 = (Pmà*)
c
->
libc_
->
	`gëCñl
(
j
);

229 
	`¸óãPmt
(
id
, 
c
, 
pmt
, 
nfi
, 
nfo
);

232 i‡(
t›
->
	`gëNCñl
() > 0)

233 
lvl_
 = 
g©es_
[
˚ŒToG©e_
[
t›
->
	`gëNCñl
() - 1]].lvl_ + 2;

234 
	}
}

240 
	gCúcuô
::
	$¸óãPmt
(c⁄° &
id
, c⁄° 
Cñl
 * c⁄° 
c
,

241 c⁄° 
Pmt
 * c⁄° 
pmt
, &
nfi
, &
nfo
) {

243 
	`dëG©eTy≥
(
id
, 
c
, 
pmt
);

246 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

247 
maxLvl
 = -1;

248 
size_t
 
i
 = 0; i < 
pmt
->
	`gëNP‹t
(); ++i) {

249 i‡(
pmt
->
	`gëP‹t
(
i
)->
ty≥_
 !
P‹t
::
INPUT
)

251 
Në
 *
nö
 = 
pmt
->
	`gëP‹t
(
i
)->
exNë_
;

252 
size_t
 
j
 = 0; j < 
nö
->
	`gëNP‹t
(); ++j) {

253 
P‹t
 *
p
 = 
nö
->
	`gëP‹t
(
j
);

254 i‡(
p
 =
pmt
->
	`gëP‹t
(
i
))

257 
öId
 = 0;

259 i‡(
p
->
ty≥_
 =
P‹t
::
OUTPUT
 &&Ö->
t›_
 !
c
->
libc_
)

260 
öId
 = 
˚ŒToG©e_
[
c
->
id_
] + 
p
->
t›_
->id_;

263 i‡(
p
->
ty≥_
 =
P‹t
::
INPUT
 &&Ö->
t›_
 =
c
->
libc_
) {

264 
Në
 *
√x
 = 
c
->
	`gëP‹t
(
p
->
id_
)->
exNë_
;

265 
P‹tSë
 
ps
 = 
c
->
t›_
->
	`gëNëP‹ts
(
√x
->
id_
);

266 
P‹tSë
::
ôî©‹
 
ô
 = 
ps
.
	`begö
();

267  ; 
ô
 !
ps
.
	`íd
(); ++it) {

268 
Cñl
 *
cö
 = (*
ô
)->
t›_
;

269 i‡((*
ô
)->
ty≥_
 =
P‹t
::
OUTPUT
 && 
cö
 !
c
->
t›_
) {

270 
CñlSë
 
cs
 = 
cö
->
libc_
->
	`gëP‹tCñls
((*
ô
)->
id_
);

271 
öId
 = 
˚ŒToG©e_
[
cö
->
id_
];

272 i‡(
∆_
->
	`gëTechlib
()->
	`hasPmt
(
cö
->
libc_
->
id_
, 
Pmt
::
DFF
))

274 
öId
 +(*
cs
.
	`begö
())->
id_
;

277 i‡((*
ô
)->
ty≥_
 =
P‹t
::
INPUT
 && 
cö
 =
c
->
t›_
) {

278 
öId
 = 
p‹tToG©e_
[(*
ô
)->
id_
];

285 
g©es_
[
id
].
fis_
[g©es_[id].
nfi_
] = 
öId
;

286 
g©es_
[
id
].
nfi_
++;

287 
nfi
++;

289 
g©es_
[
öId
].
fos_
[g©es_[öId].
nfo_
] = 
id
;

290 
g©es_
[
öId
].
nfo_
++;

292 i‡(
g©es_
[
öId
].
lvl_
 > 
maxLvl
)

293 
maxLvl
 = 
g©es_
[
öId
].
lvl_
;

296 
g©es_
[
id
].
lvl_
 = 
maxLvl
 + 1;

300 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

301 
P‹t
 *
ouç
 = 
NULL
;

302 
size_t
 
i
 = 0; i < 
pmt
->
	`gëNP‹t
(Ë&& !
ouç
; ++i) {

303 i‡(
pmt
->
	`gëP‹t
(
i
)->
ty≥_
 =
P‹t
::
OUTPUT
)

304 
ouç
 = 
pmt
->
	`gëP‹t
(
i
);

306 
P‹tSë
 
ps
 = 
c
->
libc_
->
	`gëNëP‹ts
(
ouç
->
exNë_
->
id_
);

307 
P‹tSë
::
ôî©‹
 
ô
 = 
ps
.
	`begö
();

308  ; 
ô
 !
ps
.
	`íd
(); ++it) {

309 i‡((*
ô
)->
t›_
 !
c
->
libc_
 && (*ô)->t›_ !
pmt
) {

310 
nfo
 += 1;

312 i‡((*
ô
)->
t›_
 =
c
->
libc_
) {

313 
nid
 = 
c
->
	`gëP‹t
((*
ô
)->
id_
)->
exNë_
->id_;

314 
nfo
 +
c
->
t›_
->
	`gëNëP‹ts
(
nid
).
	`size
() - 1;

317 
	}
}

319 
	gCúcuô
::
	$dëG©eTy≥
(c⁄° &
id
, c⁄° 
Cñl
 * c⁄° 
c
,

320 c⁄° 
Pmt
 * c⁄° 
pmt
) {

321 
pmt
->
ty≥_
) {

322 
Pmt
::
BUF
:

323 
g©es_
[
id
].
ty≥_
 = 
G©e
::
BUF
;

325 
Pmt
::
INV
:

326 
Pmt
::
INVF
:

327 
g©es_
[
id
].
ty≥_
 = 
G©e
::
INV
;

329 
Pmt
::
MUX
:

330 
g©es_
[
id
].
ty≥_
 = 
G©e
::
MUX
;

332 
Pmt
::
AND
:

333 i‡(
c
->
	`gëNP‹t
() == 3)

334 
g©es_
[
id
].
ty≥_
 = 
G©e
::
AND2
;

335 i‡(
c
->
	`gëNP‹t
() == 4)

336 
g©es_
[
id
].
ty≥_
 = 
G©e
::
AND3
;

337 i‡(
c
->
	`gëNP‹t
() == 5)

338 
g©es_
[
id
].
ty≥_
 = 
G©e
::
AND4
;

340 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

342 
Pmt
::
NAND
:

343 i‡(
c
->
	`gëNP‹t
() == 3)

344 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NAND2
;

345 i‡(
c
->
	`gëNP‹t
() == 4)

346 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NAND3
;

347 i‡(
c
->
	`gëNP‹t
() == 5)

348 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NAND4
;

350 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

352 
Pmt
::
OR
:

353 i‡(
c
->
	`gëNP‹t
() == 3)

354 
g©es_
[
id
].
ty≥_
 = 
G©e
::
OR2
;

355 i‡(
c
->
	`gëNP‹t
() == 4)

356 
g©es_
[
id
].
ty≥_
 = 
G©e
::
OR3
;

357 i‡(
c
->
	`gëNP‹t
() == 5)

358 
g©es_
[
id
].
ty≥_
 = 
G©e
::
OR4
;

360 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

362 
Pmt
::
NOR
:

363 i‡(
c
->
	`gëNP‹t
() == 3)

364 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NOR2
;

365 i‡(
c
->
	`gëNP‹t
() == 4)

366 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NOR3
;

367 i‡(
c
->
	`gëNP‹t
() == 5)

368 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NOR4
;

370 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

372 
Pmt
::
XOR
:

373 i‡(
c
->
	`gëNP‹t
() == 3)

374 
g©es_
[
id
].
ty≥_
 = 
G©e
::
XOR2
;

375 i‡(
c
->
	`gëNP‹t
() == 4)

376 
g©es_
[
id
].
ty≥_
 = 
G©e
::
XOR3
;

378 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

380 
Pmt
::
XNOR
:

381 i‡(
c
->
	`gëNP‹t
() == 3)

382 
g©es_
[
id
].
ty≥_
 = 
G©e
::
XNOR2
;

383 i‡(
c
->
	`gëNP‹t
() == 4)

384 
g©es_
[
id
].
ty≥_
 = 
G©e
::
XNOR3
;

386 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

388 
Pmt
::
TIE1
:

389 
g©es_
[
id
].
ty≥_
 = 
G©e
::
TIE1
;

391 
Pmt
::
TIE0
:

392 
g©es_
[
id
].
ty≥_
 = 
G©e
::
TIE0
;

394 
Pmt
::
TIEX
:

395 
g©es_
[
id
].
ty≥_
 = 
G©e
::
TIE0
;

397 
Pmt
::
TIEZ
:

398 
g©es_
[
id
].
ty≥_
 = 
G©e
::
TIEZ
;

401 
g©es_
[
id
].
ty≥_
 = 
G©e
::
NA
;

403 
	}
}

405 
	gCúcuô
::
	$¸óãPo
(&
nfi
) {

406 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

408 
size_t
 
i
 = 0; i < 
t›
->
	`gëNP‹t
(); ++i) {

409 
P‹t
 *
p
 = 
t›
->
	`gëP‹t
(
i
);

410 if(!
	`°rcmp
(
p
->
«me_
,"test_so"))

412 
id
 = 
p‹tToG©e_
[
i
];

413 i‡(
p
->
ty≥_
 !
P‹t
::
OUTPUT
 || 
id
 < 0)

415 
g©es_
[
id
].
id_
 = id;

416 
g©es_
[
id
].
cid_
 = 
i
;

417 
g©es_
[
id
].
pmtid_
 = 0;

418 
g©es_
[
id
].
lvl_
 =Üvl_ - 1;

419 
g©es_
[
id
].
ty≥_
 = 
G©e
::
PO
;

420 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

421 
P‹tSë
 
ps
 = 
t›
->
	`gëNëP‹ts
(
p
->
öNë_
->
id_
);

422 
P‹tSë
::
ôî©‹
 
ô
 = 
ps
.
	`begö
();

423  ; 
ô
 !
ps
.
	`íd
(); ++it) {

424 i‡((*
ô
Ë=
p
)

426 
öId
 = 0;

427 i‡((*
ô
)->
t›_
 =
t›
 && (*ô)->
ty≥_
 =
P‹t
::
INPUT
)

428 
öId
 = 
p‹tToG©e_
[(*
ô
)->
id_
];

429 i‡((*
ô
)->
t›_
 !
t›
 && (*ô)->
ty≥_
 =
P‹t
::
OUTPUT
) {

430 
öId
 = 
˚ŒToG©e_
[(*
ô
)->
t›_
->
id_
];

431 
Cñl
 *
libc
 = (*
ô
)->
t›_
->
libc_
;

432 i‡(!
∆_
->
	`gëTechlib
()->
	`hasPmt
(
libc
->
id_
, 
Pmt
::
DFF
))

433 
öId
 +(*
libc
->
	`gëP‹tCñls
((*
ô
)->
id_
).
	`begö
())->id_;

437 
g©es_
[
id
].
fis_
[g©es_[id].
nfi_
] = 
öId
;

438 
g©es_
[
id
].
nfi_
++;

440 
g©es_
[
öId
].
fos_
[g©es_[öId].
nfo_
] = 
id
;

441 
g©es_
[
öId
].
nfo_
++;

443 
nfi
++;

446 
	}
}

448 
	gCúcuô
::
	$¸óãPpo
(&
nfi
) {

449 
Cñl
 *
t›
 = 
∆_
->
	`gëT›
();

450 
i
 = 0; i < 
≈pi_
; ++i) {

451 
Cñl
 *
c
 = 
t›
->
	`gëCñl
(
i
);

452 
id
 = 
ng©e_
 - 
≈pi_
 + 
i
 ;

453 
g©es_
[
id
].
id_
 = id;

454 
g©es_
[
id
].
cid_
 = 
i
;

455 
g©es_
[
id
].
pmtid_
 = 0;

456 
g©es_
[
id
].
lvl_
 =Üvl_ - 1;

457 
g©es_
[
id
].
ty≥_
 = 
G©e
::
PPO
;

458 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

459 
did
 = 0;

460 
	`°rcmp
(
c
->
	`gëP‹t
(
did
)->
«me_
,"D"))++did;

461 
P‹t
 *
öp
 = 
c
->
	`gëP‹t
(
did
);

463 
P‹tSë
 
ps
 = 
t›
->
	`gëNëP‹ts
(
c
->
	`gëP‹t
(
öp
->
id_
)->
exNë_
->id_);

464 
P‹tSë
::
ôî©‹
 
ô
 = 
ps
.
	`begö
();

465  ; 
ô
 !
ps
.
	`íd
(); ++it) {

466 i‡((*
ô
Ë=
öp
)

468 
öId
 = 0;

469 i‡((*
ô
)->
t›_
 =
t›
 && (*ô)->
ty≥_
 =
P‹t
::
INPUT
)

470 
öId
 = 
p‹tToG©e_
[(*
ô
)->
id_
];

471 i‡((*
ô
)->
t›_
 !
t›
 && (*ô)->
ty≥_
 =
P‹t
::
OUTPUT
) {

472 
öId
 = 
˚ŒToG©e_
[(*
ô
)->
t›_
->
id_
];

473 
Cñl
 *
libc
 = (*
ô
)->
t›_
->
libc_
;

474 i‡(!
∆_
->
	`gëTechlib
()->
	`hasPmt
(
libc
->
id_
, 
Pmt
::
DFF
))

475 
öId
 +(*
libc
->
	`gëP‹tCñls
((*
ô
)->
id_
).
	`begö
())->id_;

479 
g©es_
[
id
].
fis_
[g©es_[id].
nfi_
] = 
öId
;

480 
g©es_
[
id
].
nfi_
++;

482 
g©es_
[
öId
].
fos_
[g©es_[öId].
nfo_
] = 
id
;

483 
g©es_
[
öId
].
nfo_
++;

485 
nfi
++;

488 
	}
}

502 
	gCúcuô
::
	$c⁄√˘Føme
() {

503 
nfo
 = 
¬ë_
;

504 
nfi
 = 
¬ë_
;

505 
i
 = 1; i < 
n‰ame_
; ++i) {

506 
off£t
 = 
ng©e_
 * 
i
;

507 if(
c⁄nTy≥_
 =
CAPTURE
)

508 
j
 = 0; j < 
≈pi_
; ++j){

509 
id
 = 
off£t
 - 
≈pi_
 + 
j
;

510 
g©es_
[
id
].
nfo_
 = 1;

511 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

512 
nfo
 +
g©es_
[
id
].
nfo_
;

514 
j
 = 0; j < 
ng©e_
; ++j) {

515 
id
 = 
off£t
 + 
j
;

516 
g©es_
[
id
].
id_
 = id;

517 
g©es_
[
id
].
cid_
 = g©es_[
j
].cid_;

518 
g©es_
[
id
].
lvl_
 =Üvl_ * 
i
 + g©es_[
j
].lvl_;

519 
g©es_
[
id
].
ty≥_
 = g©es_[
j
].type_;

520 
g©es_
[
id
].
‰ame_
 = 
i
;

521 if(
g©es_
[
id
].
ty≥_
 !
G©e
::
PPI
 && g©es_[id].ty≥_ !G©e::
PPO
){

522 
g©es_
[
id
].
nfo_
 = g©es_[
j
].nfo_;

523 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

524 
k
 = 0; k < 
g©es_
[
j
].
nfo_
; ++k)

525 
g©es_
[
id
].
fos_
[
k
] = g©es_[
j
].fos_[k] + 
off£t
;

526 
nfo
 +
g©es_
[
id
].
nfo_
;

527 
g©es_
[
id
].
nfi_
 = g©es_[
j
].nfi_;

528 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

529 
k
 = 0; k < 
g©es_
[
j
].
nfi_
; ++k)

530 
g©es_
[
id
].
fis_
[
k
] = g©es_[
j
].fis_[k] + 
off£t
;

531 
nfi
 +
g©es_
[
id
].
nfi_
;

533 i‡(
g©es_
[
id
].
ty≥_
 =
G©e
::
PPI
){

534 
g©es_
[
id
].
nfo_
 = g©es_[
j
].nfo_;

536 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

537 
k
 = 0; k < 
g©es_
[
j
].
nfo_
; ++k)

538 
g©es_
[
id
].
fos_
[
k
] = g©es_[
j
].fos_[k] + 
off£t
;

539 
nfo
 +
g©es_
[
id
].
nfo_
;

540 
g©es_
[
id
].
nfi_
 = 1;

541 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

542 if(
c⁄nTy≥_
 =
CAPTURE
){

543 
g©es_
[
id
].
fis_
[0] = id - 
≈i_
 - 
≈pi_
 ;

544 
g©es_
[
id
].
ty≥_
 = 
G©e
::
BUF
;

545 
g©es_
[
id
 - 
≈i_
 - 
≈pi_
].
fos_
[0] = id ;

548 if(
id
 !(
off£t
 + 
≈i_
)){

549 
g©es_
[
id
].
fis_
[0] = id - 
ng©e_
 - 1 ;

550 
g©es_
[
id
].
ty≥_
 = 
G©e
::
BUF
;

551 
g©es_
[
id
 - 
ng©e_
 - 1].
fos_
[g©es_[id -Çg©e_ - 1].
nfo_
] = id ;

552 ++
g©es_
[
id
 - 
ng©e_
 - 1].
nfo_
 ;

555 
g©es_
[
id
].
nfi_
 = 0;

557 
nfi
 +
g©es_
[
id
].
nfi_
;

560 
g©es_
[
id
].
nfo_
 = 0;

561 
g©es_
[
id
].
fos_
 = &fos_[
nfo
];

562 
g©es_
[
id
].
nfi_
 = g©es_[
j
].nfi_;

563 
g©es_
[
id
].
fis_
 = &fis_[
nfi
];

564 
k
 = 0; k < 
g©es_
[
j
].
nfi_
; ++k)

565 
g©es_
[
id
].
fis_
[
k
] = g©es_[
j
].fis_[k] + 
off£t
;

566 
nfi
 +
g©es_
[
id
].
nfi_
;

569 if(
c⁄nTy≥_
 =
CAPTURE
)

570 
j
 = 0; j < 
≈pi_
; ++j){

571 
id
 = 
off£t
 - 
≈pi_
 + 
j
;

572 
g©es_
[
id
].
ty≥_
 = 
G©e
::
BUF
;

575 
évl_
 = 
lvl_
 * 
n‰ame_
;

576 
tg©e_
 = 
ng©e_
 * 
n‰ame_
;

577 
	}
}

591 
	gCúcuô
::
	$assignFiMöLvl
(){

592 
i
 = 0; i < 
tg©e_
 ; ++i){

593 
G©e
* 
g
 = &
g©es_
[
i
];

594 
möLvl
 = 
g
->
lvl_
;

595 
j
 = 0; j < 
g
->
nfi_
; ++j)

596 if(
g©es_
[
g
->
fis_
[
j
]].
lvl_
 < 
möLvl
){

597 
möLvl
 = 
g©es_
[
g
->
fis_
[
j
]].
lvl_
;

598 
g
->
fiMöLvl_
 = g->
fis_
[
j
];

607 
	}
}

	@core/src/circuit.h

8 #i‚de‡
_CORE_CIRCUIT_H_


9 
	#_CORE_CIRCUIT_H_


	)

11 
	~<£t
>

13 
	~"öãrÁ˚/√éi°.h
"

15 
	~"g©e.h
"

17 
«me•a˚
 
	gC‹eNs
 {

19 ˛as†
	cCúcuô
 {

20 
	gpublic
:

21 
Cúcuô
();

22 ~
Cúcuô
();

26 
	etfC⁄√˘Ty≥
 { 
	gCAPTURE
 = 0, 
	gSHIFT
 };

29 
boﬁ
 
buûd
(
I¡fNs
::
Nëli°
 * c⁄° 
∆
, c⁄° &
n‰ame
 = 1,

30 c⁄° 
tfC⁄√˘Ty≥
 &
ty≥
 = 
CAPTURE
);

33 
	gI¡fNs
::
Nëli°
 *
∆_
;

34 
	g≈i_
;

35 
	g≈pi_
;

36 
	g≈o_
;

37 
	gncomb_
;

38 
	gng©e_
;

39 
	g¬ë_
;

40 
	glvl_
;

43 
	gn‰ame_
;

44 
tfC⁄√˘Ty≥
 
	gc⁄nTy≥_
;

45 
	gtg©e_
;

46 
	gévl_
;

55 
G©e
 *
	gg©es_
;

56 *
	gfis_
;

57 *
	gfos_
;

58 *
	g˚ŒToG©e_
;

59 *
	gp‹tToG©e_
;

61 
	g¥Ÿe˘ed
:

63 
¸óãM≠
();

64 
ˇlNg©e
();

65 
ˇlN√t
();

66 
¸óãG©e
();

67 
¸óãPi
(&
nfo
);

68 
¸óãPpi
(&
nfo
);

69 
¸óãComb
(&
nfi
, &
nfo
);

70 
¸óãPmt
(c⁄° &
id
, c⁄° 
I¡fNs
::
Cñl
 * c⁄° 
c
,

71 c⁄° 
I¡fNs
::
Pmt
 * c⁄° 
pmt
, &
nfi
, &
nfo
);

72 
dëG©eTy≥
(c⁄° &
id
, c⁄° 
I¡fNs
::
Cñl
 * c⁄° 
c
,

73 c⁄° 
I¡fNs
::
Pmt
 * c⁄° 
pmt
);

74 
¸óãPo
(&
nfi
);

75 
¸óãPpo
(&
nfi
);

76 
c⁄√˘Føme
();

77 
assignFiMöLvl
();

80 
ölöe
 
	gCúcuô
::
	$Cúcuô
() {

81 
∆_
 = 
NULL
;

82 
≈i_
 = 0;

83 
≈pi_
 = 0;

84 
≈o_
 = 0;

85 
ncomb_
 = 0;

86 
ng©e_
 = 0;

87 
¬ë_
 = 0;

88 
lvl_
 = -1;

89 
n‰ame_
 = 1;

90 
c⁄nTy≥_
 = 
CAPTURE
;

91 
g©es_
 = 
NULL
;

92 
˚ŒToG©e_
 = 
NULL
;

93 
p‹tToG©e_
 = 
NULL
;

94 
	}
}

96 
ölöe
 
	gCúcuô
::~
	$Cúcuô
() {

97 
dñëe
 [] 
g©es_
;

98 
dñëe
 [] 
fis_
;

99 
dñëe
 [] 
fos_
;

100 
dñëe
 [] 
˚ŒToG©e_
;

101 
dñëe
 [] 
p‹tToG©e_
;

102 
	}
}

	@core/src/decision_tree.h

8 #i‚de‡
_CORE_DECISION_TREE_H_


9 
	#_CORE_DECISION_TREE_H_


	)

11 
	~<ve˘‹
>

13 
«me•a˚
 
	gC‹eNs
 {

15 
	sDecisi⁄TªeNode
 {

16 
	gpublic
:

17 
Decisi⁄TªeNode
(c⁄° &
gid
, c⁄° &
°¨tPoöt
);

18 
	ggid_
;

19 
	g°¨tPoöt_
;

20 
boﬁ
 
	gm¨k_
;

23 ˛as†
	cDecisi⁄Tªe
 {

24 
	gpublic
:

26 c⁄° 
InôSize
 = 5000;

28 
Decisi⁄Tªe
();

29 ~
Decisi⁄Tªe
();

31 
˛ór
();

32 
put
(c⁄° &
gid
, c⁄° &
°¨tPoöt
);

33 
boﬁ
 
gë
(&
gid
, &
°¨tPoöt
);

34 
boﬁ
 
em±y
() const;

35 
boﬁ
 
œ°NodeM¨k
() const;

37 
	g¥iv©e
:

38 
°d
::
ve˘‹
<
Decisi⁄TªeNode
> 
åì_
;

42 
ölöe
 
	gDecisi⁄TªeNode
::
	$Decisi⁄TªeNode
(c⁄° &
gid
,

43 c⁄° &
°¨tPoöt
) {

44 
gid_
 = 
gid
;

45 
°¨tPoöt_
 = 
°¨tPoöt
;

46 
m¨k_
 = 
Ál£
;

47 
	}
}

50 
ölöe
 
	gDecisi⁄Tªe
::
	$Decisi⁄Tªe
() {

51 
åì_
.
	`ª£rve
(
InôSize
);

52 
	}
}

54 
ölöe
 
	gDecisi⁄Tªe
::~
	$Decisi⁄Tªe
(Ë{
	}
}

56 
ölöe
 
Decisi⁄Tªe
::
	$˛ór
() {

57 
åì_
.
	`˛ór
();

58 
	}
}

60 
ölöe
 
	gDecisi⁄Tªe
::
	$put
(c⁄° &
gid
, c⁄° &
°¨tPoöt
) {

61 
åì_
.
	`push_back
(
	`Decisi⁄TªeNode
(
gid
, 
°¨tPoöt
));

62 
	}
}

64 
ölöe
 
boﬁ
 
	gDecisi⁄Tªe
::
	$gë
(&
gid
, &
°¨tPoöt
) {

65 
Decisi⁄TªeNode
 &
node
 = 
åì_
.
	`back
();

66 
gid
 = 
node
.
gid_
;

67 
°¨tPoöt
 = 
node
.
°¨tPoöt_
;

69 i‡(
node
.
m¨k_
) {

70 
åì_
.
	`p›_back
();

71  
åue
;

74 
node
.
m¨k_
 = 
åue
;

75  
Ál£
;

77  
Ál£
;

78 
	}
}

80 
ölöe
 
boﬁ
 
	gDecisi⁄Tªe
::
	$em±y
() const {

81  
åì_
.
	`em±y
();

82 
	}
}

84 
ölöe
 
boﬁ
 
	gDecisi⁄Tªe
::
	$œ°NodeM¨k
() const {

85  
åì_
.
	`em±y
(Ë? 
Ál£
 :Åªe_.
	`back
().
m¨k_
;

86 
	}
}

	@core/src/fault.cpp

9 
	~"Áu….h
"

11 
usög
 
«me•a˚
 
	g°d
;

12 
usög
 
«me•a˚
 
	gI¡fNs
;

13 
usög
 
«me•a˚
 
	gC‹eNs
;

15 
	gFau…Li°Exåa˘
::
	$exåa˘
(
Cúcuô
 *
cú
) {

17 
Fau…
 *
ãmp
;

19 
size_t
 
i
 = 0; i < 
Áu…s_
.
	`size
(); ++i)

20 
dñëe
 
Áu…s_
[
i
];

21 
Áu…s_
.
	`˛ór
();

22 
dñëe
 [] 
g©eToFau…_
;

25 i‡(
ty≥_
 =
SAF
) {

26 
g©eToFau…_
 = 
√w
 [
cú
->
ng©e_
];

27 
i
 = 0; i < 
cú
->
ng©e_
; ++i) {

28 
g©eToFau…_
[
i
] = 
Áu…s_
.
	`size
();

31 i‡(
cú
->
g©es_
[
i
].
nfo_
 > 0 && i < cú->
ng©e_
 - cú->
≈pi_
) {

32 if(
cú
->
g©es_
[
i
].
ty≥_
 !
G©e
::
PPI
) {

33 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, 0));

34 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, 0));

37 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, 0);

38 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

39 
Áu…s_
.
	`push_back
(
ãmp
);

40 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, 0);

41 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

42 
Áu…s_
.
	`push_back
(
ãmp
);

46 
j
 = 0; j < 
cú
->
g©es_
[
i
].
nfi_
; ++j) {

47 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, 
j
 + 1));

48 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, 
j
 + 1));

50 i‡(
cú
->
g©es_
[
i
].
ty≥_
 =
G©e
::
PPI
) {

51 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, -1);

52 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

53 
Áu…s_
.
	`push_back
(
ãmp
);

54 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, -2);

55 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

56 
Áu…s_
.
	`push_back
(
ãmp
);

57 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, -3);

58 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

59 
Áu…s_
.
	`push_back
(
ãmp
);

60 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA0
, -4);

61 
ãmp
->
°©e_
 = 
Fau…
::
UD
;

62 
Áu…s_
.
	`push_back
(
ãmp
);

63 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, -1);

64 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

65 
Áu…s_
.
	`push_back
(
ãmp
);

66 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, -2);

67 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

68 
Áu…s_
.
	`push_back
(
ãmp
);

69 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, -3);

70 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

71 
Áu…s_
.
	`push_back
(
ãmp
);

72 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
SA1
, -4);

73 
ãmp
->
°©e_
 = 
Fau…
::
UD
;

74 
Áu…s_
.
	`push_back
(
ãmp
);

80 
size_t
 
i
 = 0; i < 
cú
->
∆_
->
	`gëT›
()->
	`gëNP‹t
(); ++i) {

81 
P‹t
 *
p
 = 
cú
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
);

82 i‡(!
	`°rcmp
(
p
->
«me_
,"CK")) {

83 
ãmp
 = 
√w
 
	`Fau…
(-1,
Fau…
::
SA0
,0);

84 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

85 
Áu…s_
.
	`push_back
(
ãmp
);

86 
ãmp
 = 
√w
 
	`Fau…
(-1,
Fau…
::
SA1
,0);

87 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

88 
Áu…s_
.
	`push_back
(
ãmp
);

90 
ãmp
 = 
√w
 
	`Fau…
(-2,
Fau…
::
SA0
,0);

91 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

92 
Áu…s_
.
	`push_back
(
ãmp
);

93 
ãmp
 = 
√w
 
	`Fau…
(-2,
Fau…
::
SA1
,0);

94 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

95 
Áu…s_
.
	`push_back
(
ãmp
);

97 
ãmp
 = 
√w
 
	`Fau…
(-3,
Fau…
::
SA0
,0);

98 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

99 
Áu…s_
.
	`push_back
(
ãmp
);

100 
ãmp
 = 
√w
 
	`Fau…
(-3,
Fau…
::
SA1
,0);

101 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

102 
Áu…s_
.
	`push_back
(
ãmp
);

104 
ãmp
 = 
√w
 
	`Fau…
(-4,
Fau…
::
SA0
,0);

105 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

106 
Áu…s_
.
	`push_back
(
ãmp
);

107 
ãmp
 = 
√w
 
	`Fau…
(-4,
Fau…
::
SA1
,0);

108 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

109 
Áu…s_
.
	`push_back
(
ãmp
);

118 
g©eToFau…_
 = 
√w
 [
cú
->
ng©e_
];

119 
i
 = 0; i < 
cú
->
ng©e_
; ++i) {

120 
g©eToFau…_
[
i
] = 
Áu…s_
.
	`size
();

123 i‡(
cú
->
g©es_
[
i
].
nfo_
 > 0 && i < cú->
ng©e_
 - cú->
≈pi_
) {

124 if(
cú
->
g©es_
[
i
].
ty≥_
 !
G©e
::
PPI
) {

125 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, 0));

126 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, 0));

129 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, 0);

130 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

131 
Áu…s_
.
	`push_back
(
ãmp
);

132 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, 0);

133 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

134 
Áu…s_
.
	`push_back
(
ãmp
);

137 
j
 = 0; j < 
cú
->
g©es_
[
i
].
nfi_
; ++j) {

138 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, 
j
 + 1));

139 
Áu…s_
.
	`push_back
(
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, 
j
 + 1));

141 i‡(
cú
->
g©es_
[
i
].
ty≥_
 =
G©e
::
PPI
) {

142 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, -1);

143 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

144 
Áu…s_
.
	`push_back
(
ãmp
);

145 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, -2);

146 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

147 
Áu…s_
.
	`push_back
(
ãmp
);

148 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STR
, -3);

149 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

150 
Áu…s_
.
	`push_back
(
ãmp
);

151 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, -4);

152 
ãmp
->
°©e_
 = 
Fau…
::
UD
;

153 
Áu…s_
.
	`push_back
(
ãmp
);

154 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, -1);

155 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

156 
Áu…s_
.
	`push_back
(
ãmp
);

157 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, -2);

158 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

159 
Áu…s_
.
	`push_back
(
ãmp
);

160 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, -3);

161 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

162 
Áu…s_
.
	`push_back
(
ãmp
);

163 
ãmp
 = 
√w
 
	`Fau…
(
i
, 
Fau…
::
STF
, -4);

164 
ãmp
->
°©e_
 = 
Fau…
::
UD
;

165 
Áu…s_
.
	`push_back
(
ãmp
);

172 
size_t
 
i
 = 0; i < 
cú
->
∆_
->
	`gëT›
()->
	`gëNP‹t
(); ++i) {

173 
P‹t
 *
p
 = 
cú
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
);

174 i‡(!
	`°rcmp
(
p
->
«me_
,"CK")) {

175 
ãmp
 = 
√w
 
	`Fau…
(-1,
Fau…
::
STR
,0);

176 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

177 
Áu…s_
.
	`push_back
(
ãmp
);

178 
ãmp
 = 
√w
 
	`Fau…
(-1,
Fau…
::
STF
,0);

179 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

180 
Áu…s_
.
	`push_back
(
ãmp
);

182 
ãmp
 = 
√w
 
	`Fau…
(-2,
Fau…
::
STR
,0);

183 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

184 
Áu…s_
.
	`push_back
(
ãmp
);

185 
ãmp
 = 
√w
 
	`Fau…
(-2,
Fau…
::
STF
,0);

186 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

187 
Áu…s_
.
	`push_back
(
ãmp
);

189 
ãmp
 = 
√w
 
	`Fau…
(-3,
Fau…
::
STR
,0);

190 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

191 
Áu…s_
.
	`push_back
(
ãmp
);

192 
ãmp
 = 
√w
 
	`Fau…
(-3,
Fau…
::
STF
,0);

193 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

194 
Áu…s_
.
	`push_back
(
ãmp
);

196 
ãmp
 = 
√w
 
	`Fau…
(-4,
Fau…
::
STR
,0);

197 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

198 
Áu…s_
.
	`push_back
(
ãmp
);

199 
ãmp
 = 
√w
 
	`Fau…
(-4,
Fau…
::
STF
,0);

200 
ãmp
->
°©e_
 = 
Fau…
::
DT
;

201 
Áu…s_
.
	`push_back
(
ãmp
);

208 
	}
}

	@core/src/fault.h

8 #i‚de‡
_CORE_FAULT_H_


9 
	#_CORE_FAULT_H_


	)

11 
	~<li°
>

13 
	~"cúcuô.h
"

15 
«me•a˚
 
	gC‹eNs
 {

17 
˛ass
 
	gFau…
;

18 
	g°d
::
	tve˘‹
<
	tFau…
 *> 
	tFau…Vec
;

19 
	g°d
::
	tli°
<
	tFau…
 *> 
	tFau…Li°
;

20 
	g°d
::
	tli°
<
	tFau…
 *>::
	tôî©‹
 
	tFau…Li°Iãr
;

22 ˛as†
	cFau…
 {

23 
	gpublic
:

41 
	eTy≥
 { 
SA0
 = 0, 
	gSA1
, 
	gSTR
, 
	gSTF
, 
	gBR
 };

42 
	eSèã
 { 
	gUD
 = 0, 
	gDT
, 
	gPT
, 
	gAU
, 
	gTI
, 
	gRE
, 
	gAB
 };

44 
Fau…
();

45 
Fau…
(
g©e
, 
Ty≥
 
ty≥
, 
löe
, 
aggr
 = -1);

46 ~
Fau…
();

48 
	gaggr_
;

49 
	gg©e_
;

50 
Ty≥
 
	gty≥_
;

51 
	glöe_
;

53 
	gdë_
;

54 
Sèã
 
	g°©e_
;

57 ˛as†
	cFau…Li°Exåa˘
 {

58 
	gpublic
:

59 
	eTy≥
 { 
SAF
 = 0, 
	gTDF
, 
	gBRF
 };

61 
Fau…Li°Exåa˘
();

62 ~
Fau…Li°Exåa˘
();

64 
exåa˘
(
Cúcuô
 *
cú
);

66 *
	gg©eToFau…_
;

67 
Fau…Vec
 
	gÁu…s_
;

68 
Fau…Li°
 
	gcuºít_
;

69 
Ty≥
 
	gty≥_
;

72 
ölöe
 
	gFau…
::
	$Fau…
() {

73 
aggr_
 = -1;

74 
g©e_
 = -1;

75 
ty≥_
 = 
SA0
;

76 
löe_
 = -1;

77 
dë_
 = 0;

78 
°©e_
 = 
UD
;

79 
	}
}

81 
ölöe
 
	gFau…
::
	$Fau…
(
g©e
, 
Ty≥
 
ty≥
, 
löe
, 
aggr
) {

82 
aggr_
 = 
aggr
;

83 
g©e_
 = 
g©e
;

84 
ty≥_
 = 
ty≥
;

85 
löe_
 = 
löe
;

86 
dë_
 = 0;

87 
°©e_
 = 
UD
;

88 
	}
}

90 
ölöe
 
	gFau…
::~
	$Fau…
(Ë{
	}
}

92 
ölöe
 
Fau…Li°Exåa˘
::
	$Fau…Li°Exåa˘
() {

93 
g©eToFau…_
 = 
NULL
;

94 
ty≥_
 = 
SAF
;

95 
	}
}

97 
ölöe
 
	gFau…Li°Exåa˘
::~
	$Fau…Li°Exåa˘
(Ë{
	}
}

	@core/src/gate.h

8 #i‚de‡
_CORE_GATE_H_


9 
	#_CORE_GATE_H_


	)

11 
	~<c°rög
>

13 
	~"öãrÁ˚/˚Œ.h
"

15 
	~"logic.h
"

17 
«me•a˚
 
	gC‹eNs
 {

19 
˛ass
 
	gG©e
;

21 
	g°d
::
	tve˘‹
<
	tG©e
 *> 
	tG©eVec
;

23 ˛as†
	cG©e
 {

24 
	gpublic
:

25 
G©e
();

26 ~
G©e
();

28 
	eTy≥
 { 
	gNA
 = 0,

29 
	gPI
, 
	gPO
,

30 
	gPPI
, 
	gPPO
, 
	gPPI_IN
, 
	gPPO_IN
,

31 
	gINV
, 
	gBUF
,

32 
	gAND2
, 
	gAND3
, 
	gAND4
,

33 
	gNAND2
, 
	gNAND3
, 
	gNAND4
,

34 
	gOR2
, 
	gOR3
, 
	gOR4
,

35 
	gNOR2
, 
	gNOR3
, 
	gNOR4
,

36 
	gXOR2
, 
	gXOR3
,

37 
	gXNOR2
, 
	gXNOR3
,

38 
	gMUX
,

39 
	gTIE0
, 
	gTIE1
, 
	gTIEX
, 
	gTIEZ


43 
	gid_
;

44 
	gcid_
;

45 
	gpmtid_
;

46 
	glvl_
;

47 
	g‰ame_
;

48 
Ty≥
 
	gty≥_
;

51 
	gnfi_
;

52 *
	gfis_
;

53 
	gnfo_
;

54 *
	gfos_
;

57 
VÆue
 
	gv_
;

58 
P¨aVÆue
 
	ggl_
;

59 
P¨aVÆue
 
	ggh_
;

60 
P¨aVÆue
 
	gÊ_
;

61 
P¨aVÆue
 
	gfh_
;

65 
boﬁ
 
	ghasC⁄s_
;

66 
P¨aVÆue
 
	gc⁄s_
;

69 
	gcc0_
;

70 
	gcc1_
;

71 
	gco_
;

73 
	gdïthFromPo_
;

74 
	gfiMöLvl_
;

76 
VÆue
 
isU«ry
() const;

77 
VÆue
 
isInvî£
() const;

78 
VÆue
 
gëI≈utN⁄CålVÆue
() const;

79 
VÆue
 
gëI≈utCålVÆue
() const;

80 
VÆue
 
gëOuçutCålVÆue
() const;

84 
ölöe
 
	gG©e
::
	$G©e
() {

85 
id_
 = -1;

86 
cid_
 = -1;

87 
pmtid_
 = 0;

88 
lvl_
 = -1;

89 
‰ame_
 = 0;

90 
ty≥_
 = 
NA
;

91 
nfi_
 = 0;

92 
fis_
 = 
NULL
;

93 
nfo_
 = 0;

94 
fos_
 = 
NULL
;

95 
v_
 = 
X
;

96 
gl_
 = 
PARA_L
;

97 
gh_
 = 
PARA_L
;

98 
Ê_
 = 
PARA_L
;

99 
fh_
 = 
PARA_L
;

100 
hasC⁄s_
 = 
Ál£
;

101 
c⁄s_
 = 
PARA_L
;

103 
cc0_
 = 0;

104 
cc1_
 = 0;

105 
co_
 = 0;

107 
dïthFromPo_
 = -1;

108 
fiMöLvl_
 = -1;

109 
	}
}

111 
ölöe
 
	gG©e
::~
	$G©e
(Ë{
	}
}

113 
ölöe
 
VÆue
 
G©e
::
	$isU«ry
() const {

114  
nfi_
 =1 ? 
H
 : 
L
;

115 
	}
}

117 
ölöe
 
VÆue
 
	gG©e
::
	$isInvî£
() const {

118 
ty≥_
) {

119 
INV
:

120 
NAND2
:

121 
NAND3
:

122 
NAND4
:

123 
NOR2
:

124 
NOR3
:

125 
NOR4
:

126 
XNOR2
:

127 
XNOR3
:

128  
H
;

130  
L
;

132 
	}
}

134 
ölöe
 
VÆue
 
	gG©e
::
	$gëI≈utN⁄CålVÆue
() const {

135  
	`isInvî£
(Ë=
	`gëOuçutCålVÆue
(Ë? 
L
 : 
H
;

136 
	}
}

138 
ölöe
 
VÆue
 
	gG©e
::
	$gëI≈utCålVÆue
() const {

139  
	`gëI≈utN⁄CålVÆue
(Ë=
H
 ? 
L
 : H;

140 
	}
}

142 
ölöe
 
VÆue
 
	gG©e
::
	$gëOuçutCålVÆue
() const {

143 
ty≥_
) {

144 
OR2
:

145 
OR3
:

146 
OR4
:

147 
NAND2
:

148 
NAND3
:

149 
NAND4
:

150  
L
;

151 
XOR2
:

152 
XOR3
:

153 
XNOR2
:

154 
XNOR3
:

155  
X
;

157  
H
;

159 
	}
}

	@core/src/implicator.cpp

19 
	~"im∂iˇt‹.h
"

21 
usög
 
«me•a˚
 
	g°d
;

23 
usög
 
«me•a˚
 
	gC‹eNs
;

25 
	gIm∂iˇt‹
::
	$PushEvít
(
gid
) {

26 
evíts_
[
cú_
->
g©es_
[
gid
]->
lvl_
].
	`push
(gid);

27 
	}
}

29 
	gIm∂iˇt‹
::
	$PushF™outEvít
(
gid
) {

30 
G©e
 *
g
 = 
cú_
->
g©es_
[
gid
];

31 
n
=0;Ç<
g
->
nfo_
;Ç++)

32 
	`PushEvít
(
g
->
fos_
[
n
]);

33 
	}
}

35 
boﬁ
 
	gIm∂iˇt‹
::
	$IsFau…AtPo
() const {

36 
n
=0;Ç<(
cú_
->
≈o_
+cú_->
≈pi_
);Ç++) {

37 
VÆue
 
v
 = 
	`GëVÆ
(
cú_
->
tg©e_
 - 
n
 - 1);

38 i‡(
VÆue
==
D
 || VÆuê==
B
)

39  
åue
;

41  
Ál£
;

42 
	}
}

44 
	$GëDFr⁄tõr
(
G©eVec
& 
df
) const {

45 
n
=0;Ç<
tg©e_
;Ç++) {

46 i‡(
	`GëVÆ
(
n
)!=
X
)

49 
G©e
 *
g
 = 
cú_
->
g©es_
[
n
];

50 
m
=0; m<
g
->
nfi_
; m++) {

51 
VÆue
 
v
 = 
	`GëVÆ
(
g
->
fis
[
m
])

52 if(
v
==
D
||v==
B
) {

53 
df
.
	`push_back
(
g
);

58 
	}
}

	@core/src/implicator.h

19 #i‚de‡
_CORE_IMPL_H_


20 
	#_CORE_IMPL_H_


	)

22 
	~<queue
>

24 
	~"∑âîn.h
"

26 
«me•a˚
 
	gC‹eNs
 {

28 
	g°d
::
	tve˘‹
<
	tG©e
 *> 
	tG©eVec
;

30 ˛as†
	cIm∂iˇt‹
 {

31 
	gpublic
:

32 
Im∂iˇt‹
(
Cúcuô
 *
cú
, 
Fau…
 *
·¨gë
);

33 ~
Im∂iˇt‹
();

35 
Inô
();

37 
boﬁ
 
EvítDrivíSim
();

38 
PushF™outEvít
(
gid
);

39 
PushEvít
(
gid
);

43 
VÆue
 
GëVÆ
(
gid
) const;

45 
GëDFr⁄tõr
(
G©eVec
& 
df
) const;

47 
boﬁ
 
IsFau…AtPo
() const;

49 
GëPiP©ã∫
(
P©ã∫
& 
p
) const;

50 
GëPoP©ã∫
(
P©ã∫
& 
p
) const;

51 
SëP©ã∫ToPi
(
P©ã∫
& 
p
);

53 
	g¥iv©e
:

54 
VÆue
 
GoodEvÆ
(
G©e
 *
g
) const;

55 
VÆue
 
Fau…EvÆ
(
G©e
* 
g
) const;

57 
Cúcuô
 *
	gcú_
;

58 
Fau…
 *
	gèrgë_Áu…_
;

60 
VÆue
 *
	gvÆues_
;

61 
	g°d
::
queue
<> *
evíts_
;

65 
ölöe
 
	gIm∂iˇt‹
::
	$Im∂iˇt‹
(
Cúcuô
 *
cú
, 
Fau…
 *
·¨gë
) {

66 
cú_
 = 
cú
;

67 
èrgë_Áu…_
 = 
·¨gë
;

69 
vÆues_
 = 
√w
 
VÆue
 [
cú_
->
tg©e_
];

70 
evíts_
 = 
√w
 
°d
::
queue
<> [
cú_
->
évl_
];

71 
	}
}

73 
ölöe
 
	gIm∂iˇt‹
::~
	$Im∂iˇt‹
() {

74 
dñëe
 [] 
vÆues_
;

75 
dñëe
 [] 
evíts_
;

76 
	}
}

78 
ölöe
 
	gIm∂iˇt‹
::
	$Inô
() {

79 
i
=0; i<
cú_
->
tg©e_
; i++)

80 
vÆues_
[
i
] = 
X
;

81 
	}
}

83 
ölöe
 
VÆue
 
	gIm∂iˇt‹
::
	$GëVÆ
(
gid
) const {

84  
vÆues_
[
gid
];

85 
	}
}

	@core/src/logic.cpp

8 
	~"logic.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gC‹eNs
;

13 
	gC‹eNs
::
	$¥ötVÆue
(c⁄° 
VÆue
 &
v
, 
o°ªam
 &
out
) {

14 i‡(
v
 =
L
)

15 
out
 << "0";

16 i‡(
v
 =
H
)

17 
out
 << "1";

18 i‡(
v
 =
X
)

19 
out
 << "X";

20 i‡(
v
 =
D
)

21 
out
 << "D";

22 i‡(
v
 =
B
)

23 
out
 << "B";

24 i‡(
v
 =
Z
)

25 
out
 << "Z";

27 
out
 << "I";

28 
out
 << 
Êush
;

29 
	}
}

31 
	gC‹eNs
::
	$¥ötVÆue
(c⁄° 
P¨aVÆue
 &
v
, 
o°ªam
 &
out
) {

32 
size_t
 
i
 = 0; i < 
WORD_SIZE
; ++i) {

33 
size_t
 
j
 = 
WORD_SIZE
 - 
i
 - 1;

34 
P¨aVÆue
 
mask
 = 0x01;

35 
mask
 <<
j
;

36 i‡((
v
 & 
mask
Ë!
PARA_L
)

37 
out
 << "1";

39 
out
 << "0";

40 
out
 << 
Êush
;

42 
	}
}

44 
	gC‹eNs
::
	$¥ötVÆue
(c⁄° 
P¨aVÆue
 &
l
, c⁄° P¨aVÆuê&
h
,

45 
o°ªam
 &
out
) {

46 
size_t
 
i
 = 0; i < 
WORD_SIZE
; ++i) {

47 
size_t
 
j
 = 
WORD_SIZE
 - 
i
 - 1;

48 
P¨aVÆue
 
mask
 = 0x01;

49 
mask
 <<
j
;

50 i‡((
l
 & 
mask
Ë!
PARA_L
)

51 
out
 << "0";

52 i‡((
h
 & 
mask
Ë!
PARA_L
)

53 
out
 << "1";

55 
out
 << "X";

56 
out
 << 
Êush
;

58 
	}
}

	@core/src/logic.h

8 #i‚de‡
_CORE_LOGIC_H_


9 
	#_CORE_LOGIC_H_


	)

11 
	~<io°ªam
>

12 
	~<ve˘‹
>

14 
«me•a˚
 
	gC‹eNs
 {

19 
	tVÆue
;

20 
	tP¨aVÆue
;

23 c⁄° 
VÆue
 
	gL
 = 0;

24 c⁄° 
VÆue
 
	gH
 = 1;

25 c⁄° 
VÆue
 
	gX
 = 2;

26 c⁄° 
VÆue
 
	gD
 = 3;

27 c⁄° 
VÆue
 
	gB
 = 4;

28 c⁄° 
VÆue
 
	gZ
 = 5;

29 c⁄° 
VÆue
 
	gI
 = 255;

32 c⁄° 
P¨aVÆue
 
	gPARA_L
 = 0;

33 c⁄° 
P¨aVÆue
 
	gPARA_H
 = ~
PARA_L
;

36 c⁄° 
size_t
 
	gBYTE_SIZE
 = 8;

37 c⁄° 
size_t
 
	gWORD_SIZE
 = (
P¨aVÆue
Ë* 
BYTE_SIZE
;

39 c⁄° 
VÆue
 
	gNŸM≠
[5] = { 
H
, 
L
, 
X
, 
B
, 
D
 };

41 c⁄° 
VÆue
 
	gAndM≠
[5][5] = {

42 { 
L
, L, L, L, L },

43 { 
L
, 
H
, 
X
, 
D
, 
B
 },

44 { 
L
, 
X
, X, X, X },

45 { 
L
, 
D
, 
X
, D, L },

46 { 
L
, 
B
, 
X
, L, B }

49 c⁄° 
VÆue
 
	gOrM≠
[5][5] = {

50 { 
L
, 
H
, 
X
, 
D
, 
B
 },

51 { 
H
, H, H, H, H },

52 { 
X
, 
H
, X, X, X },

53 { 
D
, 
H
, 
X
, D, H },

54 { 
B
, 
H
, 
X
, H, B }

65 c⁄° 
VÆue
 
	gN™dM≠
[5][5] = {

66 { 
H
, H, H, H, H },

67 { 
H
, 
L
, 
X
, 
B
, 
D
 },

68 { 
H
, 
X
, X, X, X },

69 { 
H
, 
B
, 
X
, B, H },

70 { 
H
, 
D
, 
X
, H, D }

73 c⁄° 
VÆue
 
	gN‹M≠
[5][5] = {

74 { 
H
, 
L
, 
X
, 
B
, 
D
 },

75 { 
L
, L, L, L, L },

76 { 
X
, 
L
, X, X, X },

77 { 
B
, 
L
, 
X
, B, L },

78 { 
D
, 
L
, 
X
, L, D }

90 
ölöe
 
£tBôVÆue
(
P¨aVÆue
 &
pv
, c⁄° 
size_t
 &
i
, c⁄° 
VÆue
 &
v
) {

91 
	gpv
 = 
v
 =
L
 ? 
pv
 & ~((
P¨aVÆue
)0x01 << 
i
) :Öv | ((ParaValue)0x01 << i);

94 
ölöe
 
VÆue
 
gëBôVÆue
(c⁄° 
P¨aVÆue
 &
pv
, c⁄° 
size_t
 &
i
) {

95  (
	gpv
 & ((
	gP¨aVÆue
)0x01 << 
	gi
)Ë=
PARA_L
 ? 
L
 : 
H
;

98 
ölöe
 
VÆue
 
EvÆNŸ
(VÆuê
v
){

99  
	gNŸM≠
[
v
];

102 
ölöe
 
VÆue
 
EvÆAndN
(
°d
::
ve˘‹
<VÆue>& 
vÆs
) {

103 if(
vÆs
.
size
()<2Ë 
X
;

105 
VÆue
 
	gªt
 = 
AndM≠
[
vÆs
[0]][vals[1]];

106 
size_t
 
	gn
=2;Ç<
	gvÆs
.
size
();Ç++)

107 
	gªt
 = 
AndM≠
[
ªt
][
vÆs
[
n
]];

109  
	gªt
;

112 
ölöe
 
VÆue
 
EvÆOrN
(
°d
::
ve˘‹
<VÆue>& 
vÆs
) {

113 if(
vÆs
.
size
()<2Ë 
X
;

115 
VÆue
 
	gªt
 = 
OrM≠
[
vÆs
[0]][vals[1]];

116 
size_t
 
	gn
=2;Ç<
	gvÆs
.
size
();Ç++)

117 
	gªt
 = 
OrM≠
[
ªt
][
vÆs
[
n
]];

119  
	gªt
;

122 
ölöe
 
VÆue
 
EvÆN™dN
(
°d
::
ve˘‹
<VÆue>& 
vÆs
) {

123 if(
vÆs
.
size
()<2Ë 
X
;

125 
VÆue
 
	gªt
 = 
N™dM≠
[
vÆs
[0]][vals[1]];

126 
size_t
 
	gn
=2;Ç<
	gvÆs
.
size
();Ç++)

127 
	gªt
 = 
N™dM≠
[
ªt
][
vÆs
[
n
]];

129  
	gªt
;

132 
ölöe
 
VÆue
 
EvÆN‹N
(
°d
::
ve˘‹
<VÆue>& 
vÆs
) {

133 if(
vÆs
.
size
()<2Ë 
X
;

135 
VÆue
 
	gªt
 = 
N‹M≠
[
vÆs
[0]][vals[1]];

136 
size_t
 
	gn
=2;Ç<
	gvÆs
.
size
();Ç++)

137 
	gªt
 = 
N‹M≠
[
ªt
][
vÆs
[
n
]];

139  
	gªt
;

142 
¥ötVÆue
(c⁄° 
VÆue
 &
v
, 
°d
::
o°ªam
 &
out
 = std::
cout
);

143 
¥ötVÆue
(c⁄° 
P¨aVÆue
 &
v
, 
°d
::
o°ªam
 &
out
 = std::
cout
);

144 
¥ötVÆue
(c⁄° 
P¨aVÆue
 &
l
, c⁄° P¨aVÆuê&
h
,

145 
°d
::
o°ªam
 &
out
 = std::
cout
);

	@core/src/pattern.h

8 #i‚de‡
_CORE_PATTERN_H_


9 
	#_CORE_PATTERN_H_


	)

11 
	~<ve˘‹
>

12 
	~"cúcuô.h
"

13 
	~"Áu….h
"

15 
«me•a˚
 
	gC‹eNs
 {

17 
˛ass
 
	gP©ã∫
;

19 
	g°d
::
	tve˘‹
<
	tP©ã∫
 *> 
	tP©ã∫Vec
;

22 
˛ass
 
	gVîãx
;

23 
	g°d
::
	tve˘‹
<
	tVîãx
 *> 
	tVîãxVec
;

26 ˛as†
	cP©ã∫
 {

27 
	gpublic
:

28 
P©ã∫
();

29 ~
P©ã∫
();

30 
VÆue
 *
	gpi1_
;

31 
VÆue
 *
	gpi2_
;

32 
VÆue
 *
	gµi_
;

33 
VÆue
 *
	gsi_
;

34 
VÆue
 *
	gpo1_
;

35 
VÆue
 *
	gpo2_
;

36 
VÆue
 *
	gµo_
;

44 ˛as†
	cP©ã∫Pro˚ss‹
 {

45 
	gpublic
:

50 
	eTy≥
 { 
BASIC_SCAN
 = 0, 
	gLAUNCH_CAPTURE
, 
	gLAUNCH_SHIFT
 };

52 
P©ã∫Pro˚ss‹
();

53 ~
P©ã∫Pro˚ss‹
();

59 
	eSèã
 { 
	gOFF
 = 0, 
	gON
 };

60 
Sèã
 
	g°©icCom¥essi⁄_
;

61 
Sèã
 
	gdy«micCom¥essi⁄_
;

62 
Sèã
 
	gXFûl_
;

64 
Ty≥
 
	gty≥_
;

65 
	g≈i_
;

66 
	g≈pi_
;

67 
	gnsi_
;

68 
	g≈o_
;

69 
P©ã∫Vec
 
	g∑ts_
;

70 *
	gpiOrdî_
;

71 *
	gµiOrdî_
;

72 *
	gpoOrdî_
;

74 
öô
(
Cúcuô
 *
cú
);

75 
SèticCom¥essi⁄
();

79 
ölöe
 
	gP©ã∫
::
	$P©ã∫
() {

80 
pi1_
 = 
NULL
;

81 
pi2_
 = 
NULL
;

82 
µi_
 = 
NULL
;

83 
si_
 = 
NULL
;

84 
po1_
 = 
NULL
;

85 
po2_
 = 
NULL
;

86 
µo_
 = 
NULL
;

87 
	}
}

89 
ölöe
 
	gP©ã∫
::~
	$P©ã∫
() {

90 
dñëe
 [] 
pi1_
;

91 
dñëe
 [] 
pi2_
;

92 
dñëe
 [] 
µi_
;

93 
dñëe
 [] 
si_
;

94 
dñëe
 [] 
po1_
;

95 
dñëe
 [] 
po2_
;

96 
dñëe
 [] 
µo_
;

97 
	}
}

99 
ölöe
 
	gP©ã∫Pro˚ss‹
::
	$P©ã∫Pro˚ss‹
() {

101 
°©icCom¥essi⁄_
 = 
OFF
;

102 
dy«micCom¥essi⁄_
 = 
OFF
;

103 
XFûl_
 = 
OFF
;

105 
ty≥_
 = 
BASIC_SCAN
;

106 
≈i_
 = 0;

107 
≈pi_
 = 0;

108 
nsi_
 = 0;

109 
≈o_
 = 0;

110 
piOrdî_
 = 
NULL
;

111 
µiOrdî_
 = 
NULL
;

112 
poOrdî_
 = 
NULL
;

113 
	}
}

115 
ölöe
 
	gP©ã∫Pro˚ss‹
::~
	$P©ã∫Pro˚ss‹
() {

116 i‡(
∑ts_
.
	`size
() > 0)

117 
dñëe
 [] 
∑ts_
[0];

118 
∑ts_
.
	`˛ór
();

119 
dñëe
 [] 
piOrdî_
;

120 
dñëe
 [] 
µiOrdî_
;

121 
dñëe
 [] 
poOrdî_
;

122 
	}
}

124 
ölöe
 
	gP©ã∫Pro˚ss‹
::
	$öô
(
Cúcuô
 *
cú
) {

125 
dñëe
 [] 
piOrdî_
;

126 
dñëe
 [] 
µiOrdî_
;

127 
dñëe
 [] 
poOrdî_
;

128 
piOrdî_
 = 
NULL
;

129 
µiOrdî_
 = 
NULL
;

130 
poOrdî_
 = 
NULL
;

132 
≈i_
 = 
cú
->npi_;

133 
≈o_
 = 
cú
->npo_;

134 
≈pi_
 = 
cú
->nppi_;

136 
piOrdî_
 = 
√w
 [
≈i_
];

137 
i
 = 0; i < 
≈i_
; ++i)

138 
piOrdî_
[
i
] = i;

140 
poOrdî_
 = 
√w
 [
≈o_
];

141 
i
 = 0; i < 
≈o_
; ++i)

142 
poOrdî_
[
i
] = 
cú
->
ng©e_
 - cú->
≈o_
 - cú->
≈pi_
 + i;

144 
µiOrdî_
 = 
√w
 [
≈pi_
];

145 
i
 = 0; i < 
≈pi_
; ++i)

146 
µiOrdî_
[
i
] = 
cú
->
≈i_
 + i;

147 
	}
}

169 
ölöe
 
	gP©ã∫Pro˚ss‹
::
	$SèticCom¥essi⁄
()

171 
boﬁ
 
mîgeRec‹d
[()
∑ts_
.
	`size
()];

172 
i
=0; i<()
∑ts_
.
	`size
(); ++i){

173 
mîgeRec‹d
[
i
] = 
Ál£
;

177 
i
=0; i<()
∑ts_
.
	`size
()-1; ++i){

178 i‡(
mîgeRec‹d
[
i
] =
åue
) ;

179 
j
=
i
+1; j<()
∑ts_
.
	`size
(); ++j){

180 i‡(
mîgeRec‹d
[
j
] =
åue
) ;

182 
boﬁ
 
com∑tibÀ
 = 
åue
;

183 
k
=0; k<
≈i_
; ++k){

184 if–((
∑ts_
[
i
]->
pi1_
[
k
]==
L
)&&’©s_[
j
]->pi1_[k]==
H
)) || ((pats_[i]->pi1_[k]==H)&&(pats_[j]->pi1_[k]==L)) ){

185 
com∑tibÀ
 = 
Ál£
;

189 i‡((
∑ts_
[
i
]->
pi2_
!
NULL
)&&(
com∑tibÀ
 =
åue
)){

190 
k
=0; k<
≈i_
; ++k){

191 if–((
∑ts_
[
i
]->
pi2_
[
k
]==
L
)&&’©s_[
j
]->pi2_[k]==
H
)) || ((pats_[i]->pi2_[k]==H)&&(pats_[j]->pi2_[k]==L)) ){

192 
com∑tibÀ
 = 
Ál£
;

197 i‡((
∑ts_
[
i
]->
µi_
!
NULL
)&&(
com∑tibÀ
 =
åue
)){

198 
k
=0; k<
≈pi_
; ++k){

199 if–((
∑ts_
[
i
]->
µi_
[
k
]==
L
)&&’©s_[
j
]->µi_[k]==
H
)) || ((pats_[i]->ppi_[k]==H)&&(pats_[j]->ppi_[k]==L)) ){

200 
com∑tibÀ
 = 
Ál£
;

205 i‡((
∑ts_
[
i
]->
si_
!
NULL
)&&(
com∑tibÀ
 =
åue
)){

206 
k
=0; k<
nsi_
; ++k){

207 if–((
∑ts_
[
i
]->
si_
[
k
]==
L
)&&’©s_[
j
]->si_[k]==
H
)) || ((pats_[i]->si_[k]==H)&&(pats_[j]->si_[k]==L)) ){

208 
com∑tibÀ
 = 
Ál£
;

214 i‡(
com∑tibÀ
 =
åue
){

215 
k
=0; k<
≈i_
; ++k){

216 
∑ts_
[
i
]->
pi1_
[
k
] = (∑ts_[i]->pi1_[k]<∑ts_[
j
]->pi1_[k]) ?Öats_[i]->pi1_[k]:Öats_[j]->pi1_[k];

218 i‡(
∑ts_
[
i
]->
pi2_
!
NULL
){

219 
k
=0; k<
≈i_
; ++k){

220 
∑ts_
[
i
]->
pi2_
[
k
] = (∑ts_[i]->pi2_[k]<∑ts_[
j
]->pi2_[k]) ?Öats_[i]->pi2_[k]:Öats_[j]->pi2_[k];

223 i‡(
∑ts_
[
i
]->
µi_
!
NULL
){

224 
k
=0; k<
≈pi_
; ++k){

225 
∑ts_
[
i
]->
µi_
[
k
] = (∑ts_[i]->µi_[k]<∑ts_[
j
]->ppi_[k]) ?Öats_[i]->ppi_[k]:Öats_[j]->ppi_[k];

228 i‡(
∑ts_
[
i
]->
si_
!
NULL
){

229 
k
=0; k<
nsi_
; ++k){

230 
∑ts_
[
i
]->
si_
[
k
] = (∑ts_[i]->si_[k]<∑ts_[
j
]->si_[k]) ?Öats_[i]->si_[k]:Öats_[j]->si_[k];

234 
k
=0; k<
≈o_
; ++k){

235 
∑ts_
[
i
]->
po1_
[
k
] = (∑ts_[i]->po1_[k]<∑ts_[
j
]->po1_[k]) ?Öats_[i]->po1_[k]:Öats_[j]->po1_[k];

237 i‡(
∑ts_
[
i
]->
po2_
!
NULL
){

238 
k
=0; k<
≈o_
; ++k){

239 
∑ts_
[
i
]->
po2_
[
k
] = (∑ts_[i]->po2_[k]<∑ts_[
j
]->po2_[k]) ?Öats_[i]->po2_[k]:Öats_[j]->po2_[k];

242 i‡(
∑ts_
[
i
]->
µo_
!
NULL
){

243 
k
=0; k<
≈pi_
; ++k){

244 
∑ts_
[
i
]->
µo_
[
k
] = (∑ts_[i]->µo_[k]<∑ts_[
j
]->ppo_[k]) ?Öats_[i]->ppo_[k]:Öats_[j]->ppo_[k];

248 
mîgeRec‹d
[
j
] = 
åue
;

254 
P©ã∫Vec
 
compP©ã∫
;

255 
i
=0; i<()
∑ts_
.
	`size
(); ++i){

256 i‡(
mîgeRec‹d
[
i
]==
Ál£
){

257 
compP©ã∫
.
	`push_back
(
∑ts_
[
i
]);

260 
∑ts_
 = 
compP©ã∫
;

262 
	}
}

266 ˛as†
	cVîãx
 {

267 
	gpublic
:

268 
Vîãx
();

269 
Vîãx
(
VÆue
 *
d©a
, 
Fau…
 *
Áu…
);

270 ~
Vîãx
();

271 
VÆue
 *
	gd©a_
;

272 
Fau…Li°
 
	gÁu…_
;

276 
ölöe
 
	gVîãx
::
	$Vîãx
() {

277 
d©a_
 = 
NULL
;

278 
	}
}

280 
ölöe
 
	gVîãx
::
	$Vîãx
(
VÆue
 *
d©a
, 
Fau…
 *
Áu…
) {

281 
d©a_
 = 
d©a
;

282 
Áu…_
.
	`push_back
(
Áu…
);

283 
	}
}

285 
ölöe
 
	gVîãx
::~
	$Vîãx
() {

286 
dñëe
 [] 
d©a_
;

287 
Áu…_
.
	`˛ór
();

289 
	}
}

	@core/src/pattern_rw.cpp

8 
	~"∑âîn_rw.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gI¡fNs
;

12 
usög
 
«me•a˚
 
	gC‹eNs
;

18 
	gP©ã∫Ródî
::
	$£tPiOrdî
(c⁄° 
P©Names
 * c⁄° 
pis
) {

19 i‡(!
suc˚ss_
)

21 i‡(!
cú_
 || !cú_->
∆_
) {

22 
suc˚ss_
 = 
Ál£
;

25 
pcﬁl_
->
≈i_
 = 0;

26 
P©Names
 *
pi
 = 
pis
->
hód
;

27 
pi
) {

28 
pcﬁl_
->
≈i_
++;

29 
pi
 =Öi->
√xt
;

31 
dñëe
 [] 
pcﬁl_
->
piOrdî_
;

32 
pcﬁl_
->
piOrdî_
 = 
√w
 [pcﬁl_->
≈i_
];

33 
pi
 = 
pis
->
hód
;

34 
i
 = 0;

35 
pi
) {

36 
P‹t
 *
p
 = 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
pi
->
«me
);

37 i‡(!
p
) {

38 
	`Ârötf
(
°dîr
, "**ERROR PatternReader::setPiOrder():Öort ");

39 
	`Ârötf
(
°dîr
, "`%s'ÇŸ found\n", 
pi
->
«me
);

40 
suc˚ss_
 = 
Ál£
;

41 
dñëe
 [] 
pcﬁl_
->
piOrdî_
;

42 
pcﬁl_
->
piOrdî_
 = 
NULL
;

45 
pcﬁl_
->
piOrdî_
[
i
] = 
cú_
->
p‹tToG©e_
[
p
->
id_
];

46 
i
++;

47 
pi
 =Öi->
√xt
;

49 
	}
}

51 
	gP©ã∫Ródî
::
	$£tPpiOrdî
(c⁄° 
P©Names
 * c⁄° 
µis
) {

52 i‡(!
suc˚ss_
)

54 i‡(!
cú_
 || !cú_->
∆_
) {

55 
suc˚ss_
 = 
Ál£
;

58 
pcﬁl_
->
≈pi_
 = 0;

59 
P©Names
 *
µi
 = 
µis
->
hód
;

60 
µi
) {

61 
pcﬁl_
->
≈pi_
++;

62 
µi
 =Öpi->
√xt
;

64 
dñëe
 [] 
pcﬁl_
->
µiOrdî_
;

65 
pcﬁl_
->
µiOrdî_
 = 
√w
 [pcﬁl_->
≈pi_
];

66 
µi
 = 
µis
->
hód
;

67 
i
 = 0;

68 
µi
) {

69 
Cñl
 *
c
 = 
cú_
->
∆_
->
	`gëT›
()->
	`gëCñl
(
µi
->
«me
);

70 i‡(!
c
) {

71 
	`Ârötf
(
°dîr
, "**ERROR PatternReader::setPpiOrder(): gate ");

72 
	`Ârötf
(
°dîr
, "`%s'ÇŸ found\n", 
µi
->
«me
);

73 
suc˚ss_
 = 
Ál£
;

74 
dñëe
 [] 
pcﬁl_
->
µiOrdî_
;

75 
pcﬁl_
->
µiOrdî_
 = 
NULL
;

78 
pcﬁl_
->
µiOrdî_
[
i
] = 
cú_
->
˚ŒToG©e_
[
c
->
id_
];

79 
i
++;

80 
µi
 =Öpi->
√xt
;

82 
	}
}

84 
	gP©ã∫Ródî
::
	$£tPoOrdî
(c⁄° 
P©Names
 * c⁄° 
pos
) {

85 i‡(!
suc˚ss_
)

87 i‡(!
cú_
 || !cú_->
∆_
) {

88 
suc˚ss_
 = 
Ál£
;

91 
pcﬁl_
->
≈o_
 = 0;

92 
P©Names
 *
po
 = 
pos
->
hód
;

93 
po
) {

94 
pcﬁl_
->
≈o_
++;

95 
po
 =Öo->
√xt
;

97 
dñëe
 [] 
pcﬁl_
->
poOrdî_
;

98 
pcﬁl_
->
poOrdî_
 = 
√w
 [pcﬁl_->
≈o_
];

99 
po
 = 
pos
->
hód
;

100 
i
 = 0;

101 
po
) {

102 
P‹t
 *
p
 = 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
po
->
«me
);

103 i‡(!
p
) {

104 
	`Ârötf
(
°dîr
, "**ERROR PatternReader::setPoOrder():Öort ");

105 
	`Ârötf
(
°dîr
, "`%s'ÇŸ found\n", 
po
->
«me
);

106 
suc˚ss_
 = 
Ál£
;

107 
dñëe
 [] 
pcﬁl_
->
poOrdî_
;

108 
pcﬁl_
->
poOrdî_
 = 
NULL
;

111 
pcﬁl_
->
poOrdî_
[
i
] = 
cú_
->
p‹tToG©e_
[
p
->
id_
];

112 
i
++;

113 
po
 =Öo->
√xt
;

115 
	}
}

117 
	gP©ã∫Ródî
::
	$£tP©ã∫Ty≥
(c⁄° 
P©Ty≥
 &
ty≥
) {

118 i‡(!
suc˚ss_
)

120 
ty≥
) {

121 
I¡fNs
::
BASIC_SCAN
:

122 
pcﬁl_
->
ty≥_
 = 
P©ã∫Pro˚ss‹
::
BASIC_SCAN
;

124 
I¡fNs
::
LAUNCH_CAPTURE
:

125 
pcﬁl_
->
ty≥_
 = 
P©ã∫Pro˚ss‹
::
LAUNCH_CAPTURE
;

127 
I¡fNs
::
LAUNCH_SHIFT
:

128 
pcﬁl_
->
ty≥_
 = 
P©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
;

129 
pcﬁl_
->
nsi_
 = 1;

132 
	}
}

134 
	gP©ã∫Ródî
::
	$£tP©ã∫Num
(c⁄° &
num
) {

135 i‡(!
suc˚ss_
)

137 
pcﬁl_
->
∑ts_
.
	`ªsize
((
size_t
)
num
);

138 
P©ã∫
 *
∑ts
 = 
√w
 P©ã∫[
pcﬁl_
->
∑ts_
.
	`size
()];

139 
size_t
 
i
 = 0; i < 
pcﬁl_
->
∑ts_
.
	`size
(); ++i)

140 
pcﬁl_
->
∑ts_
[
i
] = &
∑ts
[i];

141 
curP©_
 = 0;

142 
	}
}

145 
	gP©ã∫Ródî
::
	$addP©ã∫
(c⁄° * c⁄° 
pi1
,

146 c⁄° * c⁄° 
pi2
,

147 c⁄° * c⁄° 
µi
,

148 c⁄° * c⁄° 
si
,

149 c⁄° * c⁄° 
po1
,

150 c⁄° * c⁄° 
po2
,

151 c⁄° * c⁄° 
µo
) {

152 i‡(!
suc˚ss_
)

154 i‡(
pi1
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

155 
pcﬁl_
->
∑ts_
[
curP©_
]->
pi1_
 = 
√w
 
VÆue
[pcﬁl_->
≈i_
];

156 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
pi1_
, 
pi1
,Öcﬁl_->
≈i_
);

158 i‡(
pi2
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

159 
pcﬁl_
->
∑ts_
[
curP©_
]->
pi2_
 = 
√w
 
VÆue
[pcﬁl_->
≈i_
];

160 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
pi2_
, 
pi2
,Öcﬁl_->
≈i_
);

162 i‡(
µi
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

163 
pcﬁl_
->
∑ts_
[
curP©_
]->
µi_
 = 
√w
 
VÆue
[pcﬁl_->
≈pi_
];

164 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
µi_
, 
µi
,Öcﬁl_->
≈pi_
);

166 i‡(
si
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

167 
pcﬁl_
->
∑ts_
[
curP©_
]->
si_
 = 
√w
 
VÆue
[pcﬁl_->
nsi_
];

168 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
si_
, 
si
,Öcﬁl_->
nsi_
);

170 i‡(
po1
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

171 
pcﬁl_
->
∑ts_
[
curP©_
]->
po1_
 = 
√w
 
VÆue
[pcﬁl_->
≈o_
];

172 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
po1_
, 
po1
,Öcﬁl_->
≈o_
);

174 i‡(
po2
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

175 
pcﬁl_
->
∑ts_
[
curP©_
]->
po2_
 = 
√w
 
VÆue
[pcﬁl_->
≈o_
];

176 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
po2_
, 
po2
,Öcﬁl_->
≈o_
);

178 i‡(
µo
 && 
curP©_
 < ()
pcﬁl_
->
∑ts_
.
	`size
()) {

179 
pcﬁl_
->
∑ts_
[
curP©_
]->
µo_
 = 
√w
 
VÆue
[pcﬁl_->
≈pi_
];

180 
	`assignVÆue
(
pcﬁl_
->
∑ts_
[
curP©_
]->
µo_
, 
µo
,Öcﬁl_->
≈pi_
);

182 
curP©_
++;

183 
	}
}

185 
	gP©ã∫Ródî
::
	$assignVÆue
(
VÆue
 *
v
, c⁄° * c⁄° 
∑t
,

186 c⁄° &
size
) {

187 
i
 = 0; i < 
size
; ++i) {

188 i‡(
∑t
[
i
] == '0')

189 
v
[
i
] = 
L
;

190 i‡(
∑t
[
i
] == '1')

191 
v
[
i
] = 
H
;

193 
v
[
i
] = 
X
;

195 
	}
}

203 
boﬁ
 
	gP©ã∫Wrôî
::
	$wrôeP©
(c⁄° * c⁄° 
‚ame
) {

204 
FILE
 *
fout
 = 
	`f›í
(
‚ame
, "w");

205 i‡(!
fout
) {

206 
	`Ârötf
(
°dîr
, "**ERROR PatternWriter::writePat(): file");

207 
	`Ârötf
(
°dîr
, "`%s' c™nŸ bê›íed\n", 
‚ame
);

208  
Ál£
;

211 
i
 = 0; i < 
cú_
->
≈i_
; ++i) {

212 
	`Ârötf
(
fout
, "%s ",

213 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(cú_->
g©es_
[
i
].
cid_
)->
«me_
);

215 
	`Ârötf
(
fout
, " |\n");

217 
i
 = 
cú_
->
≈i_
; i < cú_->≈i_ + cú_->
≈pi_
; ++i) {

218 
	`Ârötf
(
fout
, "%s ",

219 
cú_
->
∆_
->
	`gëT›
()->
	`gëCñl
(cú_->
g©es_
[
i
].
cid_
)->
«me_
);

221 
	`Ârötf
(
fout
, " |\n");

223 
°¨t
 = 
cú_
->
≈i_
 + cú_->
≈pi_
 + cú_->
ncomb_
;

224 
i
 = 
°¨t
; i < sèπ + 
cú_
->
≈o_
; ++i) {

225 
	`Ârötf
(
fout
, "%s ",

226 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(cú_->
g©es_
[
i
].
cid_
)->
«me_
);

228 
	`Ârötf
(
fout
, "\n");

230 
pcﬁl_
->
ty≥_
) {

231 
P©ã∫Pro˚ss‹
::
BASIC_SCAN
:

232 
	`Ârötf
(
fout
, "BASIC_SCAN\n");

234 
P©ã∫Pro˚ss‹
::
LAUNCH_CAPTURE
:

235 
	`Ârötf
(
fout
, "LAUNCH_ON_CAPTURE\n");

237 
P©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
:

238 
	`Ârötf
(
fout
, "LAUNCH_ON_SHIFT\n");

242 
	`Ârötf
(
fout
, "_num_of_∑âîn_%d\n", ()
pcﬁl_
->
∑ts_
.
	`size
());

244 
i
 = 0; i < ()
pcﬁl_
->
∑ts_
.
	`size
(); ++i) {

245 
	`Ârötf
(
fout
, "_∑âîn_%d ", 
i
 + 1);

246 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
) {

247 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

248 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
L
)

249 
	`Ârötf
(
fout
, "0");

250 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
H
)

251 
	`Ârötf
(
fout
, "1");

253 
	`Ârötf
(
fout
, "X");

256 
	`Ârötf
(
fout
, " | ");

257 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
) {

258 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

259 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
L
)

260 
	`Ârötf
(
fout
, "0");

261 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
H
)

262 
	`Ârötf
(
fout
, "1");

264 
	`Ârötf
(
fout
, "X");

267 
	`Ârötf
(
fout
, " | ");

268 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
) {

269 
j
 = 0; j < 
pcﬁl_
->
≈pi_
; ++j) {

270 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
L
)

271 
	`Ârötf
(
fout
, "0");

272 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
H
)

273 
	`Ârötf
(
fout
, "1");

275 
	`Ârötf
(
fout
, "X");

278 
	`Ârötf
(
fout
, " | ");

279 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
) {

280 
j
 = 0; j < 
pcﬁl_
->
nsi_
; ++j) {

281 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
[
j
] =
L
)

282 
	`Ârötf
(
fout
, "0");

283 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
[
j
] =
H
)

284 
	`Ârötf
(
fout
, "1");

286 
	`Ârötf
(
fout
, "X");

289 
	`Ârötf
(
fout
, " | ");

290 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
) {

291 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

292 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
L
)

293 
	`Ârötf
(
fout
, "0");

294 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
H
)

295 
	`Ârötf
(
fout
, "1");

297 
	`Ârötf
(
fout
, "X");

300 
	`Ârötf
(
fout
, " | ");

301 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
) {

302 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

303 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
L
)

304 
	`Ârötf
(
fout
, "0");

305 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
H
)

306 
	`Ârötf
(
fout
, "1");

308 
	`Ârötf
(
fout
, "X");

311 
	`Ârötf
(
fout
, " | ");

312 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
) {

313 
j
 = 0; j < 
pcﬁl_
->
≈pi_
; ++j) {

314 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
L
)

315 
	`Ârötf
(
fout
, "0");

316 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
H
)

317 
	`Ârötf
(
fout
, "1");

319 
	`Ârötf
(
fout
, "X");

322 
	`Ârötf
(
fout
, "\n");

324 
	`Ârötf
(
fout
, "\n");

325 
	`f˛o£
(
fout
);

327  
åue
;

328 
	}
}

335 
boﬁ
 
	gP©ã∫Wrôî
::
	$wrôeLht
(c⁄° * c⁄° 
‚ame
) {

336 
FILE
 *
fout
 = 
	`f›í
(
‚ame
, "w");

337 i‡(!
fout
) {

338 
	`Ârötf
(
°dîr
, "**ERROR PatternWriter::writePat(): file");

339 
	`Ârötf
(
°dîr
, "`%s' c™nŸ bê›íed\n", 
‚ame
);

340  
Ál£
;

343 
size_t
 
i
 = 0; i < 
pcﬁl_
->
∑ts_
.
	`size
(); ++i) {

344 
	`Ârötf
(
fout
, "%d: ", ()
i
 + 1);

345 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
) {

346 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

347 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
L
)

348 
	`Ârötf
(
fout
, "0");

349 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
H
)

350 
	`Ârötf
(
fout
, "1");

352 
	`Ârötf
(
fout
, "X");

355 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
) {

356 
	`Ârötf
(
fout
, "->");

357 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

358 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
L
)

359 
	`Ârötf
(
fout
, "0");

360 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
H
)

361 
	`Ârötf
(
fout
, "1");

363 
	`Ârötf
(
fout
, "X");

366 
	`Ârötf
(
fout
, "_");

367 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
) {

368 
	`Ârötf
(
fout
, "->");

369 
j
 = 0; j < 
pcﬁl_
->
≈pi_
; ++j) {

370 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
L
)

371 
	`Ârötf
(
fout
, "0");

372 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
H
)

373 
	`Ârötf
(
fout
, "1");

375 
	`Ârötf
(
fout
, "X");

378 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
) {

379 
	`Ârötf
(
fout
, "@");

380 
j
 = 0; j < 
pcﬁl_
->
nsi_
; ++j) {

381 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
[
j
] =
L
)

382 
	`Ârötf
(
fout
, "0");

383 i‡(
pcﬁl_
->
∑ts_
[
i
]->
si_
[
j
] =
H
)

384 
	`Ârötf
(
fout
, "1");

386 
	`Ârötf
(
fout
, "X");

389 
	`Ârötf
(
fout
, " | ");

390 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_


391 && 
pcﬁl_
->
ty≥_
 =
P©ã∫Pro˚ss‹
::
BASIC_SCAN
) {

392 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

393 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
L
)

394 
	`Ârötf
(
fout
, "0");

395 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
H
)

396 
	`Ârötf
(
fout
, "1");

398 
	`Ârötf
(
fout
, "X");

401 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_


402 && (
pcﬁl_
->
ty≥_
 =
P©ã∫Pro˚ss‹
::
LAUNCH_CAPTURE


403 ||
pcﬁl_
->
ty≥_
 =
P©ã∫Pro˚ss‹
::
LAUNCH_SHIFT
)) {

404 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

405 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
L
)

406 
	`Ârötf
(
fout
, "0");

407 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
H
)

408 
	`Ârötf
(
fout
, "1");

410 
	`Ârötf
(
fout
, "X");

413 
	`Ârötf
(
fout
, "_");

414 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
) {

415 
	`Ârötf
(
fout
, "->");

416 
j
 = 0; j < 
pcﬁl_
->
≈pi_
; ++j) {

417 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
L
)

418 
	`Ârötf
(
fout
, "0");

419 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
H
)

420 
	`Ârötf
(
fout
, "1");

422 
	`Ârötf
(
fout
, "X");

425 
	`Ârötf
(
fout
, "\n");

427 
	`Ârötf
(
fout
, "\n");

428 
	`f˛o£
(
fout
);

430  
åue
;

431 
	}
}

436 
boﬁ
 
	gP©ã∫Wrôî
::
	$wrôeAscii
(c⁄° * c⁄° 
‚ame
) {

437 
FILE
 *
fout
 = 
	`f›í
(
‚ame
, "w");

438 
fú°_Êag
 = 1;

439 
£qCúcuôCheck
 = 0;

440 i‡(!
fout
) {

441 
	`Ârötf
(
°dîr
, "**ERROR PatternWriter::writePat(): file");

442 
	`Ârötf
(
°dîr
, "`%s' c™nŸ bê›íed\n", 
‚ame
);

443  
Ál£
;

445 
	`Ârötf
(
fout
, "ASCII_PATTERN_FILE_VERSION = 2;\n");

446 
	`Ârötf
(
fout
, "SETUP =\n");

449 
	`Ârötf
(
fout
, "declare input bus \"PI\" = ");

451 
size_t
 
i
 = 0; i < 
cú_
->
∆_
->
	`gëT›
()->
	`gëNP‹t
(); ++i) {

452 
P‹t
 *
p
 = 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
);

453 i‡(
p
->
ty≥_
 !
P‹t
::
INPUT
) ;

454 i‡(
fú°_Êag
) {

455 
	`Ârötf
(
fout
, "\"/%s\"",

456 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
)->
«me_
);

457 
fú°_Êag
 = 0;

459 
	`Ârötf
(
fout
, ", \"/%s\"",

460 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
)->
«me_
);

462 i‡(!
	`°rcmp
(
p
->
«me_
,"CK"))

463 
£qCúcuôCheck
 = 1;

465 
	`Ârötf
(
fout
, ";\n");

466 
fú°_Êag
 = 1;

468 
	`Ârötf
(
fout
, "declare output bus \"PO\" = ");

469 
size_t
 
i
 = 0; i < 
cú_
->
∆_
->
	`gëT›
()->
	`gëNP‹t
(); ++i) {

470 
P‹t
 *
p
 = 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
);

471 i‡(
p
->
ty≥_
 !
P‹t
::
OUTPUT
) ;

472 i‡(
fú°_Êag
) {

473 
	`Ârötf
(
fout
, "\"/%s\"",

474 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
)->
«me_
);

475 
fú°_Êag
 = 0;

477 
	`Ârötf
(
fout
, ", \"/%s\"",

478 
cú_
->
∆_
->
	`gëT›
()->
	`gëP‹t
(
i
)->
«me_
);

481 
	`Ârötf
(
fout
, ";\n");

484 i‡(
£qCúcuôCheck
) {

485 
	`Ârötf
(
fout
, "clock \"/CK\" =\n");

486 
	`Ârötf
(
fout
, " off_state = 0;\n");

487 
	`Ârötf
(
fout
, "Öulse_width = 1;\n");

488 
	`Ârötf
(
fout
, "end;\n");

491 
	`Ârötf
(
fout
, "procedureÅest_setup \"test_setup\" =\n");

492 
	`Ârötf
(
fout
, " force \"/CK\" 0 0;\n");

493 
	`Ârötf
(
fout
, " force \"/test_si\" 0 0;\n");

494 
	`Ârötf
(
fout
, " force \"/test_se\" 0 0;\n");

495 
	`Ârötf
(
fout
, "end;\n");

498 
	`Ârötf
(
fout
, "scan_group \"group1\" =\n");

499 
	`Ârötf
(
fout
, " scan_chain \"chain1\" =\n");

500 
	`Ârötf
(
fout
, " scan_in = \"/test_si\";\n");

501 
	`Ârötf
(
fout
, " scan_out = \"/test_so\";\n");

502 
	`Ârötf
(
fout
, "Üígth = %d;\n", 
cú_
->
≈pi_
);

503 
	`Ârötf
(
fout
, "Énd;\n");

505 
	`Ârötf
(
fout
, "Örocedure shift \"group1_load_shift\" =\n");

506 
	`Ârötf
(
fout
, " force_sci \"chain1\" 0;\n");

507 
	`Ârötf
(
fout
, " force \"/CK\" 1 16;\n");

508 
	`Ârötf
(
fout
, " force \"/CK\" 0 19;\n");

509 
	`Ârötf
(
fout
, "Öeriod 32;\n");

510 
	`Ârötf
(
fout
, "Énd;\n");

512 
	`Ârötf
(
fout
, "Örocedure shift \"group1_unload_shift\" =\n");

513 
	`Ârötf
(
fout
, " measure_sco \"chain1\" 0;\n");

514 
	`Ârötf
(
fout
, " force \"/CK\" 1 16;\n");

515 
	`Ârötf
(
fout
, " force \"/CK\" 0 19;\n");

516 
	`Ârötf
(
fout
, "Öeriod 32;\n");

517 
	`Ârötf
(
fout
, "Énd;\n");

519 
	`Ârötf
(
fout
, "ÖrocedureÜoad \"group1_load\" =\n");

520 
	`Ârötf
(
fout
, " force \"/CK\" 0 0;\n");

521 
	`Ârötf
(
fout
, " force \"/test_se\" 1 0;\n");

522 
	`Ârötf
(
fout
, " force \"/test_si\" 0 0;\n");

523 
	`Ârötf
(
fout
, "áµly \"group1_lﬂd_shi·\" %d 32;\n", 
cú_
->
≈pi_
);

524 
	`Ârötf
(
fout
, "Énd;\n");

526 
	`Ârötf
(
fout
, "Örocedure unload \"group1_unload\" =\n");

527 
	`Ârötf
(
fout
, " force \"/CK\" 0 0;\n");

528 
	`Ârötf
(
fout
, " force \"/test_se\" 1 0;\n");

529 
	`Ârötf
(
fout
, " force \"/test_si\" 0 0;\n");

530 
	`Ârötf
(
fout
, "áµly \"group1_u∆ﬂd_shi·\" %d 32;\n", 
cú_
->
≈pi_
);

531 
	`Ârötf
(
fout
, "Énd;\n");

533 
	`Ârötf
(
fout
, "end;\n");

535 
	`Ârötf
(
fout
, "end;\n\n");

537 
	`Ârötf
(
fout
, "SCAN_TEST =\n");

540 
i
 = 0; i < ()
pcﬁl_
->
∑ts_
.
	`size
(); ++i) {

541 
	`Ârötf
(
fout
, "∑âî¿%d", 
i
);

542 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
)

543 
	`Ârötf
(
fout
, " clock_sequential;\n");

545 
	`Ârötf
(
fout
, ";\n");

547 i‡(
pcﬁl_
->
≈pi_
) {

548 
	`Ârötf
(
fout
, "apply \"group1_load\" 0 =\n");

549 
	`Ârötf
(
fout
, "chain \"chain1\" = \"");

550 
j
 = 
pcﬁl_
->
≈pi_
 -1; j >= 0; --j) {

551 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
L
)

552 
	`Ârötf
(
fout
, "0");

553 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µi_
[
j
] =
H
)

554 
	`Ârötf
(
fout
, "1");

556 
	`Ârötf
(
fout
, "X");

558 
	`Ârötf
(
fout
, "\";\n");

559 
	`Ârötf
(
fout
, "end;\n");

561 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
) {

562 
	`Ârötf
(
fout
, "force \"PI\" \"");

563 i‡(
£qCúcuôCheck
)

564 
	`Ârötf
(
fout
, "000");

565 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

566 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
L
)

567 
	`Ârötf
(
fout
, "0");

568 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi1_
[
j
] =
H
)

569 
	`Ârötf
(
fout
, "1");

571 
	`Ârötf
(
fout
, "X");

573 
	`Ârötf
(
fout
, "\" 1;\n");

576 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
) {

577 i‡(
£qCúcuôCheck
)

578 
	`Ârötf
(
fout
, "pulse \"/CK\" 2;\n");

579 
	`Ârötf
(
fout
, "force \"PI\" \"");

580 i‡(
£qCúcuôCheck
)

581 
	`Ârötf
(
fout
, "000");

582 
j
 = 0; j < 
pcﬁl_
->
≈i_
; ++j) {

583 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
L
)

584 
	`Ârötf
(
fout
, "0");

585 i‡(
pcﬁl_
->
∑ts_
[
i
]->
pi2_
[
j
] =
H
)

586 
	`Ârötf
(
fout
, "1");

588 
	`Ârötf
(
fout
, "X");

590 
	`Ârötf
(
fout
, "\" 3;\n");

592 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
) {

593 
	`Ârötf
(
fout
, "measure \"PO\" \"");

594 i‡(
£qCúcuôCheck
)

595 
	`Ârötf
(
fout
, "X");

596 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

597 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
L
)

598 
	`Ârötf
(
fout
, "0");

599 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po2_
[
j
] =
H
)

600 
	`Ârötf
(
fout
, "1");

602 
	`Ârötf
(
fout
, "X");

604 
	`Ârötf
(
fout
, "\" 4;\n");

606 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
) {

607 
	`Ârötf
(
fout
, "measure \"PO\" \"");

608 i‡(
£qCúcuôCheck
)

609 
	`Ârötf
(
fout
, "X");

610 
j
 = 0; j < 
pcﬁl_
->
≈o_
; ++j) {

611 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
L
)

612 
	`Ârötf
(
fout
, "0");

613 i‡(
pcﬁl_
->
∑ts_
[
i
]->
po1_
[
j
] =
H
)

614 
	`Ârötf
(
fout
, "1");

616 
	`Ârötf
(
fout
, "X");

618 
	`Ârötf
(
fout
, "\" 4;\n");

636 i‡(
pcﬁl_
->
≈pi_
) {

637 
	`Ârötf
(
fout
, "pulse \"/CK\" 5;\n");

638 
	`Ârötf
(
fout
, "apply \"group1_unload\" 6 =\n");

639 
	`Ârötf
(
fout
, "chain \"chain1\" = \"");

640 
j
 = 
pcﬁl_
->
≈pi_
 - 1; j >= 0; --j) {

641 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
L
)

642 
	`Ârötf
(
fout
, "0");

643 i‡(
pcﬁl_
->
∑ts_
[
i
]->
µo_
[
j
] =
H
)

644 
	`Ârötf
(
fout
, "1");

646 
	`Ârötf
(
fout
, "X");

648 
	`Ârötf
(
fout
, "\";\n");

649 
	`Ârötf
(
fout
, "end;\n");

652 
	`Ârötf
(
fout
, "end;\n");

655 if(
£qCúcuôCheck
) {

656 
	`Ârötf
(
fout
, "SCAN_CELLS =\n");

657 
	`Ârötf
(
fout
, "scan_group \"group1\" =\n");

658 
	`Ârötf
(
fout
, "scan_chain \"chain1\" =\n");

659 
i
 = 
cú_
->
≈i_
 + cú_->
≈pi_
 - 1; i >= cir_->npi_; --i) {

660 
	`Ârötf
(
fout
,

662 
cú_
->
≈i_
 + cú_->
≈pi_
 - 1 - 
i
, cú_->
∆_
->
	`gëT›
()->
	`gëCñl
(cú_->
g©es_
[i].
cid_
)->
«me_
);

666 
	`Ârötf
(
fout
, "end;\n");

667 
	`Ârötf
(
fout
, "end;\n");

668 
	`Ârötf
(
fout
, "end;\n");

670 
	`Ârötf
(
fout
, "\n");

671 
	`f˛o£
(
fout
);

673  
åue
;

674 
	}
}

676 
boﬁ
 
	gPro˚duªWrôî
::
	$wrôeProc
(c⁄° * c⁄° 
‚ame
) {

677 
FILE
 *
fout
 = 
	`f›í
(
‚ame
, "w");

678 i‡(!
fout
) {

679 
	`Ârötf
(
°dîr
, "**ERROR PatternWriter::writePat(): file");

680 
	`Ârötf
(
°dîr
, "`%s' c™nŸ bê›íed\n", 
‚ame
);

681  
Ál£
;

684 
	`Ârötf
(
fout
, "setÅime scale 1.000000Çs ;\n");

685 
	`Ârötf
(
fout
, "set strobe_windowÅime 3 ;\n\n");

686 
	`Ârötf
(
fout
, "timeplate _default_WFT_ =\n");

687 
	`Ârötf
(
fout
, "force_pi 0 ;\n");

688 
	`Ârötf
(
fout
, "measure_po 29 ;\n");

689 
	`Ârötf
(
fout
, "pulse CK 16 3;\n");

690 
	`Ârötf
(
fout
, "period 32 ;\n");

691 
	`Ârötf
(
fout
, "end;\n\n");

692 
	`Ârötf
(
fout
, "procedure shift =\n");

693 
	`Ârötf
(
fout
, "scan_group group1 ;\n");

694 
	`Ârötf
(
fout
, "timeplate _default_WFT_ ;\n");

695 
	`Ârötf
(
fout
, "cycle =\n");

696 
	`Ârötf
(
fout
, "force_sci ;\n");

697 
	`Ârötf
(
fout
, "pulse CK ;\n");

698 
	`Ârötf
(
fout
, "measure_sco ;\n");

699 
	`Ârötf
(
fout
, "end;\n");

700 
	`Ârötf
(
fout
, "end;\n\n");

701 
	`Ârötf
(
fout
, "procedureÜoad_unload =\n");

702 
	`Ârötf
(
fout
, "scan_group group1 ;\n");

703 
	`Ârötf
(
fout
, "timeplate _default_WFT_ ;\n");

704 
	`Ârötf
(
fout
, "cycle =\n");

705 
	`Ârötf
(
fout
, "force CK 0 ;\n");

706 
	`Ârötf
(
fout
, "forceÅest_se 1 ;\n");

707 
	`Ârötf
(
fout
, "forceÅest_si 0 ;\n");

708 
	`Ârötf
(
fout
, "measure_sco ;\n");

709 
	`Ârötf
(
fout
, "end ;\n");

710 
	`Ârötf
(
fout
, "≠∂y shi· %d;\n", 
cú_
->
≈pi_
);

711 
	`Ârötf
(
fout
, "end;\n");

712 
	`Ârötf
(
fout
, "procedureÅest_setup =\n");

713 
	`Ârötf
(
fout
, "timeplate _default_WFT_ ;\n");

714 
	`Ârötf
(
fout
, "cycle =\n");

715 
	`Ârötf
(
fout
, "force CK 0 ;\n");

716 
	`Ârötf
(
fout
, "forceÅest_se 0 ;\n");

717 
	`Ârötf
(
fout
, "end;\n");

718 
	`Ârötf
(
fout
, "end;\n");

719 
	`f˛o£
(
fout
);

720  
åue
;

721 
	}
}

	@core/src/pattern_rw.h

8 #i‚de‡
_CORE_PATTERN_RW_H_


9 
	#_CORE_PATTERN_RW_H_


	)

11 
	~"öãrÁ˚/∑t_fûe.h
"

13 
	~"cúcuô.h
"

14 
	~"∑âîn.h
"

16 
«me•a˚
 
	gC‹eNs
 {

20 ˛as†
	cP©ã∫Ródî
 : 
public
 
I¡fNs
::
P©Fûe
 {

21 
public
:

22 
P©ã∫Ródî
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Cúcuô
 *
cú
);

23 ~
P©ã∫Ródî
();

24 
vútuÆ
 
£tPiOrdî
(c⁄° 
I¡fNs
::
P©Names
 * c⁄° 
pis
);

25 
vútuÆ
 
£tPpiOrdî
(c⁄° 
I¡fNs
::
P©Names
 * c⁄° 
µis
);

26 
vútuÆ
 
£tPoOrdî
(c⁄° 
I¡fNs
::
P©Names
 * c⁄° 
pos
);

27 
vútuÆ
 
£tP©ã∫Ty≥
(c⁄° 
I¡fNs
::
P©Ty≥
 &
ty≥
);

28 
vútuÆ
 
£tP©ã∫Num
(c⁄° &
num
);

29 
vútuÆ
 
addP©ã∫
(c⁄° * c⁄° 
pi1
, c⁄° * c⁄° 
pi2
,

30 c⁄° * c⁄° 
µi
, c⁄° * c⁄° 
si
,

31 c⁄° * c⁄° 
po1
, c⁄° * c⁄° 
po2
,

32 c⁄° * c⁄° 
µo
);

34 
	g¥Ÿe˘ed
:

35 
assignVÆue
(
VÆue
 *
v
, c⁄° * c⁄° 
∑t
,

36 c⁄° &
size
);

37 
	gcurP©_
;

38 
P©ã∫Pro˚ss‹
 *
	gpcﬁl_
;

39 
Cúcuô
 *
	gcú_
;

42 
ölöe
 
	gP©ã∫Ródî
::
	$P©ã∫Ródî
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Cúcuô
 *
cú
) {

43 
curP©_
 = 0;

44 
pcﬁl_
 = 
pcﬁl
;

45 
cú_
 = 
cú
;

46 
	}
}

48 
ölöe
 
	gP©ã∫Ródî
::~
	$P©ã∫Ródî
(Ë{
	}
}

51 ˛as†
	cP©ã∫Wrôî
 {

52 
public
:

53 
P©ã∫Wrôî
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Cúcuô
 *
cú
);

54 ~
P©ã∫Wrôî
();

56 
boﬁ
 
wrôeP©
(c⁄° * c⁄° 
‚ame
);

57 
boﬁ
 
wrôeLht
(c⁄° * c⁄° 
‚ame
);

58 
boﬁ
 
wrôeAscii
(c⁄° * c⁄° 
‚ame
);

60 
	g¥Ÿe˘ed
:

61 
P©ã∫Pro˚ss‹
 *
pcﬁl_
;

62 
Cúcuô
 *
	gcú_
;

65 
ölöe
 
	gP©ã∫Wrôî
::
	$P©ã∫Wrôî
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Cúcuô
 *
cú
) {

66 
pcﬁl_
 = 
pcﬁl
;

67 
cú_
 = 
cú
;

68 
	}
}

70 
ölöe
 
	gP©ã∫Wrôî
::~
	$P©ã∫Wrôî
(Ë{
	}
}

73 ˛as†
	cPro˚duªWrôî
 {

74 
public
:

75 
Pro˚duªWrôî
(
Cúcuô
 *
cú
);

76 ~
Pro˚duªWrôî
();

77 
boﬁ
 
wrôeProc
(c⁄° * c⁄° 
‚ame
);

78 
	g¥Ÿe˘ed
:

79 
Cúcuô
 *
cú_
;

82 
ölöe
 
	gPro˚duªWrôî
::
	$Pro˚duªWrôî
(
Cúcuô
 *
cú
) {

83 
cú_
 = 
cú
;

84 
	}
}

86 
ölöe
 
	gPro˚duªWrôî
::~
	$Pro˚duªWrôî
(Ë{
	}
}

	@core/src/simulator.cpp

8 
	~"simuœt‹.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gI¡fNs
;

12 
usög
 
«me•a˚
 
	gC‹eNs
;

25 
	gSimuœt‹
::
	$µGoodSim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
) {

26 
i
 = 0; i < ()
pcﬁl
->
∑ts_
.
	`size
(); i +
WORD_SIZE
) {

27 
	`µSëP©ã∫
(
pcﬁl
, 
i
);

28 
	`goodSim
();

30 
	}
}

46 
	gSimuœt‹
::
	$evítFau…Sim
() {

47 
i
 = 0; i < 
cú_
->
évl_
; ++i) {

48 !
evíts_
[
i
].
	`em±y
()) {

49 
gid
 = 
evíts_
[
i
].
	`t›
();

50 
evíts_
[
i
].
	`p›
();

51 
¥o˚s£d_
[
gid
] = 
Ál£
;

52 
	`Áu…EvÆ
(
gid
);

53 
ªcovî_
[
ƒecovî_
] = 
gid
;

54 
ƒecovî_
++;

57 i‡(
cú_
->
g©es_
[
gid
].
Ê_
 =cú_->g©es_[gid].
gl_


58 && 
cú_
->
g©es_
[
gid
].
fh_
 =cú_->g©es_[gid].
gh_
)

62 
j
 = 0; j < 
cú_
->
g©es_
[
gid
].
nfo_
; ++j) {

63 
foid
 = 
cú_
->
g©es_
[
gid
].
fos_
[
j
];

64 i‡(
¥o˚s£d_
[
foid
])

66 
evíts_
[
cú_
->
g©es_
[
foid
].
lvl_
].
	`push
(foid);

67 
¥o˚s£d_
[
foid
] = 
åue
;

71 
	}
}

84 
	gSimuœt‹
::
	$pfFau…Sim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Fau…Li°Exåa˘
 *
fLi°Exåa˘
) {

86 
Fau…Li°
 
ªmaö
;

87 
Fau…Li°Iãr
 
ô
 = 
fLi°Exåa˘
->
cuºít_
.
	`begö
();

88  ; 
ô
 !
fLi°Exåa˘
->
cuºít_
.
	`íd
(); ++it)

89 i‡((*
ô
)->
°©e_
 !
Fau…
::
DT
 && (*ô)->°©e_ !Fau…::
RE
 && (*ô)->
löe_
 >= 0)

90 
ªmaö
.
	`push_back
(*
ô
);

93 
size_t
 
i
 = 0; i < 
pcﬁl
->
∑ts_
.
	`size
(); ++i) {

94 i‡(
ªmaö
.
	`size
() == 0)

98 
	`assignP©ã∫ToPi
–
pcﬁl
->
∑ts_
[
i
] );

99 
	`pfFau…Sim
(
ªmaö
);

102 
	}
}

115 
	gSimuœt‹
::
	$pfFau…Sim
(c⁄° 
P©ã∫
 * c⁄° 
p
, 
Fau…Li°
 &
ªmaö
) {

118 
	`assignP©ã∫ToPi
–
p
 );

119 
	`pfFau…Sim
(
ªmaö
);

121 
	}
}

133 
	gSimuœt‹
::
	$pfFau…Sim
(
Fau…Li°
 &
ªmaö
) {

134 i‡(
ªmaö
.
	`size
() == 0)

138 
	`goodSimC›yToFau…
();

143 
Fau…Li°Iãr
 
ô
 = 
ªmaö
.
	`begö
();

146 i‡(
	`pfCheckA˘iv©i⁄
(*
ô
)) {

147 
	`pfInje˘
(*
ô
, 
nöje˘ed_
);

148 
öje˘ed_
[
nöje˘ed_
] = 
ô
;

149 
nöje˘ed_
++;

151 
ô
++;

154 i‡(
nöje˘ed_
 =()
WORD_SIZE


155 || (
ô
 =
ªmaö
.
	`íd
(Ë&& 
nöje˘ed_
 > 0)) {

156 
	`evítFau…Sim
();

157 
	`pfCheckDëe˘i⁄
(
ªmaö
);

158 
	`pfRe£t
();

161 } 
ô
 !
ªmaö
.
	`íd
());

162 
	}
}

175 
boﬁ
 
	gSimuœt‹
::
	$pfCheckA˘iv©i⁄
(c⁄° 
Fau…
 * c⁄° 
f
) {

176 c⁄° &
fg
 = 
f
->
löe_
 =0 ? f->
g©e_
 :

177 
cú_
->
g©es_
[
f
->
g©e_
].
fis_
[f->
löe_
 - 1];

178 c⁄° 
P¨aVÆue
 &
gl
 = 
cú_
->
g©es_
[
fg
].
gl_
;

179 c⁄° 
P¨aVÆue
 &
gh
 = 
cú_
->
g©es_
[
fg
].
gh_
;

181 
f
->
ty≥_
) {

182 
Fau…
::
SA0
:

183  
gh
 !
PARA_L
;

185 
Fau…
::
SA1
:

186  
gl
 !
PARA_L
;

188 
Fau…
::
STR
:

189 i‡(
cú_
->
n‰ame_
 < 2)

190  
Ál£
;

191  (
gl
 & 
cú_
->
g©es_
[
fg
 + cú_->
ng©e_
].
gh_
Ë!
PARA_L
;

193 
Fau…
::
STF
:

194 i‡(
cú_
->
n‰ame_
 < 2)

195  
Ál£
;

196  (
gh
 & 
cú_
->
g©es_
[
fg
 + cú_->
ng©e_
].
gl_
Ë!
PARA_L
;

201  
Ál£
;

202 
	}
}

214 
	gSimuœt‹
::
	$pfInje˘
(c⁄° 
Fau…
 * c⁄° 
f
, c⁄° 
size_t
 &
i
) {

215 
fg
 = 
f
->
g©e_
;

216 
f
->
ty≥_
) {

217 
Fau…
::
SA0
:

218 
	`£tBôVÆue
(
Áu…Inje˘L_
[
fg
][
f
->
löe_
], 
i
, 
H
);

220 
Fau…
::
SA1
:

221 
	`£tBôVÆue
(
Áu…Inje˘H_
[
fg
][
f
->
löe_
], 
i
, 
H
);

223 
Fau…
::
STR
:

224 
fg
 +
cú_
->
ng©e_
;

225 
	`£tBôVÆue
(
Áu…Inje˘L_
[
fg
][
f
->
löe_
], 
i
, 
H
);

227 
Fau…
::
STF
:

228 
fg
 +
cú_
->
ng©e_
;

229 
	`£tBôVÆue
(
Áu…Inje˘H_
[
fg
][
f
->
löe_
], 
i
, 
H
);

236 i‡(!
¥o˚s£d_
[
fg
]) {

237 
evíts_
[
cú_
->
g©es_
[
fg
].
lvl_
].
	`push
(fg);

238 
¥o˚s£d_
[
fg
] = 
åue
;

240 
	}
}

253 
	gSimuœt‹
::
	$pfCheckDëe˘i⁄
(
Fau…Li°
 &
ªmaö
) {

254 
P¨aVÆue
 
dëe˘ed
 = 
PARA_L
;

255 
°¨t
 = 
cú_
->
tg©e_
 - cú_->
≈o_
 - cú_->
≈pi_
;

256 
i
 = 
°¨t
; i < 
cú_
->
tg©e_
; ++i)

257 
dëe˘ed
 |((
cú_
->
g©es_
[
i
].
gl_
 & cú_->g©es_[i].
fh_
)

258 | (
cú_
->
g©es_
[
i
].
gh_
 & cú_->g©es_[i].
Ê_
));

261 
i
 = 0; i < 
nöje˘ed_
; ++i) {

262 i‡(
	`gëBôVÆue
(
dëe˘ed
, (
size_t
)
i
Ë=
L
)

264 (*
öje˘ed_
[
i
])->
dë_
++;

265 i‡((*
öje˘ed_
[
i
])->
dë_
 >
ndë_
) {

266 (*
öje˘ed_
[
i
])->
°©e_
 = 
Fau…
::
DT
;

267 
ªmaö
.
	`îa£
(
öje˘ed_
[
i
]);

270 
	}
}

282 
	gSimuœt‹
::
	$µFau…Sim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Fau…Li°Exåa˘
 *
fLi°Exåa˘
) {

284 
Fau…Li°
 
ªmaö
;

285 
Fau…Li°Iãr
 
ô
 = 
fLi°Exåa˘
->
cuºít_
.
	`begö
();

286  ; 
ô
 !
fLi°Exåa˘
->
cuºít_
.
	`íd
(); ++it)

287 i‡((*
ô
)->
°©e_
 !
Fau…
::
DT
 && (*ô)->°©e_ !Fau…::
RE
 && (*ô)->
löe_
 >= 0)

288 
ªmaö
.
	`push_back
(*
ô
);

291 
i
 = 0; i < ()
pcﬁl
->
∑ts_
.
	`size
(); i +
WORD_SIZE
) {

292 
	`µSëP©ã∫
(
pcﬁl
, 
i
);

293 
	`µFau…Sim
(
ªmaö
);

295 
	}
}

307 
	gSimuœt‹
::
	$µFau…Sim
(
Fau…Li°
 &
ªmaö
) {

308 i‡(
ªmaö
.
	`size
() == 0)

312 
	`goodSimC›yToFau…
();

314 
Fau…Li°Iãr
 
ô
 = 
ªmaö
.
	`begö
();

316 i‡(
	`µCheckA˘iv©i⁄
((*
ô
))) {

317 
	`µInje˘
((*
ô
));

318 
	`evítFau…Sim
();

319 
	`µCheckDëe˘i⁄
((*
ô
));

320 
	`µRe£t
();

322 i‡((*
ô
)->
°©e_
 =
Fau…
::
DT
)

323 
ô
 = 
ªmaö
.
	`îa£
(it);

325 
ô
++;

326 } 
ô
 !
ªmaö
.
	`íd
());

327 
	}
}

339 
boﬁ
 
	gSimuœt‹
::
	$µCheckA˘iv©i⁄
(c⁄° 
Fau…
 * c⁄° 
f
) {

340 c⁄° &
fg
 = 
f
->
löe_
 =0 ? f->
g©e_
 :

341 
cú_
->
g©es_
[
f
->
g©e_
].
fis_
[f->
löe_
 - 1];

342 c⁄° 
P¨aVÆue
 &
gl
 = 
cú_
->
g©es_
[
fg
].
gl_
;

343 c⁄° 
P¨aVÆue
 &
gh
 = 
cú_
->
g©es_
[
fg
].
gh_
;

345 
f
->
ty≥_
) {

346 
Fau…
::
SA0
:

347 
a˘iv©ed_
 = 
gh
;

348  
a˘iv©ed_
 !
PARA_L
;

350 
Fau…
::
SA1
:

351 
a˘iv©ed_
 = 
gl
;

352  
a˘iv©ed_
 !
PARA_L
;

354 
Fau…
::
STR
:

355 i‡(
cú_
->
n‰ame_
 < 2)

356  
Ál£
;

357 
a˘iv©ed_
 = (
gl
 & 
cú_
->
g©es_
[
fg
 + cú_->
ng©e_
].
gh_
);

358  
a˘iv©ed_
 !
PARA_L
;

360 
Fau…
::
STF
:

361 i‡(
cú_
->
n‰ame_
 < 2)

362  
Ál£
;

363 
a˘iv©ed_
 = (
gh
 & 
cú_
->
g©es_
[
fg
 + cú_->
ng©e_
].
gl_
);

364  
a˘iv©ed_
 !
PARA_L
;

369  
Ál£
;

370 
	}
}

382 
	gSimuœt‹
::
	$µInje˘
(c⁄° 
Fau…
 * c⁄° 
f
) {

383 
fg
 = 
f
->
g©e_
;

384 
f
->
ty≥_
) {

385 
Fau…
::
SA0
:

386 
Áu…Inje˘L_
[
fg
][
f
->
löe_
] = 
PARA_H
;

388 
Fau…
::
SA1
:

389 
Áu…Inje˘H_
[
fg
][
f
->
löe_
] = 
PARA_H
;

391 
Fau…
::
STR
:

392 
fg
 +
cú_
->
ng©e_
;

393 
Áu…Inje˘L_
[
fg
][
f
->
löe_
] = 
PARA_H
;

395 
Fau…
::
STF
:

396 
fg
 +
cú_
->
ng©e_
;

397 
Áu…Inje˘H_
[
fg
][
f
->
löe_
] = 
PARA_H
;

404 i‡(!
¥o˚s£d_
[
fg
]) {

405 
evíts_
[
cú_
->
g©es_
[
fg
].
lvl_
].
	`push
(fg);

406 
¥o˚s£d_
[
fg
] = 
åue
;

408 
	}
}

421 
	gSimuœt‹
::
	$µCheckDëe˘i⁄
(
Fau…
 * c⁄° 
f
) {

422 
P¨aVÆue
 
dëe˘ed
 = 
PARA_L
;

423 
°¨t
 = 
cú_
->
tg©e_
 - cú_->
≈o_
 - cú_->
≈pi_
;

424 
i
 = 
°¨t
; i < 
cú_
->
tg©e_
; ++i)

425 
dëe˘ed
 |((
cú_
->
g©es_
[
i
].
gl_
 & cú_->g©es_[i].
fh_
)

426 | (
cú_
->
g©es_
[
i
].
gh_
 & cú_->g©es_[i].
Ê_
));

427 
dëe˘ed
 &
a˘iv©ed_
;

430 
size_t
 
i
 = 0; i < 
WORD_SIZE
; ++i) {

431 i‡(
	`gëBôVÆue
(
dëe˘ed
, 
i
Ë=
L
)

433 
f
->
dë_
++;

434 i‡(
f
->
dë_
 >
ndë_
) {

435 
f
->
°©e_
 = 
Fau…
::
DT
;

439 
	}
}

452 
	gSimuœt‹
::
	$µSëP©ã∫
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, c⁄° &
i
) {

454 
j
 = 0; j < 
cú_
->
≈i_
 + cú_->
≈pi_
; ++j) {

455 
k
 = 0; k < 
cú_
->
n‰ame_
; ++k) {

456 
cú_
->
g©es_
[
j
 + 
k
 * cú_->
ng©e_
].
gl_
 = 
PARA_L
;

457 
cú_
->
g©es_
[
j
 + 
k
 * cú_->
ng©e_
].
gh_
 = 
PARA_L
;

462 
íd∑t
 = ()
pcﬁl
->
∑ts_
.
	`size
();

463 i‡(
i
 + ()
WORD_SIZE
 <()
pcﬁl
->
∑ts_
.
	`size
())

464 
íd∑t
 = 
i
 + 
WORD_SIZE
;

465 
j
 = 
i
; j < 
íd∑t
; ++j) {

467 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi1_
) {

468 
k
 = 0; k < 
pcﬁl
->
≈i_
; ++k) {

469 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi1_
[
k
] =
L
)

470 
	`£tBôVÆue
(
cú_
->
g©es_
[
k
].
gl_
, 
j
 - 
i
, 
H
);

471 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi1_
[
k
] =
H
)

472 
	`£tBôVÆue
(
cú_
->
g©es_
[
k
].
gh_
, 
j
 - 
i
, 
H
);

475 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi2_
 && 
cú_
->
n‰ame_
 > 1) {

476 
k
 = 0; k < 
pcﬁl
->
≈i_
; ++k) {

477 
ödex
 = 
k
 + 
cú_
->
ng©e_
;

478 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi2_
[
k
] =
L
)

479 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gl_
, 
j
 - 
i
, 
H
);

480 i‡(
pcﬁl
->
∑ts_
[
j
]->
pi2_
[
k
] =
H
)

481 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gh_
, 
j
 - 
i
, 
H
);

485 i‡(
pcﬁl
->
∑ts_
[
j
]->
µi_
) {

486 
k
 = 0; k < 
pcﬁl
->
≈pi_
; ++k) {

487 
ödex
 = 
k
 + 
cú_
->
≈i_
;

488 i‡(
pcﬁl
->
∑ts_
[
j
]->
µi_
[
k
] =
L
)

489 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gl_
, 
j
 - 
i
, 
H
);

490 i‡(
pcﬁl
->
∑ts_
[
j
]->
µi_
[
k
] =
H
)

491 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gh_
, 
j
 - 
i
, 
H
);

495 i‡(
pcﬁl
->
∑ts_
[
j
]->
si_
 && 
cú_
->
n‰ame_
 > 1 && cú_->
c⁄nTy≥_
 =
Cúcuô
::
SHIFT
) {

496 
ödex
 = 
cú_
->
ng©e_
 + cú_->
≈i_
;

497 i‡(
pcﬁl
->
∑ts_
[
j
]->
si_
[0] =
L
)

498 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gl_
, 
j
 - 
i
, 
H
);

499 i‡(
pcﬁl
->
∑ts_
[
j
]->
si_
[0] =
H
)

500 
	`£tBôVÆue
(
cú_
->
g©es_
[
ödex
].
gh_
, 
j
 - 
i
, 
H
);

503 
	}
}

	@core/src/simulator.h

9 #i‚de‡
_CORE_SIMULATOR_H_


10 
	#_CORE_SIMULATOR_H_


	)

12 
	~<°ack
>

14 
	~"∑âîn.h
"

15 
	~"Áu….h
"

17 
«me•a˚
 
	gC‹eNs
 {

19 ˛as†
	cSimuœt‹
 {

20 
	gpublic
:

21 
Simuœt‹
(
Cúcuô
 *
cú
);

22 ~
Simuœt‹
();

25 
£tNdë
(c⁄° &
ndë
);

26 
evítFau…Sim
();

27 
goodSim
();

28 
goodSimC›yToFau…
();

29 
goodEvÆ
(c⁄° &
i
);

30 
Áu…EvÆ
(c⁄° &
i
);

31 
assignP©ã∫ToPi
(c⁄° 
P©ã∫
 *c⁄° 
p
);

34 
pfFau…Sim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Fau…Li°Exåa˘
 *
fLi°Exåa˘
);

35 
pfFau…Sim
(c⁄° 
P©ã∫
 * c⁄° 
p
, 
Fau…Li°
 &
ªmaö
);

36 
pfFau…Sim
(
Fau…Li°
 &
ªmaö
);

39 
µGoodSim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
);

40 
µFau…Sim
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, 
Fau…Li°Exåa˘
 *
fLi°Exåa˘
);

41 
µFau…Sim
(
Fau…Li°
 &
ªmaö
);

43 
	g¥Ÿe˘ed
:

45 
Cúcuô
 *
cú_
;

46 
	gndë_
;

47 
	g°d
::
°ack
<> *
evíts_
;

48 
boﬁ
 *
	g¥o˚s£d_
;

49 *
	gªcovî_
;

50 
	gƒecovî_
;

53 
P¨aVÆue
 (*
Áu…Inje˘L_
)[5];

54 
P¨aVÆue
 (*
Áu…Inje˘H_
)[5];

57 
pfRe£t
();

58 
boﬁ
 
pfCheckA˘iv©i⁄
(c⁄° 
Fau…
 * c⁄° 
f
);

59 
pfInje˘
(c⁄° 
Fau…
 * c⁄° 
f
, c⁄° 
size_t
 &
i
);

60 
pfCheckDëe˘i⁄
(
Fau…Li°
 &
ªmaö
);

61 
Fau…Li°Iãr
 
	göje˘ed_
[
WORD_SIZE
];

62 
	gnöje˘ed_
;

65 
µRe£t
();

66 
boﬁ
 
µCheckA˘iv©i⁄
(c⁄° 
Fau…
 * c⁄° 
f
);

67 
µInje˘
(c⁄° 
Fau…
 * c⁄° 
f
);

68 
µCheckDëe˘i⁄
(
Fau…
 * c⁄° 
f
);

69 
µSëP©ã∫
(
P©ã∫Pro˚ss‹
 *
pcﬁl
, c⁄° &
i
);

70 
P¨aVÆue
 
	ga˘iv©ed_
;

74 
ölöe
 
	gSimuœt‹
::
	$Simuœt‹
(
Cúcuô
 *
cú
) {

76 
cú_
 = 
cú
;

77 
ndë_
 = 1;

78 
evíts_
 = 
√w
 
°d
::
°ack
<>[
cú_
->
évl_
];

79 
¥o˚s£d_
 = 
√w
 
boﬁ
[
cú_
->
tg©e_
];

80 
ªcovî_
 = 
√w
 [
cú_
->
tg©e_
];

81 
ƒecovî_
 = 0;

82 
Áu…Inje˘L_
 = 
√w
 
P¨aVÆue
[
cú_
->
tg©e_
][5];

83 
Áu…Inje˘H_
 = 
√w
 
P¨aVÆue
[
cú_
->
tg©e_
][5];

85 
	`mem£t
(
¥o˚s£d_
, 0, 
cú_
->
tg©e_
 * (
boﬁ
));

86 
	`mem£t
(
Áu…Inje˘L_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

87 
	`mem£t
(
Áu…Inje˘H_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

90 
nöje˘ed_
 = 0;

93 
a˘iv©ed_
 = 
PARA_L
;

94 
	}
}

96 
ölöe
 
	gSimuœt‹
::~
	$Simuœt‹
() {

97 
dñëe
 [] 
evíts_
;

98 
dñëe
 [] 
¥o˚s£d_
;

99 
dñëe
 [] 
ªcovî_
;

100 
dñëe
 [] 
Áu…Inje˘L_
;

101 
dñëe
 [] 
Áu…Inje˘H_
;

102 
	}
}

114 
ölöe
 
	gSimuœt‹
::
	$assignP©ã∫ToPi
(c⁄° 
P©ã∫
 *c⁄° 
∑t
)

117 
j
 = 0; j < 
cú_
->
≈i_
; ++j) {

118 
cú_
->
g©es_
[
j
].
gl_
 = 
PARA_L
;

119 
cú_
->
g©es_
[
j
].
gh_
 = 
PARA_L
;

120 i‡(
∑t
->
pi1_
) {

121 i‡(
∑t
->
pi1_
[
j
] =
L
)

122 
cú_
->
g©es_
[
j
].
gl_
 = 
PARA_H
;

123 i‡(
∑t
->
pi1_
[
j
] =
H
)

124 
cú_
->
g©es_
[
j
].
gh_
 = 
PARA_H
;

126 i‡(
cú_
->
n‰ame_
 > 1) {

127 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
].
gl_
 = 
PARA_L
;

128 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
].
gh_
 = 
PARA_L
;

129 i‡(
∑t
->
pi2_
) {

130 i‡(
∑t
->
pi2_
[
j
] =
L
)

131 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
].
gl_
 = 
PARA_H
;

132 i‡(
∑t
->
pi2_
[
j
] =
H
)

133 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
].
gh_
 = 
PARA_H
;

139 
j
 = 
cú_
->
≈i_
; j < cú_->≈i_+ cú_->
≈pi_
; ++j) {

140 
cú_
->
g©es_
[
j
].
gl_
 = 
PARA_L
;

141 
cú_
->
g©es_
[
j
].
gh_
 = 
PARA_L
;

142 i‡(
∑t
->
µi_
) {

143 i‡(
∑t
->
µi_
[
j
 - 
cú_
->
≈i_
] =
L
)

144 
cú_
->
g©es_
[
j
].
gl_
 = 
PARA_H
;

145 i‡(
∑t
->
µi_
[
j
 - 
cú_
->
≈i_
] =
H
)

146 
cú_
->
g©es_
[
j
].
gh_
 = 
PARA_H
;

148 i‡(
cú_
->
c⁄nTy≥_
 =
Cúcuô
::
SHIFT
 && cú_->
n‰ame_
 > 1) {

149 
k
 = 1 ; k < 
cú_
->
n‰ame_
; ++k){

150 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
*
k
].
gl_
 = 
PARA_L
;

151 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
*
k
].
gh_
 = 
PARA_L
;

152 i‡(
j
 =
cú_
->
≈i_
){

153 i‡(
∑t
->
si_
) {

154 i‡(
∑t
->
si_
[
k
-1] =
L
)

155 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
*
k
].
gl_
 = 
PARA_H
;

156 i‡(
∑t
->
si_
[
k
-1] =
H
)

157 
cú_
->
g©es_
[
j
 + cú_->
ng©e_
*
k
].
gh_
 = 
PARA_H
;

166 
	}
}

176 
ölöe
 
	gSimuœt‹
::
	$£tNdë
(c⁄° &
ndë
) {

177 
ndë_
 = 
ndë
;

178 
	}
}

189 
ölöe
 
	gSimuœt‹
::
	$goodSim
() {

190 
i
 = 0; i < 
cú_
->
tg©e_
; ++i)

191 
	`goodEvÆ
(
i
);

192 
	}
}

204 
ölöe
 
	gSimuœt‹
::
	$goodSimC›yToFau…
() {

205 
i
 = 0; i < 
cú_
->
tg©e_
; ++i) {

206 
	`goodEvÆ
(
i
);

207 
cú_
->
g©es_
[
i
].
Ê_
 = cú_->g©es_[i].
gl_
;

208 
cú_
->
g©es_
[
i
].
fh_
 = cú_->g©es_[i].
gh_
;

210 
	}
}

222 
ölöe
 
	gSimuœt‹
::
	$pfRe£t
() {

223 
i
 = 0; i < 
ƒecovî_
; ++i) {

224 
cú_
->
g©es_
[
ªcovî_
[
i
]].
Ê_
 = cú_->g©es_[ªcovî_[i]].
gl_
;

225 
cú_
->
g©es_
[
ªcovî_
[
i
]].
fh_
 = cú_->g©es_[ªcovî_[i]].
gh_
;

227 
ƒecovî_
 = 0;

228 
	`mem£t
(
¥o˚s£d_
, 0, 
cú_
->
tg©e_
 * (
boﬁ
));

229 
	`mem£t
(
Áu…Inje˘L_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

230 
	`mem£t
(
Áu…Inje˘H_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

232 
nöje˘ed_
 = 0;

233 
	}
}

244 
ölöe
 
	gSimuœt‹
::
	$µRe£t
() {

245 
i
 = 0; i < 
ƒecovî_
; ++i) {

246 
cú_
->
g©es_
[
ªcovî_
[
i
]].
Ê_
 = cú_->g©es_[ªcovî_[i]].
gl_
;

247 
cú_
->
g©es_
[
ªcovî_
[
i
]].
fh_
 = cú_->g©es_[ªcovî_[i]].
gh_
;

249 
ƒecovî_
 = 0;

250 
	`mem£t
(
¥o˚s£d_
, 0, 
cú_
->
tg©e_
 * (
boﬁ
));

251 
	`mem£t
(
Áu…Inje˘L_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

252 
	`mem£t
(
Áu…Inje˘H_
, 0, 
cú_
->
tg©e_
 * 5 * (
P¨aVÆue
));

254 
a˘iv©ed_
 = 
PARA_L
;

255 
	}
}

271 
ölöe
 
	gSimuœt‹
::
	$goodEvÆ
(c⁄° &
i
) {

273 c⁄° 
fi1
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 0 ? cú_->g©es_[i].
fis_
[0] : 0;

274 c⁄° 
fi2
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 1 ? cú_->g©es_[i].
fis_
[1] : 0;

275 c⁄° 
fi3
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 2 ? cú_->g©es_[i].
fis_
[2] : 0;

276 c⁄° 
fi4
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 3 ? cú_->g©es_[i].
fis_
[3] : 0;

278 c⁄° 
P¨aVÆue
 &
l1
 = 
cú_
->
g©es_
[
fi1
].
gl_
;

279 c⁄° 
P¨aVÆue
 &
h1
 = 
cú_
->
g©es_
[
fi1
].
gh_
;

280 c⁄° 
P¨aVÆue
 &
l2
 = 
cú_
->
g©es_
[
fi2
].
gl_
;

281 c⁄° 
P¨aVÆue
 &
h2
 = 
cú_
->
g©es_
[
fi2
].
gh_
;

282 c⁄° 
P¨aVÆue
 &
l3
 = 
cú_
->
g©es_
[
fi3
].
gl_
;

283 c⁄° 
P¨aVÆue
 &
h3
 = 
cú_
->
g©es_
[
fi3
].
gh_
;

284 c⁄° 
P¨aVÆue
 &
l4
 = 
cú_
->
g©es_
[
fi4
].
gl_
;

285 c⁄° 
P¨aVÆue
 &
h4
 = 
cú_
->
g©es_
[
fi4
].
gh_
;

287 
cú_
->
g©es_
[
i
].
ty≥_
) {

288 
G©e
::
INV
:

289 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
;

290 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
;

292 
G©e
::
PO
:

293 
G©e
::
PPO
:

294 
G©e
::
BUF
:

295 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
;

296 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
;

298 
G©e
::
AND2
:

299 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 | 
l2
;

300 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 & 
h2
;

302 
G©e
::
AND3
:

303 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 | 
l2
 | 
l3
;

304 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 & 
h2
 & 
h3
;

306 
G©e
::
AND4
:

307 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 | 
l2
 | 
l3
 | 
l4
;

308 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 & 
h2
 & 
h3
 & 
h4
;

310 
G©e
::
NAND2
:

311 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 & 
h2
;

312 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 | 
l2
;

314 
G©e
::
NAND3
:

315 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 & 
h2
 & 
h3
;

316 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 | 
l2
 | 
l3
;

318 
G©e
::
NAND4
:

319 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 & 
h2
 & 
h3
 & 
h4
;

320 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 | 
l2
 | 
l3
 | 
l4
;

322 
G©e
::
OR2
:

323 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 & 
l2
;

324 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 | 
h2
;

326 
G©e
::
OR3
:

327 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 & 
l2
 & 
l3
;

328 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 | 
h2
 | 
h3
;

330 
G©e
::
OR4
:

331 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
 & 
l2
 & 
l3
 & 
l4
;

332 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
 | 
h2
 | 
h3
 | 
h4
;

334 
G©e
::
NOR2
:

335 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 | 
h2
;

336 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 & 
l2
;

338 
G©e
::
NOR3
:

339 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 | 
h2
 | 
h3
;

340 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 & 
l2
 & 
l3
;

342 
G©e
::
NOR4
:

343 
cú_
->
g©es_
[
i
].
gl_
 = 
h1
 | 
h2
 | 
h3
 | 
h4
;

344 
cú_
->
g©es_
[
i
].
gh_
 = 
l1
 & 
l2
 & 
l3
 & 
l4
;

346 
G©e
::
XOR2
:

347 
cú_
->
g©es_
[
i
].
gl_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

348 
cú_
->
g©es_
[
i
].
gh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

350 
G©e
::
XOR3
:

351 
cú_
->
g©es_
[
i
].
gl_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

352 
cú_
->
g©es_
[
i
].
gl_
 = (cú_->g©es_[i].gl_ & 
l3
)

353 | (
cú_
->
g©es_
[
i
].
gh_
 & 
h3
);

354 
cú_
->
g©es_
[
i
].
gh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

355 
cú_
->
g©es_
[
i
].
gh_
 = (cú_->g©es_[i].
gl_
 & 
h3
)

356 | (
cú_
->
g©es_
[
i
].
gh_
 & 
l3
);

358 
G©e
::
XNOR2
:

359 
cú_
->
g©es_
[
i
].
gl_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

360 
cú_
->
g©es_
[
i
].
gh_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

362 
G©e
::
XNOR3
:

363 
cú_
->
g©es_
[
i
].
gl_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

364 
cú_
->
g©es_
[
i
].
gl_
 = (cú_->g©es_[i].gl_ & 
h3
)

365 | (
cú_
->
g©es_
[
i
].
gh_
 & 
l3
);

366 
cú_
->
g©es_
[
i
].
gh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

367 
cú_
->
g©es_
[
i
].
gh_
 = (cú_->g©es_[i].
gl_
 & 
l3
)

368 | (
cú_
->
g©es_
[
i
].
gh_
 & 
h3
);

370 
G©e
::
TIE1
:

371 
cú_
->
g©es_
[
i
].
gl_
 = 
PARA_L
;

372 
cú_
->
g©es_
[
i
].
gh_
 = 
PARA_H
;

374 
G©e
::
TIE0
:

375 
cú_
->
g©es_
[
i
].
gl_
 = 
PARA_H
;

376 
cú_
->
g©es_
[
i
].
gh_
 = 
PARA_L
;

378 
G©e
::
PPI
:

379 if(
cú_
->
c⁄nTy≥_
 =
Cúcuô
::
CAPTURE
 && cú_->
g©es_
[
i
].
‰ame_
 > 0){

380 
cú_
->
g©es_
[
i
].
gl_
 = 
l1
;

381 
cú_
->
g©es_
[
i
].
gh_
 = 
h1
;

387 
	}
}

400 
ölöe
 
	gSimuœt‹
::
	$Áu…EvÆ
(c⁄° &
i
) {

402 c⁄° 
fi1
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 0 ? cú_->g©es_[i].
fis_
[0] : 0;

403 c⁄° 
fi2
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 1 ? cú_->g©es_[i].
fis_
[1] : 0;

404 c⁄° 
fi3
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 2 ? cú_->g©es_[i].
fis_
[2] : 0;

405 c⁄° 
fi4
 = 
cú_
->
g©es_
[
i
].
nfi_
 > 3 ? cú_->g©es_[i].
fis_
[3] : 0;

407 c⁄° 
P¨aVÆue
 
l1
 = (
cú_
->
g©es_
[
fi1
].
Ê_
 & ~
Áu…Inje˘H_
[
i
][1])

408 | 
Áu…Inje˘L_
[
i
][1];

409 c⁄° 
P¨aVÆue
 
h1
 = (
cú_
->
g©es_
[
fi1
].
fh_
 & ~
Áu…Inje˘L_
[
i
][1])

410 | 
Áu…Inje˘H_
[
i
][1];

411 c⁄° 
P¨aVÆue
 
l2
 = (
cú_
->
g©es_
[
fi2
].
Ê_
 & ~
Áu…Inje˘H_
[
i
][2])

412 | 
Áu…Inje˘L_
[
i
][2];

413 c⁄° 
P¨aVÆue
 
h2
 = (
cú_
->
g©es_
[
fi2
].
fh_
 & ~
Áu…Inje˘L_
[
i
][2])

414 | 
Áu…Inje˘H_
[
i
][2];

415 c⁄° 
P¨aVÆue
 
l3
 = (
cú_
->
g©es_
[
fi3
].
Ê_
 & ~
Áu…Inje˘H_
[
i
][3])

416 | 
Áu…Inje˘L_
[
i
][3];

417 c⁄° 
P¨aVÆue
 
h3
 = (
cú_
->
g©es_
[
fi3
].
fh_
 & ~
Áu…Inje˘L_
[
i
][3])

418 | 
Áu…Inje˘H_
[
i
][3];

419 c⁄° 
P¨aVÆue
 
l4
 = (
cú_
->
g©es_
[
fi4
].
Ê_
 & ~
Áu…Inje˘H_
[
i
][4])

420 | 
Áu…Inje˘L_
[
i
][4];

421 c⁄° 
P¨aVÆue
 
h4
 = (
cú_
->
g©es_
[
fi4
].
fh_
 & ~
Áu…Inje˘L_
[
i
][4])

422 | 
Áu…Inje˘H_
[
i
][4];

424 
cú_
->
g©es_
[
i
].
ty≥_
) {

425 
G©e
::
INV
:

426 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
;

427 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
;

429 
G©e
::
PO
:

430 
G©e
::
PPO
:

431 
G©e
::
BUF
:

432 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
;

433 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
;

435 
G©e
::
AND2
:

436 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 | 
l2
;

437 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 & 
h2
;

439 
G©e
::
AND3
:

440 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 | 
l2
 | 
l3
;

441 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 & 
h2
 & 
h3
;

443 
G©e
::
AND4
:

444 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 | 
l2
 | 
l3
 | 
l4
;

445 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 & 
h2
 & 
h3
 & 
h4
;

447 
G©e
::
NAND2
:

448 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 & 
h2
;

449 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 | 
l2
;

451 
G©e
::
NAND3
:

452 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 & 
h2
 & 
h3
;

453 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 | 
l2
 | 
l3
;

455 
G©e
::
NAND4
:

456 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 & 
h2
 & 
h3
 & 
h4
;

457 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 | 
l2
 | 
l3
 | 
l4
;

459 
G©e
::
OR2
:

460 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 & 
l2
;

461 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 | 
h2
;

463 
G©e
::
OR3
:

464 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 & 
l2
 & 
l3
;

465 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 | 
h2
 | 
h3
;

467 
G©e
::
OR4
:

468 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
 & 
l2
 & 
l3
 & 
l4
;

469 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
 | 
h2
 | 
h3
 | 
h4
;

471 
G©e
::
NOR2
:

472 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 | 
h2
;

473 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 & 
l2
;

475 
G©e
::
NOR3
:

476 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 | 
h2
 | 
h3
;

477 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 & 
l2
 & 
l3
;

479 
G©e
::
NOR4
:

480 
cú_
->
g©es_
[
i
].
Ê_
 = 
h1
 | 
h2
 | 
h3
 | 
h4
;

481 
cú_
->
g©es_
[
i
].
fh_
 = 
l1
 & 
l2
 & 
l3
 & 
l4
;

483 
G©e
::
XOR2
:

484 
cú_
->
g©es_
[
i
].
Ê_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

485 
cú_
->
g©es_
[
i
].
fh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

487 
G©e
::
XOR3
:

488 
cú_
->
g©es_
[
i
].
Ê_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

489 
cú_
->
g©es_
[
i
].
Ê_
 = (cú_->g©es_[i].Ê_ & 
l3
)

490 | (
cú_
->
g©es_
[
i
].
fh_
 & 
h3
);

491 
cú_
->
g©es_
[
i
].
fh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

492 
cú_
->
g©es_
[
i
].
fh_
 = (cú_->g©es_[i].
Ê_
 & 
h3
)

493 | (
cú_
->
g©es_
[
i
].
fh_
 & 
l3
);

495 
G©e
::
XNOR2
:

496 
cú_
->
g©es_
[
i
].
Ê_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

497 
cú_
->
g©es_
[
i
].
fh_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

499 
G©e
::
XNOR3
:

500 
cú_
->
g©es_
[
i
].
Ê_
 = (
l1
 & 
l2
Ë| (
h1
 & 
h2
);

501 
cú_
->
g©es_
[
i
].
Ê_
 = (cú_->g©es_[i].Ê_ & 
h3
)

502 | (
cú_
->
g©es_
[
i
].
fh_
 & 
l3
);

503 
cú_
->
g©es_
[
i
].
fh_
 = (
l1
 & 
h2
Ë| (
h1
 & 
l2
);

504 
cú_
->
g©es_
[
i
].
fh_
 = (cú_->g©es_[i].
Ê_
 & 
l3
)

505 | (
cú_
->
g©es_
[
i
].
fh_
 & 
h3
);

507 
G©e
::
TIE1
:

508 
cú_
->
g©es_
[
i
].
Ê_
 = 
PARA_L
;

509 
cú_
->
g©es_
[
i
].
fh_
 = 
PARA_H
;

511 
G©e
::
TIE0
:

512 
cú_
->
g©es_
[
i
].
Ê_
 = 
PARA_H
;

513 
cú_
->
g©es_
[
i
].
fh_
 = 
PARA_L
;

515 
G©e
::
PPI
:

516 if(
cú_
->
c⁄nTy≥_
 =
Cúcuô
::
CAPTURE
 && cú_->
g©es_
[
i
].
‰ame_
 > 0){

517 
cú_
->
g©es_
[
i
].
Ê_
 = 
l1
;

518 
cú_
->
g©es_
[
i
].
fh_
 = 
h1
;

524 
cú_
->
g©es_
[
i
].
Ê_
 = (cú_->g©es_[i].Ê_ & ~
Áu…Inje˘H_
[i][0])

525 | 
Áu…Inje˘L_
[
i
][0];

526 
cú_
->
g©es_
[
i
].
fh_
 = (cú_->g©es_[i].fh_ & ~
Áu…Inje˘L_
[i][0])

527 | 
Áu…Inje˘H_
[
i
][0];

528 
	}
}

	@interface/lib/dbg/lex_n_yacc/lht_pat_file.tab.cpp

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

67 
	#yy∑r£
 
lht_∑t_fûï¨£


	)

68 
	#yyÀx
 
lht_∑t_fûñex


	)

69 
	#yyîr‹
 
lht_∑t_fûìº‹


	)

70 
	#yylvÆ
 
lht_∑t_fûñvÆ


	)

71 
	#yych¨
 
lht_∑t_fûech¨


	)

72 
	#yydebug
 
lht_∑t_fûedebug


	)

73 
	#yy√ºs
 
lht_∑t_fûíîrs


	)

88 
	#YYPARSE_PARAM
 
∑øm


	)

90 
	~<c°dio
>

91 
	~<c°rög
>

93 
	~"lht_∑t_fûe.h
"

95 
usög
 
«me•a˚
 
	g°d
;

96 
usög
 
«me•a˚
 
	gI¡fNs
;

98 *
lht_∑t_fûëext
;

99 
lht_∑t_fûñöe
;

100 
lht_∑t_fûñex
();

102 
lht_∑t_fûìº‹
(c⁄° *
msg
);

104 
LhtP©Fûe
 *
	glht_∑t
;

112 #i‚de‡
YYDEBUG


113 
	#YYDEBUG
 0

	)

117 #ifde‡
YYERROR_VERBOSE


118 #unde‡
YYERROR_VERBOSE


119 
	#YYERROR_VERBOSE
 1

	)

121 
	#YYERROR_VERBOSE
 0

	)

125 #i‚de‡
YYTOKEN_TABLE


126 
	#YYTOKEN_TABLE
 0

	)

131 #i‚de‡
YYTOKENTYPE


132 
	#YYTOKENTYPE


	)

135 
	eyytokíty≥
 {

136 
	mPATTERN
 = 258,

137 
	mVALUE
 = 259,

138 
	mPATTERN_TYPE
 = 260

144 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


145 
	uYYSTYPE


151 *
	mych¨
;

152 
	mI¡fNs
::
P©Ty≥
 
y∑tTy≥
;

158 } 
	tYYSTYPE
;

159 
	#YYSTYPE_IS_TRIVIAL
 1

	)

160 
	#yy°y≥
 
YYSTYPE


	)

161 
	#YYSTYPE_IS_DECLARED
 1

	)

175 #ifde‡
YYTYPE_UINT8


176 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

178 
	tyyty≥_uöt8
;

181 #ifde‡
YYTYPE_INT8


182 
YYTYPE_INT8
 
	tyyty≥_öt8
;

183 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

184 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

185 sig√d 
	tyyty≥_öt8
;

187 
	tyyty≥_öt8
;

190 #ifde‡
YYTYPE_UINT16


191 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

193 
	tyyty≥_uöt16
;

196 #ifde‡
YYTYPE_INT16


197 
YYTYPE_INT16
 
	tyyty≥_öt16
;

199 
	tyyty≥_öt16
;

202 #i‚de‡
YYSIZE_T


203 #ifde‡
__SIZE_TYPE__


204 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

205 #ñi‡
deföed
 
size_t


206 
	#YYSIZE_T
 
size_t


	)

207 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

208 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

209 
	~<°ddef.h
>

210 
	#YYSIZE_T
 
size_t


	)

212 
	#YYSIZE_T
 

	)

216 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

218 #i‚de‡
YY_


219 #i‡
YYENABLE_NLS


220 #i‡
ENABLE_NLS


221 
	~<liböé.h
>

222 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

225 #i‚de‡
YY_


226 
	#YY_
(
msgid
Ë
	)
msgid

231 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


232 
	#YYUSE
(
e
Ë((Ë”))

	)

234 
	#YYUSE
(
e
Ë

	)

238 #i‚de‡
löt


239 
	#YYID
(
n
Ë“)

	)

241 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

242 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

244 
	$YYID
 (
yyi
)

247 
	$YYID
 (
yyi
)

248 
yyi
;

251  
yyi
;

252 
	}
}

255 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


259 #ifde‡
YYSTACK_USE_ALLOCA


260 #i‡
YYSTACK_USE_ALLOCA


261 #ifde‡
__GNUC__


262 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

263 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


264 
	~<Æloˇ.h
>

265 #ñi‡
deföed
 
_AIX


266 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

267 #ñi‡
deföed
 
_MSC_VER


268 
	~<mÆloc.h
>

269 
	#Æloˇ
 
_Æloˇ


	)

271 
	#YYSTACK_ALLOC
 
Æloˇ


	)

272 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

273 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

274 
	~<°dlib.h
>

275 #i‚de‡
_STDLIB_H


276 
	#_STDLIB_H
 1

	)

283 #ifde‡
YYSTACK_ALLOC


285 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

286 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


291 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

294 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

295 
	#YYSTACK_FREE
 
YYFREE


	)

296 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


297 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

299 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

300 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

301 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

302 
	~<°dlib.h
>

303 #i‚de‡
_STDLIB_H


304 
	#_STDLIB_H
 1

	)

307 #i‚de‡
YYMALLOC


308 
	#YYMALLOC
 
mÆloc


	)

309 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

310 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

311 *
mÆloc
 (
YYSIZE_T
);

314 #i‚de‡
YYFREE


315 
	#YYFREE
 
‰ì


	)

316 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

317 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

318 
‰ì
 (*);

325 #i‡(! 
deföed
 
yyovîÊow
 \

326 && (! 
deföed
 
	g__˝lu•lus
 \

327 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

330 
	uyyÆloc


332 
yyty≥_öt16
 
	myyss_Æloc
;

333 
YYSTYPE
 
	myyvs_Æloc
;

337 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

341 
	#YYSTACK_BYTES
(
N
) \

342 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

343 + 
YYSTACK_GAP_MAXIMUM
)

	)

347 #i‚de‡
YYCOPY


348 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

349 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

350 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

352 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

355 
YYSIZE_T
 
yyi
; \

356 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

357 (
To
)[
yyi
] = (
From
)[yyi]; \

359 
	`YYID
 (0))

	)

368 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

371 
YYSIZE_T
 
yy√wbyãs
; \

372 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

373 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

374 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

375 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

377 
	`YYID
 (0))

	)

382 
	#YYFINAL
 3

	)

384 
	#YYLAST
 27

	)

387 
	#YYNTOKENS
 11

	)

389 
	#YYNNTS
 6

	)

391 
	#YYNRULES
 10

	)

393 
	#YYNSTATES
 31

	)

396 
	#YYUNDEFTOK
 2

	)

397 
	#YYMAXUTOK
 260

	)

399 
	#YYTRANSLATE
(
YYX
) \

400 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

403 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

434 #i‡
YYDEBUG


437 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

444 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

454 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

461 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


464 c⁄° *c⁄° 
	gyyäame
[] =

472 #ifde‡
YYPRINT


475 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

483 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

490 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

499 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

508 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

515 
	#YYPACT_NINF
 -17

	)

516 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

525 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

534 
	#YYTABLE_NINF
 -1

	)

535 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

542 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

551 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

559 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

560 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

561 
	#YYEMPTY
 (-2)

	)

562 
	#YYEOF
 0

	)

564 
	#YYACCEPT
 
yyac˚±œb


	)

565 
	#YYABORT
 
yyab‹éab


	)

566 
	#YYERROR
 
yyîr‹œb


	)

573 
	#YYFAIL
 
yyîæab


	)

575 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

577 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

579 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

581 
yych¨
 = (
Tokí
); \

582 
yylvÆ
 = (
VÆue
); \

583 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

584 
	`YYPOPSTACK
 (1); \

585 
yybackup
; \

589 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

590 
YYERROR
; \

592 
	`YYID
 (0))

	)

595 
	#YYTERROR
 1

	)

596 
	#YYERRCODE
 256

	)

603 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

604 #i‚de‡
YYLLOC_DEFAULT


605 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

607 i‡(
	`YYID
 (
N
)) \

609 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

610 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

611 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

612 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

616 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

617 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

618 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

619 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

621 
	`YYID
 (0))

	)

629 #i‚de‡
YY_LOCATION_PRINT


630 #i‡
YYLTYPE_IS_TRIVIAL


631 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

632 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

633 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

634 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

636 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

643 #ifde‡
YYLEX_PARAM


644 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

646 
	#YYLEX
 
	`yyÀx
 ()

	)

650 #i‡
YYDEBUG


652 #i‚de‡
YYFPRINTF


653 
	~<°dio.h
>

654 
	#YYFPRINTF
 
Ârötf


	)

657 
	#YYDPRINTF
(
Args
) \

659 i‡(
yydebug
) \

660 
YYFPRINTF
 
Args
; \

661 } 
	`YYID
 (0))

	)

663 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

665 i‡(
yydebug
) \

667 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

668 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

669 
Ty≥
, 
VÆue
); \

670 
	`YYFPRINTF
 (
°dîr
, "\n"); \

672 } 
	`YYID
 (0))

	)

680 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

681 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

683 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

686 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

687 
FILE
 *
yyouçut
;

688 
yyty≥
;

689 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

692 i‡(!
yyvÆuï
)

694 #ifde‡
YYPRINT


695 i‡(
yyty≥
 < 
YYNTOKENS
)

696 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

698 
	`YYUSE
 (
yyouçut
);

700 
yyty≥
)

705 
	}
}

712 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

713 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

715 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

718 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

719 
FILE
 *
yyouçut
;

720 
yyty≥
;

721 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

724 i‡(
yyty≥
 < 
YYNTOKENS
)

725 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

727 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

729 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

730 
	`YYFPRINTF
 (
yyouçut
, ")");

731 
	}
}

738 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

739 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

741 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

744 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

745 
yyty≥_öt16
 *
yybŸtom
;

746 
yyty≥_öt16
 *
yyt›
;

749 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

750 ; 
yybŸtom
 <
yyt›
; yybottom++)

752 
yybŸ
 = *
yybŸtom
;

753 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

755 
	`YYFPRINTF
 (
°dîr
, "\n");

756 
	}
}

758 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

760 i‡(
yydebug
) \

761 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

762 } 
	`YYID
 (0))

	)

769 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

770 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

772 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

775 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

776 
YYSTYPE
 *
yyv•
;

777 
yyruÀ
;

780 
yyƒhs
 = 
yyr2
[
yyruÀ
];

781 
yyi
;

782 
yy o
 = 
yyæöe
[
yyruÀ
];

783 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

784 
yyruÀ
 - 1, 
yy o
);

786 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

788 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

789 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

790 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

792 
	`YYFPRINTF
 (
°dîr
, "\n");

794 
	}
}

796 
	#YY_REDUCE_PRINT
(
RuÀ
) \

798 i‡(
yydebug
) \

799 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

800 } 
	`YYID
 (0))

	)

804 
	gyydebug
;

806 
	#YYDPRINTF
(
Args
)

	)

807 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

808 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

809 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

814 #i‚def 
YYINITDEPTH


815 
	#YYINITDEPTH
 200

	)

825 #i‚de‡
YYMAXDEPTH


826 
	#YYMAXDEPTH
 10000

	)

831 #i‡
YYERROR_VERBOSE


833 #i‚de‡
yy°æí


834 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


835 
	#yy°æí
 
°æí


	)

838 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

839 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

840 
YYSIZE_T


841 
	$yy°æí
 (c⁄° *
yy°r
)

843 
YYSIZE_T


844 
	$yy°æí
 (
yy°r
)

845 c⁄° *
yy°r
;

848 
YYSIZE_T
 
yyÀn
;

849 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

851  
yyÀn
;

852 
	}
}

856 #i‚de‡
yy°p˝y


857 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


858 
	#yy°p˝y
 
°p˝y


	)

862 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

863 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

865 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

868 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

869 *
yyde°
;

870 c⁄° *
yy§c
;

873 *
yyd
 = 
yyde°
;

874 c⁄° *
yys
 = 
yy§c
;

876 (*
yyd
++ = *
yys
++) != '\0')

879  
yyd
 - 1;

880 
	}
}

884 #i‚de‡
yyäamîr


892 
YYSIZE_T


893 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

895 i‡(*
yy°r
 == '"')

897 
YYSIZE_T
 
yyn
 = 0;

898 c⁄° *
yyp
 = 
yy°r
;

901 *++
yyp
)

905 
do_nŸ_°rù_quŸes
;

908 i‡(*++
yyp
 != '\\')

909 
do_nŸ_°rù_quŸes
;

912 i‡(
yyªs
)

913 
yyªs
[
yyn
] = *
yyp
;

914 
yyn
++;

918 i‡(
yyªs
)

919 
yyªs
[
yyn
] = '\0';

920  
yyn
;

922 
do_nŸ_°rù_quŸes
: ;

925 i‡(! 
yyªs
)

926  
	`yy°æí
 (
yy°r
);

928  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

929 
	}
}

939 
YYSIZE_T


940 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

942 
yyn
 = 
yy∑˘
[
yy°©e
];

944 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

948 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

949 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

950 
YYSIZE_T
 
yysize
 = 
yysize0
;

951 
YYSIZE_T
 
yysize1
;

952 
yysize_ovîÊow
 = 0;

953 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

954 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

955 
yyx
;

960 
	`YY_
("syntaxÉrror, unexpected %s");

961 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

962 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

963 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

964 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

966 *
yyfmt
;

967 c⁄° *
yyf
;

968 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

969 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

970 c⁄° 
yy‹
[] = " or %s";

971 
yyf‹m©
[ 
yyu√x≥˘ed


972 +  
yyex≥˘ög
 - 1

973 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

974 * ( 
yy‹
 - 1))];

975 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

979 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

982 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

983 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

984 
yycou¡
 = 1;

986 
yy¨g
[0] = 
yyäame
[
yyty≥
];

987 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

989 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

990 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

992 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

994 
yycou¡
 = 1;

995 
yysize
 = 
yysize0
;

996 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

999 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1000 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1001 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1002 
yysize
 = 
yysize1
;

1003 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1004 
yy¥efix
 = 
yy‹
;

1007 
yyf
 = 
	`YY_
(
yyf‹m©
);

1008 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1009 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1010 
yysize
 = 
yysize1
;

1012 i‡(
yysize_ovîÊow
)

1013  
YYSIZE_MAXIMUM
;

1015 i‡(
yyªsu…
)

1020 *
yyp
 = 
yyªsu…
;

1021 
yyi
 = 0;

1022 (*
yyp
 = *
yyf
) != '\0')

1024 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1026 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1027 
yyf
 += 2;

1031 
yyp
++;

1032 
yyf
++;

1036  
yysize
;

1038 
	}
}

1047 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1048 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1050 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1053 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1054 c⁄° *
yymsg
;

1055 
yyty≥
;

1056 
YYSTYPE
 *
yyvÆuï
;

1059 
	`YYUSE
 (
yyvÆuï
);

1061 i‡(!
yymsg
)

1062 
yymsg
 = "Deleting";

1063 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1065 
yyty≥
)

1071 
	}
}

1074 #ifde‡
YYPARSE_PARAM


1075 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1076 
yy∑r£
 (*
YYPARSE_PARAM
);

1078 
yy∑r£
 ();

1081 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1082 
yy∑r£
 ();

1084 
yy∑r£
 ();

1090 
	gyych¨
;

1093 
YYSTYPE
 
	gyylvÆ
;

1096 
	gyy√ºs
;

1104 #ifde‡
YYPARSE_PARAM


1105 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1106 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1108 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1111 
	$yy∑r£
 (
YYPARSE_PARAM
)

1112 *
YYPARSE_PARAM
;

1115 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1116 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1118 
	$yy∑r£
 ()

1121 
	$yy∑r£
 ()

1128 
yy°©e
;

1130 
yyîr°©us
;

1140 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1141 
yyty≥_öt16
 *
yyss
;

1142 
yyty≥_öt16
 *
yys•
;

1145 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1146 
YYSTYPE
 *
yyvs
;

1147 
YYSTYPE
 *
yyv•
;

1149 
YYSIZE_T
 
yy°acksize
;

1151 
yyn
;

1152 
yyªsu…
;

1154 
yytokí
;

1157 
YYSTYPE
 
yyvÆ
;

1159 #i‡
YYERROR_VERBOSE


1161 
yymsgbuf
[128];

1162 *
yymsg
 = 
yymsgbuf
;

1163 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1166 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1170 
yyÀn
 = 0;

1172 
yytokí
 = 0;

1173 
yyss
 = 
yysß
;

1174 
yyvs
 = 
yyvß
;

1175 
yy°acksize
 = 
YYINITDEPTH
;

1177 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1179 
yy°©e
 = 0;

1180 
yyîr°©us
 = 0;

1181 
yy√ºs
 = 0;

1182 
yych¨
 = 
YYEMPTY
;

1188 
yys•
 = 
yyss
;

1189 
yyv•
 = 
yyvs
;

1191 
yy£t°©e
;

1196 
yy√w°©e
:

1199 
yys•
++;

1201 
yy£t°©e
:

1202 *
yys•
 = 
yy°©e
;

1204 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1207 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1209 #ifde‡
yyovîÊow


1214 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1215 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1221 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1222 &
yyss1
, 
yysize
 *  (*
yys•
),

1223 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1224 &
yy°acksize
);

1226 
yyss
 = 
yyss1
;

1227 
yyvs
 = 
yyvs1
;

1230 #i‚de‡
YYSTACK_RELOCATE


1231 
yyexhau°edœb
;

1234 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1235 
yyexhau°edœb
;

1236 
yy°acksize
 *= 2;

1237 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1238 
yy°acksize
 = 
YYMAXDEPTH
;

1241 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1242 
yyÆloc
 *
yy±r
 =

1243 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1244 i‡(! 
yy±r
)

1245 
yyexhau°edœb
;

1246 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1247 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1248 #unde‡
YYSTACK_RELOCATE


1249 i‡(
yyss1
 !
yysß
)

1250 
	`YYSTACK_FREE
 (
yyss1
);

1255 
yys•
 = 
yyss
 + 
yysize
 - 1;

1256 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1258 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1259 (Ë
yy°acksize
));

1261 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1262 
YYABORT
;

1265 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1267 i‡(
yy°©e
 =
YYFINAL
)

1268 
YYACCEPT
;

1270 
yybackup
;

1275 
yybackup
:

1281 
yyn
 = 
yy∑˘
[
yy°©e
];

1282 i‡(
yyn
 =
YYPACT_NINF
)

1283 
yydeÁu…
;

1288 i‡(
yych¨
 =
YYEMPTY
)

1290 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1291 
yych¨
 = 
YYLEX
;

1294 i‡(
yych¨
 <
YYEOF
)

1296 
yych¨
 = 
yytokí
 = 
YYEOF
;

1297 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1301 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1302 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1307 
yyn
 +
yytokí
;

1308 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1309 
yydeÁu…
;

1310 
yyn
 = 
yyèbÀ
[yyn];

1311 i‡(
yyn
 <= 0)

1313 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1314 
yyîæab
;

1315 
yyn
 = -yyn;

1316 
yyªdu˚
;

1321 i‡(
yyîr°©us
)

1322 
yyîr°©us
--;

1325 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1328 
yych¨
 = 
YYEMPTY
;

1330 
yy°©e
 = 
yyn
;

1331 *++
yyv•
 = 
yylvÆ
;

1333 
yy√w°©e
;

1339 
yydeÁu…
:

1340 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1341 i‡(
yyn
 == 0)

1342 
yyîæab
;

1343 
yyªdu˚
;

1349 
yyªdu˚
:

1351 
yyÀn
 = 
yyr2
[
yyn
];

1361 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1364 
	`YY_REDUCE_PRINT
 (
yyn
);

1365 
yyn
)

1371 { 
lht_∑t
 = (
LhtP©Fûe
 *)(
∑øm
); ;}

1379 
lht_∑t
->
	`£tP©ã∫Ty≥
(
I¡fNs
::
BASIC_SCAN
);

1380 
lht_∑t
->
	`addP©ã∫
((
yyv•
[(2Ë- (8)].
ych¨
), 
NULL
, (yyvsp[(4) - (8)].ychar), NULL, (yyvsp[(6) - (8)].ychar), NULL, (yyvsp[(8) - (8)].ychar));

1381 
dñëe
 [] (
yyv•
[(2Ë- (8)].
ych¨
);

1382 
dñëe
 [] (
yyv•
[(4Ë- (8)].
ych¨
);

1383 
dñëe
 [] (
yyv•
[(6Ë- (8)].
ych¨
);

1384 
dñëe
 [] (
yyv•
[(8Ë- (8)].
ych¨
);

1393 
lht_∑t
->
	`£tP©ã∫Ty≥
(
I¡fNs
::
LAUNCH_SHIFT
);

1394 
lht_∑t
->
	`addP©ã∫
((
yyv•
[(2Ë- (13)].
ych¨
), (yyv•[(5Ë- (13)].ych¨), (yyv•[(7Ë- (13)].ych¨), (yyv•[(9Ë- (13)].ych¨), 
NULL
, (yyvsp[(11) - (13)].ychar), (yyvsp[(13) - (13)].ychar));

1395 
dñëe
 [] (
yyv•
[(2Ë- (13)].
ych¨
);

1396 
dñëe
 [] (
yyv•
[(5Ë- (13)].
ych¨
);

1397 
dñëe
 [] (
yyv•
[(7Ë- (13)].
ych¨
);

1398 
dñëe
 [] (
yyv•
[(9Ë- (13)].
ych¨
);

1399 
dñëe
 [] (
yyv•
[(11Ë- (13)].
ych¨
);

1400 
dñëe
 [] (
yyv•
[(13Ë- (13)].
ych¨
);

1409 
lht_∑t
->
	`£tP©ã∫Ty≥
(
I¡fNs
::
LAUNCH_CAPTURE
);

1410 
lht_∑t
->
	`addP©ã∫
((
yyv•
[(2Ë- (11)].
ych¨
), (yyv•[(5Ë- (11)].ych¨), (yyv•[(7Ë- (11)].ych¨), 
NULL
, NULL, (yyvsp[(9) - (11)].ychar), (yyvsp[(11) - (11)].ychar));

1411 
dñëe
 [] (
yyv•
[(2Ë- (11)].
ych¨
);

1412 
dñëe
 [] (
yyv•
[(5Ë- (11)].
ych¨
);

1413 
dñëe
 [] (
yyv•
[(7Ë- (11)].
ych¨
);

1414 
dñëe
 [] (
yyv•
[(9Ë- (11)].
ych¨
);

1415 
dñëe
 [] (
yyv•
[(11Ë- (11)].
ych¨
);

1423 { (
yyvÆ
.
ych¨
Ë(
yyv•
[(1) - (1)].ychar); ;}

1430 { (
yyvÆ
.
ych¨
Ë
NULL
; ;}

1439 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1441 
	`YYPOPSTACK
 (
yyÀn
);

1442 
yyÀn
 = 0;

1443 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1445 *++
yyv•
 = 
yyvÆ
;

1451 
yyn
 = 
yyr1
[yyn];

1453 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1454 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1455 
yy°©e
 = 
yyèbÀ
[yystate];

1457 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1459 
yy√w°©e
;

1465 
yyîæab
:

1467 i‡(!
yyîr°©us
)

1469 ++
yy√ºs
;

1470 #i‡! 
YYERROR_VERBOSE


1471 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1474 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1475 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1477 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1478 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1479 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1480 i‡(
yymsg
 !
yymsgbuf
)

1481 
	`YYSTACK_FREE
 (
yymsg
);

1482 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1483 i‡(
yymsg
)

1484 
yymsg_Æloc
 = 
yyÆloc
;

1487 
yymsg
 = 
yymsgbuf
;

1488 
yymsg_Æloc
 =  
yymsgbuf
;

1492 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1494 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1495 
	`yyîr‹
 (
yymsg
);

1499 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1500 i‡(
yysize
 != 0)

1501 
yyexhau°edœb
;

1509 i‡(
yyîr°©us
 == 3)

1514 i‡(
yych¨
 <
YYEOF
)

1517 i‡(
yych¨
 =
YYEOF
)

1518 
YYABORT
;

1522 
	`yyde°ru˘
 ("Error: discarding",

1523 
yytokí
, &
yylvÆ
);

1524 
yych¨
 = 
YYEMPTY
;

1530 
yyîæab1
;

1536 
yyîr‹œb
:

1542 
yyîr‹œb
;

1546 
	`YYPOPSTACK
 (
yyÀn
);

1547 
yyÀn
 = 0;

1548 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1549 
yy°©e
 = *
yys•
;

1550 
yyîæab1
;

1556 
yyîæab1
:

1557 
yyîr°©us
 = 3;

1561 
yyn
 = 
yy∑˘
[
yy°©e
];

1562 i‡(
yyn
 !
YYPACT_NINF
)

1564 
yyn
 +
YYTERROR
;

1565 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1567 
yyn
 = 
yyèbÀ
[yyn];

1568 i‡(0 < 
yyn
)

1574 i‡(
yys•
 =
yyss
)

1575 
YYABORT
;

1578 
	`yyde°ru˘
 ("Error:Öopping",

1579 
yy°os
[
yy°©e
], 
yyv•
);

1580 
	`YYPOPSTACK
 (1);

1581 
yy°©e
 = *
yys•
;

1582 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1585 *++
yyv•
 = 
yylvÆ
;

1589 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1591 
yy°©e
 = 
yyn
;

1592 
yy√w°©e
;

1598 
yyac˚±œb
:

1599 
yyªsu…
 = 0;

1600 
yyªtu∫
;

1605 
yyab‹éab
:

1606 
yyªsu…
 = 1;

1607 
yyªtu∫
;

1609 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


1613 
yyexhau°edœb
:

1614 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1615 
yyªsu…
 = 2;

1619 
yyªtu∫
:

1620 i‡(
yych¨
 !
YYEMPTY
)

1621 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1622 
yytokí
, &
yylvÆ
);

1625 
	`YYPOPSTACK
 (
yyÀn
);

1626 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1627 
yys•
 !
yyss
)

1629 
	`yyde°ru˘
 ("Cleanup:Öopping",

1630 
yy°os
[*
yys•
], 
yyv•
);

1631 
	`YYPOPSTACK
 (1);

1633 #i‚de‡
yyovîÊow


1634 i‡(
yyss
 !
yysß
)

1635 
	`YYSTACK_FREE
 (
yyss
);

1637 #i‡
YYERROR_VERBOSE


1638 i‡(
yymsg
 !
yymsgbuf
)

1639 
	`YYSTACK_FREE
 (
yymsg
);

1642  
	`YYID
 (
yyªsu…
);

1643 
	}
}

1651 
	$lht_∑t_fûìº‹
(c⁄° *
msg
) {

1652 
	`Ârötf
(
°dîr
, "**ERRORÖat_fileerror(): ");

1653 
	`Ârötf
(
°dîr
, "Aàlöê%d. ", 
lht_∑t_fûñöe
);

1654 
	`Ârötf
(
°dîr
, "Nó∏`%s'. %s\n", 
lht_∑t_fûëext
, 
msg
);

1655 
	}
}

	@interface/lib/dbg/lex_n_yacc/lht_pat_file.tab.hpp

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mPATTERN
 = 258,

43 
	mVALUE
 = 259,

44 
	mPATTERN_TYPE
 = 260

50 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


51 
	uYYSTYPE


57 *
	mych¨
;

58 
	mI¡fNs
::
P©Ty≥
 
y∑tTy≥
;

64 } 
	tYYSTYPE
;

65 
	#YYSTYPE_IS_TRIVIAL
 1

	)

66 
	#yy°y≥
 
YYSTYPE


	)

67 
	#YYSTYPE_IS_DECLARED
 1

	)

70 
YYSTYPE
 
lht_∑t_fûñvÆ
;

	@interface/lib/dbg/lex_n_yacc/lht_pat_file.yy.cpp

5 
	#YY_INT_ALIGNED
 

	)

9 
	#yy_¸óã_buf„r
 
lht_∑t_fûe_¸óã_buf„r


	)

10 
	#yy_dñëe_buf„r
 
lht_∑t_fûe_dñëe_buf„r


	)

11 
	#yy_Êex_debug
 
lht_∑t_fûe_Êex_debug


	)

12 
	#yy_öô_buf„r
 
lht_∑t_fûe_öô_buf„r


	)

13 
	#yy_Êush_buf„r
 
lht_∑t_fûe_Êush_buf„r


	)

14 
	#yy_lﬂd_buf„r_°©e
 
lht_∑t_fûe_lﬂd_buf„r_°©e


	)

15 
	#yy_swôch_to_buf„r
 
lht_∑t_fûe_swôch_to_buf„r


	)

16 
	#yyö
 
lht_∑t_fûeö


	)

17 
	#yyÀng
 
lht_∑t_fûñíg


	)

18 
	#yyÀx
 
lht_∑t_fûñex


	)

19 
	#yylöío
 
lht_∑t_fûñöío


	)

20 
	#yyout
 
lht_∑t_fûeout


	)

21 
	#yyª°¨t
 
lht_∑t_fûîe°¨t


	)

22 
	#yyãxt
 
lht_∑t_fûëext


	)

23 
	#yywøp
 
lht_∑t_fûewøp


	)

24 
	#yyÆloc
 
lht_∑t_fûóŒoc


	)

25 
	#yyªÆloc
 
lht_∑t_fûîóŒoc


	)

26 
	#yy‰ì
 
lht_∑t_fûe‰ì


	)

28 
	#FLEX_SCANNER


	)

29 
	#YY_FLEX_MAJOR_VERSION
 2

	)

30 
	#YY_FLEX_MINOR_VERSION
 5

	)

31 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

32 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

33 
	#FLEX_BETA


	)

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<°dlib.h
>

48 #i‚de‡
FLEXINT_H


49 
	#FLEXINT_H


	)

53 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

58 #i‚de‡
__STDC_LIMIT_MACROS


59 
	#__STDC_LIMIT_MACROS
 1

	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	tÊex_öt8_t
;

64 
uöt8_t
 
	tÊex_uöt8_t
;

65 
öt16_t
 
	tÊex_öt16_t
;

66 
uöt16_t
 
	tÊex_uöt16_t
;

67 
öt32_t
 
	tÊex_öt32_t
;

68 
uöt32_t
 
	tÊex_uöt32_t
;

70 sig√d 
	tÊex_öt8_t
;

71 
	tÊex_öt16_t
;

72 
	tÊex_öt32_t
;

73 
	tÊex_uöt8_t
;

74 
	tÊex_uöt16_t
;

75 
	tÊex_uöt32_t
;

79 #i‚de‡
INT8_MIN


80 
	#INT8_MIN
 (-128)

	)

82 #i‚de‡
INT16_MIN


83 
	#INT16_MIN
 (-32767-1)

	)

85 #i‚de‡
INT32_MIN


86 
	#INT32_MIN
 (-2147483647-1)

	)

88 #i‚de‡
INT8_MAX


89 
	#INT8_MAX
 (127)

	)

91 #i‚de‡
INT16_MAX


92 
	#INT16_MAX
 (32767)

	)

94 #i‚de‡
INT32_MAX


95 
	#INT32_MAX
 (2147483647)

	)

97 #i‚de‡
UINT8_MAX


98 
	#UINT8_MAX
 (255U)

	)

100 #i‚de‡
UINT16_MAX


101 
	#UINT16_MAX
 (65535U)

	)

103 #i‚de‡
UINT32_MAX


104 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`lht_∑t_fûîe°¨t
(
lht_∑t_fûeö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 
lht_∑t_fûñíg
;

177 
FILE
 *
lht_∑t_fûeö
, *
lht_∑t_fûeout
;

179 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

180 
	#EOB_ACT_END_OF_FILE
 1

	)

181 
	#EOB_ACT_LAST_MATCH
 2

	)

183 
	#YY_LESS_LINENO
(
n
)

	)

186 
	#yyÀss
(
n
) \

190 
yyÀss_ma¸o_¨g
 = (
n
); \

191 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

192 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

193 
YY_RESTORE_YY_MORE_OFFSET
 \

194 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

195 
YY_DO_BEFORE_ACTION
; \

197  0 )

	)

199 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

201 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


202 
	#YY_TYPEDEF_YY_SIZE_T


	)

203 
size_t
 
	tyy_size_t
;

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
	gyy_n_ch¨s
;

294 
	glht_∑t_fûñíg
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
lht_∑t_fûîe°¨t
 (
FILE
 *
öput_fûe
 );

307 
lht_∑t_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
lht_∑t_fûe_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
lht_∑t_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
lht_∑t_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
lht_∑t_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
lht_∑t_fûï›_buf„r_°©e
 ();

314 
lht_∑t_fûìnsuª_buf„r_°ack
 ();

315 
lht_∑t_fûe_lﬂd_buf„r_°©e
 ();

316 
lht_∑t_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`lht_∑t_fûe_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
lht_∑t_fûe_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
lht_∑t_fûe_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
lht_∑t_fûe_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

324 *
lht_∑t_fûóŒoc
 (
yy_size_t
 );

325 *
lht_∑t_fûîóŒoc
 (*,
yy_size_t
 );

326 
lht_∑t_fûe‰ì
 (* );

328 
	#yy_√w_buf„r
 
lht_∑t_fûe_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`lht_∑t_fûìnsuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`lht_∑t_fûe_¸óã_buf„r
(
lht_∑t_fûeö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`lht_∑t_fûìnsuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`lht_∑t_fûe_¸óã_buf„r
(
lht_∑t_fûeö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	#lht_∑t_fûewøp
(
n
Ë1

	)

355 
	#YY_SKIP_YYWRAP


	)

357 
	tYY_CHAR
;

359 
FILE
 *
	glht_∑t_fûeö
 = (FILE *Ë0, *
	glht_∑t_fûeout
 = (FILE *) 0;

361 
	tyy_°©e_ty≥
;

363 
lht_∑t_fûñöío
;

365 
	glht_∑t_fûñöío
 = 1;

367 *
lht_∑t_fûëext
;

368 
	#yyãxt_±r
 
lht_∑t_fûëext


	)

370 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

371 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

372 
yy_gë_√xt_buf„r
 ();

373 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

378 
	#YY_DO_BEFORE_ACTION
 \

379 (
yyãxt_±r
Ë
yy_bp
; \

380 
lht_∑t_fûñíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

381 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

382 *
yy_˝
 = '\0'; \

383 (
yy_c_buf_p
Ë
yy_˝
;

	)

385 
	#YY_NUM_RULES
 11

	)

386 
	#YY_END_OF_BUFFER
 12

	)

389 
	syy_å™s_öfo


391 
Êex_öt32_t
 
	myy_vîify
;

392 
Êex_öt32_t
 
	myy_nxt
;

394 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[20] =

400 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

432 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[13] =

438 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[22] =

445 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[22] =

452 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[37] =

460 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[37] =

468 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

469 *
	gyy_œ°_ac˚±ög_˝os
;

471 
lht_∑t_fûe_Êex_debug
;

472 
	glht_∑t_fûe_Êex_debug
 = 0;

477 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

478 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

479 
	#YY_MORE_ADJ
 0

	)

480 
	#YY_RESTORE_YY_MORE_OFFSET


	)

481 *
	glht_∑t_fûëext
;

492 
	~"lht_∑t_fûe.h
"

493 
	~"lht_∑t_fûe.èb.hµ
"

495 
usög
 
«me•a˚
 
	g°d
;

497 
	glht_∑t_fûñöe
 = 1;

501 
	#INITIAL
 0

	)

503 #i‚de‡
YY_NO_UNISTD_H


508 
	~<uni°d.h
>

511 #i‚de‡
YY_EXTRA_TYPE


512 
	#YY_EXTRA_TYPE
 *

	)

515 
yy_öô_globÆs
 ();

520 
lht_∑t_fûñex_de°roy
 ();

522 
lht_∑t_fûegë_debug
 ();

524 
lht_∑t_fûe£t_debug
 (
debug_Êag
 );

526 
YY_EXTRA_TYPE
 
lht_∑t_fûegë_exåa
 ();

528 
lht_∑t_fûe£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

530 
FILE
 *
lht_∑t_fûegë_ö
 ();

532 
lht_∑t_fûe£t_ö
 (
FILE
 * 
ö_°r
 );

534 
FILE
 *
lht_∑t_fûegë_out
 ();

536 
lht_∑t_fûe£t_out
 (
FILE
 * 
out_°r
 );

538 
lht_∑t_fûegë_Àng
 ();

540 *
lht_∑t_fûegë_ãxt
 ();

542 
lht_∑t_fûegë_löío
 ();

544 
lht_∑t_fûe£t_löío
 (
löe_numbî
 );

550 #i‚de‡
YY_SKIP_YYWRAP


551 #ifde‡
__˝lu•lus


552 "C" 
lht_∑t_fûewøp
 ();

554 
lht_∑t_fûewøp
 ();

558 #i‚de‡
yyãxt_±r


559 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

562 #ifde‡
YY_NEED_STRLEN


563 
yy_Êex_°æí
 (
yyc⁄°
 * );

566 #i‚de‡
YY_NO_INPUT


568 #ifde‡
__˝lu•lus


569 
yyöput
 ();

571 
öput
 ();

577 #i‚de‡
YY_READ_BUF_SIZE


578 
	#YY_READ_BUF_SIZE
 8192

	)

582 #i‚de‡
ECHO


586 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
lht_∑t_fûëext
, 
lht_∑t_fûñíg
, 1, 
lht_∑t_fûeout
 )Ë{} } 0)

	)

592 #i‚de‡
YY_INPUT


593 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

594 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

596 
c
 = '*'; \

597 
n
; \

598  
n
 = 0;Ç < 
max_size
 && \

599 (
c
 = 
	`gëc
–
lht_∑t_fûeö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

600 
buf
[
n
] = (Ë
c
; \

601 i‡–
c
 == '\n' ) \

602 
buf
[
n
++] = (Ë
c
; \

603 i‡–
c
 =
EOF
 && 
	`„º‹
–
lht_∑t_fûeö
 ) ) \

604 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

605 
ªsu…
 = 
n
; \

609 
î∫o
=0; \

610  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
lht_∑t_fûeö
))==0 && 
	`„º‹
(lht_pat_filein)) \

612 if–
î∫o
 !
EINTR
) \

614 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

617 
î∫o
=0; \

618 
	`˛óªº
(
lht_∑t_fûeö
); \

622 

	)

629 #i‚de‡
yyãrmö©e


630 
	#yyãrmö©e
(Ë 
YY_NULL


	)

634 #i‚de‡
YY_START_STACK_INCR


635 
	#YY_START_STACK_INCR
 25

	)

639 #i‚de‡
YY_FATAL_ERROR


640 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

648 #i‚de‡
YY_DECL


649 
	#YY_DECL_IS_OURS
 1

	)

651 
lht_∑t_fûñex
 ();

653 
	#YY_DECL
 
	`lht_∑t_fûñex
 ()

	)

659 #i‚de‡
YY_USER_ACTION


660 
	#YY_USER_ACTION


	)

664 #i‚de‡
YY_BREAK


665 
	#YY_BREAK
 ;

	)

668 
	#YY_RULE_SETUP
 \

669 
YY_USER_ACTION


	)

673 
	gYY_DECL


675 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

676 *
	gyy_˝
, *
	gyy_bp
;

677 
	gyy_a˘
;

684 i‡–!(
	gyy_öô
) )

686 (
	gyy_öô
) = 1;

688 #ifde‡
YY_USER_INIT


689 
	gYY_USER_INIT
;

692 i‡–! (
	gyy_°¨t
) )

693 (
	gyy_°¨t
) = 1;

695 i‡–! 
	glht_∑t_fûeö
 )

696 
	glht_∑t_fûeö
 = 
°dö
;

698 i‡–! 
	glht_∑t_fûeout
 )

699 
	glht_∑t_fûeout
 = 
°dout
;

701 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

702 
lht_∑t_fûìnsuª_buf„r_°ack
 ();

703 
	gYY_CURRENT_BUFFER_LVALUE
 =

704 
lht_∑t_fûe_¸óã_buf„r
(
lht_∑t_fûeö
,
YY_BUF_SIZE
 );

707 
lht_∑t_fûe_lﬂd_buf„r_°©e
( );

712 
	gyy_˝
 = (
yy_c_buf_p
);

715 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

720 
	gyy_bp
 = 
yy_˝
;

722 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

723 
	gyy_m©ch
:

726 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

727 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

729 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

730 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

732  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

734 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

735 i‡–
	gyy_cuºít_°©e
 >= 20 )

736 
yy_c
 = 
yy_mëa
[() yy_c];

738 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

739 ++
	gyy_˝
;

741  
	gyy_ba£
[
yy_cuºít_°©e
] != 24 );

743 
	gyy_föd_a˘i⁄
:

744 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

745 i‡–
	gyy_a˘
 == 0 )

747 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

748 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

749 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

752 
	gYY_DO_BEFORE_ACTION
;

754 
	gdo_a˘i⁄
:

756  
yy_a˘
 )

760 *
yy_˝
 = (
yy_hﬁd_ch¨
);

761 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

762 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

763 
	gyy_föd_a˘i⁄
;

766 
YY_RULE_SETUP


769  
PATTERN
;

771 
YY_BREAK


773 
YY_RULE_SETUP


776 
lht_∑t_fûñvÆ
.
ych¨
 = 
°rdup
(
lht_∑t_fûëext
);

777  
	gVALUE
;

779 
YY_BREAK


781 
YY_RULE_SETUP


783 {  
lht_∑t_fûëext
[0]; }

784 
YY_BREAK


786 
YY_RULE_SETUP


788 {  
lht_∑t_fûëext
[0]; }

789 
YY_BREAK


791 
YY_RULE_SETUP


793 {  
lht_∑t_fûëext
[0]; }

794 
YY_BREAK


796 
YY_RULE_SETUP


798 {  
lht_∑t_fûëext
[0]; }

799 
YY_BREAK


801 
YY_RULE_SETUP


803 {  
lht_∑t_fûëext
[0]; }

804 
YY_BREAK


807 
YY_RULE_SETUP


809 { 
lht_∑t_fûñöe
++; }

810 
YY_BREAK


812 
YY_RULE_SETUP


815 
YY_BREAK


817 
YY_RULE_SETUP


820 
YY_BREAK


822 
YY_RULE_SETUP


824 
ECHO
;

825 
	gYY_BREAK


827 
YY_STATE_EOF
(
INITIAL
):

828 
yyãrmö©e
();

830 
	gYY_END_OF_BUFFER
:

833 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

836 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

837 
YY_RESTORE_YY_MORE_OFFSET


839 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

850 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

851 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
lht_∑t_fûeö
;

852 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

862 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

864 
yy_°©e_ty≥
 
yy_√xt_°©e
;

866 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

868 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

879 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

881 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

883 i‡–
	gyy_√xt_°©e
 )

886 
	gyy_˝
 = ++(
yy_c_buf_p
);

887 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

888 
	gyy_m©ch
;

893 
	gyy_˝
 = (
yy_c_buf_p
);

894 
	gyy_föd_a˘i⁄
;

898  
yy_gë_√xt_buf„r
( ) )

900 
	gEOB_ACT_END_OF_FILE
:

902 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

904 i‡–
lht_∑t_fûewøp
( ) )

915 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

917 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

918 
	gdo_a˘i⁄
;

923 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

924 
	gYY_NEW_FILE
;

929 
	gEOB_ACT_CONTINUE_SCAN
:

930 (
yy_c_buf_p
) =

931 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

933 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

935 
	gyy_˝
 = (
yy_c_buf_p
);

936 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

937 
	gyy_m©ch
;

939 
	gEOB_ACT_LAST_MATCH
:

940 (
yy_c_buf_p
) =

941 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

943 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

945 
	gyy_˝
 = (
yy_c_buf_p
);

946 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

947 
	gyy_föd_a˘i⁄
;

953 
YY_FATAL_ERROR
(

966 
	$yy_gë_√xt_buf„r
 ()

968 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

969 *
sour˚
 = (
yyãxt_±r
);

970 
numbî_to_move
, 
i
;

971 
ªt_vÆ
;

973 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

974 
	`YY_FATAL_ERROR
(

977 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

979 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

984  
EOB_ACT_END_OF_FILE
;

992  
EOB_ACT_LAST_MATCH
;

999 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1001  
i
 = 0; i < 
numbî_to_move
; ++i )

1002 *(
de°
++Ë*(
sour˚
++);

1004 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1008 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1012 
num_to_ªad
 =

1013 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1015  
num_to_ªad
 <= 0 )

1019 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1021 
yy_c_buf_p_off£t
 =

1022 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1024 i‡–
b
->
yy_is_our_buf„r
 )

1026 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1028 i‡–
√w_size
 <= 0 )

1029 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1031 
b
->
yy_buf_size
 *= 2;

1033 
b
->
yy_ch_buf
 = (*)

1035 
	`lht_∑t_fûîóŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1039 
b
->
yy_ch_buf
 = 0;

1041 i‡–! 
b
->
yy_ch_buf
 )

1042 
	`YY_FATAL_ERROR
(

1045 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1047 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1048 
numbî_to_move
 - 1;

1052 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1053 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1056 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1057 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

1059 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1062 i‡–(
yy_n_ch¨s
) == 0 )

1064 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1066 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1067 
	`lht_∑t_fûîe°¨t
(
lht_∑t_fûeö
 );

1072 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1073 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1074 
YY_BUFFER_EOF_PENDING
;

1079 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1081 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1083 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1084 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`lht_∑t_fûîóŒoc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1085 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1086 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1089 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1090 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1091 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1093 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1095  
ªt_vÆ
;

1096 
	}
}

1100 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1102 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1103 *
yy_˝
;

1105 
yy_cuºít_°©e
 = (
yy_°¨t
);

1107  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1109 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1110 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1112 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1113 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1115  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1117 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1118 i‡–
yy_cuºít_°©e
 >= 20 )

1119 
yy_c
 = 
yy_mëa
[() yy_c];

1121 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1124  
yy_cuºít_°©e
;

1125 
	}
}

1132 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1134 
yy_is_jam
;

1135 *
yy_˝
 = (
yy_c_buf_p
);

1137 
YY_CHAR
 
yy_c
 = 1;

1138 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1140 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1141 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1143  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1145 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1146 i‡–
yy_cuºít_°©e
 >= 20 )

1147 
yy_c
 = 
yy_mëa
[() yy_c];

1149 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1150 
yy_is_jam
 = (
yy_cuºít_°©e
 == 19);

1152  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1153 
	}
}

1155 #i‚de‡
YY_NO_INPUT


1156 #ifde‡
__˝lu•lus


1157 
	$yyöput
 ()

1159 
	$öput
 ()

1163 
c
;

1165 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1167 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1173 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1175 *(
yy_c_buf_p
) = '\0';

1179 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1180 ++(
yy_c_buf_p
);

1182  
	`yy_gë_√xt_buf„r
( ) )

1184 
EOB_ACT_LAST_MATCH
:

1196 
	`lht_∑t_fûîe°¨t
(
lht_∑t_fûeö
 );

1200 
EOB_ACT_END_OF_FILE
:

1202 i‡–
	`lht_∑t_fûewøp
( ) )

1203  
EOF
;

1205 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1206 
YY_NEW_FILE
;

1207 #ifde‡
__˝lu•lus


1208  
	`yyöput
();

1210  
	`öput
();

1214 
EOB_ACT_CONTINUE_SCAN
:

1215 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1221 
c
 = *(*Ë(
yy_c_buf_p
);

1222 *(
yy_c_buf_p
) = '\0';

1223 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1225  
c
;

1226 
	}
}

1234 
	$lht_∑t_fûîe°¨t
 (
FILE
 * 
öput_fûe
 )

1237 i‡–! 
YY_CURRENT_BUFFER
 ){

1238 
	`lht_∑t_fûìnsuª_buf„r_°ack
 ();

1239 
YY_CURRENT_BUFFER_LVALUE
 =

1240 
	`lht_∑t_fûe_¸óã_buf„r
(
lht_∑t_fûeö
,
YY_BUF_SIZE
 );

1243 
	`lht_∑t_fûe_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1244 
	`lht_∑t_fûe_lﬂd_buf„r_°©e
( );

1245 
	}
}

1251 
	$lht_∑t_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1259 
	`lht_∑t_fûìnsuª_buf„r_°ack
 ();

1260 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1263 i‡–
YY_CURRENT_BUFFER
 )

1266 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1267 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1268 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1271 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1272 
	`lht_∑t_fûe_lﬂd_buf„r_°©e
( );

1279 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1280 
	}
}

1282 
	$lht_∑t_fûe_lﬂd_buf„r_°©e
 ()

1284 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1285 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1286 
lht_∑t_fûeö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1287 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1288 
	}
}

1296 
YY_BUFFER_STATE
 
	$lht_∑t_fûe_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1298 
YY_BUFFER_STATE
 
b
;

1300 
b
 = (
YY_BUFFER_STATE
Ë
	`lht_∑t_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1301 i‡–! 
b
 )

1302 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_file_create_buffer()" );

1304 
b
->
yy_buf_size
 = 
size
;

1309 
b
->
yy_ch_buf
 = (*Ë
	`lht_∑t_fûóŒoc
(b->
yy_buf_size
 + 2 );

1310 i‡–! 
b
->
yy_ch_buf
 )

1311 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_file_create_buffer()" );

1313 
b
->
yy_is_our_buf„r
 = 1;

1315 
	`lht_∑t_fûe_öô_buf„r
(
b
,
fûe
 );

1317  
b
;

1318 
	}
}

1324 
	$lht_∑t_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1327 i‡–! 
b
 )

1330 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1331 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1333 i‡–
b
->
yy_is_our_buf„r
 )

1334 
	`lht_∑t_fûe‰ì
((*Ë
b
->
yy_ch_buf
 );

1336 
	`lht_∑t_fûe‰ì
((*Ë
b
 );

1337 
	}
}

1339 #i‚de‡
__˝lu•lus


1340 
ißây
 ();

1347 
	$lht_∑t_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1350 
€ºno
 = 
î∫o
;

1352 
	`lht_∑t_fûe_Êush_buf„r
(
b
 );

1354 
b
->
yy_öput_fûe
 = 
fûe
;

1355 
b
->
yy_fûl_buf„r
 = 1;

1361 i‡(
b
 !
YY_CURRENT_BUFFER
){

1362 
b
->
yy_bs_löío
 = 1;

1363 
b
->
yy_bs_cﬁumn
 = 0;

1366 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1368 
î∫o
 = 
€ºno
;

1369 
	}
}

1375 
	$lht_∑t_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1377 i‡–! 
b
 )

1380 
b
->
yy_n_ch¨s
 = 0;

1386 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1387 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1389 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1391 
b
->
yy_©_bﬁ
 = 1;

1392 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1394 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1395 
	`lht_∑t_fûe_lﬂd_buf„r_°©e
( );

1396 
	}
}

1404 
	$lht_∑t_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1406 i‡(
√w_buf„r
 =
NULL
)

1409 
	`lht_∑t_fûìnsuª_buf„r_°ack
();

1412 i‡–
YY_CURRENT_BUFFER
 )

1415 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1416 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1417 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1421 i‡(
YY_CURRENT_BUFFER
)

1422 (
yy_buf„r_°ack_t›
)++;

1423 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1426 
	`lht_∑t_fûe_lﬂd_buf„r_°©e
( );

1427 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1428 
	}
}

1434 
	$lht_∑t_fûï›_buf„r_°©e
 ()

1436 i‡(!
YY_CURRENT_BUFFER
)

1439 
	`lht_∑t_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1440 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1441 i‡((
yy_buf„r_°ack_t›
) > 0)

1442 --(
yy_buf„r_°ack_t›
);

1444 i‡(
YY_CURRENT_BUFFER
) {

1445 
	`lht_∑t_fûe_lﬂd_buf„r_°©e
( );

1446 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1448 
	}
}

1453 
	$lht_∑t_fûìnsuª_buf„r_°ack
 ()

1455 
num_to_Æloc
;

1457 i‡(!(
yy_buf„r_°ack
)) {

1463 
num_to_Æloc
 = 1;

1464 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
lht_∑t_fûóŒoc


1465 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1467 i‡–! (
yy_buf„r_°ack
) )

1468 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_fileensure_buffer_stack()" );

1470 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1472 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1473 (
yy_buf„r_°ack_t›
) = 0;

1477 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1480 
grow_size
 = 8 ;

1482 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1483 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
lht_∑t_fûîóŒoc


1484 ((
yy_buf„r_°ack
),

1485 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1487 i‡–! (
yy_buf„r_°ack
) )

1488 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_fileensure_buffer_stack()" );

1491 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1492 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1494 
	}
}

1502 
YY_BUFFER_STATE
 
	$lht_∑t_fûe_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1504 
YY_BUFFER_STATE
 
b
;

1506 i‡–
size
 < 2 ||

1507 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1508 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1512 
b
 = (
YY_BUFFER_STATE
Ë
	`lht_∑t_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1513 i‡–! 
b
 )

1514 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_file_scan_buffer()" );

1516 
b
->
yy_buf_size
 = 
size
 - 2;

1517 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1518 
b
->
yy_is_our_buf„r
 = 0;

1519 
b
->
yy_öput_fûe
 = 0;

1520 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1521 
b
->
yy_is_öãø˘ive
 = 0;

1522 
b
->
yy_©_bﬁ
 = 1;

1523 
b
->
yy_fûl_buf„r
 = 0;

1524 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1526 
	`lht_∑t_fûe_swôch_to_buf„r
(
b
 );

1528  
b
;

1529 
	}
}

1539 
YY_BUFFER_STATE
 
	$lht_∑t_fûe_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1542  
	`lht_∑t_fûe_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1543 
	}
}

1552 
YY_BUFFER_STATE
 
	$lht_∑t_fûe_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

1554 
YY_BUFFER_STATE
 
b
;

1555 *
buf
;

1556 
yy_size_t
 
n
;

1557 
i
;

1560 
n
 = 
_yybyãs_Àn
 + 2;

1561 
buf
 = (*Ë
	`lht_∑t_fûóŒoc
(
n
 );

1562 i‡–! 
buf
 )

1563 
	`YY_FATAL_ERROR
( "out of dynamic memory inÜht_pat_file_scan_bytes()" );

1565  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1566 
buf
[
i
] = 
yybyãs
[i];

1568 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1570 
b
 = 
	`lht_∑t_fûe_sˇn_buf„r
(
buf
,
n
 );

1571 i‡–! 
b
 )

1572 
	`YY_FATAL_ERROR
( "bad buffer inÜht_pat_file_scan_bytes()" );

1577 
b
->
yy_is_our_buf„r
 = 1;

1579  
b
;

1580 
	}
}

1582 #i‚de‡
YY_EXIT_FAILURE


1583 
	#YY_EXIT_FAILURE
 2

	)

1586 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1588 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1589 
	`exô
–
YY_EXIT_FAILURE
 );

1590 
	}
}

1594 #unde‡
yyÀss


1595 
	#yyÀss
(
n
) \

1599 
yyÀss_ma¸o_¨g
 = (
n
); \

1600 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1601 
lht_∑t_fûëext
[
lht_∑t_fûñíg
] = (
yy_hﬁd_ch¨
); \

1602 (
yy_c_buf_p
Ë
lht_∑t_fûëext
 + 
yyÀss_ma¸o_¨g
; \

1603 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1604 *(
yy_c_buf_p
) = '\0'; \

1605 
lht_∑t_fûñíg
 = 
yyÀss_ma¸o_¨g
; \

1607  0 )

	)

1614 
	$lht_∑t_fûegë_löío
 ()

1617  
lht_∑t_fûñöío
;

1618 
	}
}

1623 
FILE
 *
	$lht_∑t_fûegë_ö
 ()

1625  
lht_∑t_fûeö
;

1626 
	}
}

1631 
FILE
 *
	$lht_∑t_fûegë_out
 ()

1633  
lht_∑t_fûeout
;

1634 
	}
}

1639 
	$lht_∑t_fûegë_Àng
 ()

1641  
lht_∑t_fûñíg
;

1642 
	}
}

1648 *
	$lht_∑t_fûegë_ãxt
 ()

1650  
lht_∑t_fûëext
;

1651 
	}
}

1657 
	$lht_∑t_fûe£t_löío
 (
löe_numbî
 )

1660 
lht_∑t_fûñöío
 = 
löe_numbî
;

1661 
	}
}

1669 
	$lht_∑t_fûe£t_ö
 (
FILE
 * 
ö_°r
 )

1671 
lht_∑t_fûeö
 = 
ö_°r
 ;

1672 
	}
}

1674 
	$lht_∑t_fûe£t_out
 (
FILE
 * 
out_°r
 )

1676 
lht_∑t_fûeout
 = 
out_°r
 ;

1677 
	}
}

1679 
	$lht_∑t_fûegë_debug
 ()

1681  
lht_∑t_fûe_Êex_debug
;

1682 
	}
}

1684 
	$lht_∑t_fûe£t_debug
 (
bdebug
 )

1686 
lht_∑t_fûe_Êex_debug
 = 
bdebug
 ;

1687 
	}
}

1689 
	$yy_öô_globÆs
 ()

1695 (
yy_buf„r_°ack
) = 0;

1696 (
yy_buf„r_°ack_t›
) = 0;

1697 (
yy_buf„r_°ack_max
) = 0;

1698 (
yy_c_buf_p
) = (*) 0;

1699 (
yy_öô
) = 0;

1700 (
yy_°¨t
) = 0;

1703 #ifde‡
YY_STDINIT


1704 
lht_∑t_fûeö
 = 
°dö
;

1705 
lht_∑t_fûeout
 = 
°dout
;

1707 
lht_∑t_fûeö
 = (
FILE
 *) 0;

1708 
lht_∑t_fûeout
 = (
FILE
 *) 0;

1715 
	}
}

1718 
	$lht_∑t_fûñex_de°roy
 ()

1722 
YY_CURRENT_BUFFER
){

1723 
	`lht_∑t_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1724 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1725 
	`lht_∑t_fûï›_buf„r_°©e
();

1729 
	`lht_∑t_fûe‰ì
((
yy_buf„r_°ack
) );

1730 (
yy_buf„r_°ack
Ë
NULL
;

1734 
	`yy_öô_globÆs
( );

1737 
	}
}

1743 #i‚de‡
yyãxt_±r


1744 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1746 
i
;

1747  
i
 = 0; i < 
n
; ++i )

1748 
s1
[
i
] = 
s2
[i];

1749 
	}
}

1752 #ifde‡
YY_NEED_STRLEN


1753 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

1755 
n
;

1756  
n
 = 0; 
s
[n]; ++n )

1759  
n
;

1760 
	}
}

1763 *
	$lht_∑t_fûóŒoc
 (
yy_size_t
 
size
 )

1765  (*Ë
	`mÆloc
–
size
 );

1766 
	}
}

1768 *
	$lht_∑t_fûîóŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

1777  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1778 
	}
}

1780 
	$lht_∑t_fûe‰ì
 (* 
±r
 )

1782 
	`‰ì
–(*Ë
±r
 );

1783 
	}
}

1785 
	#YYTABLES_NAME
 "yyèbÀs"

	)

	@interface/lib/dbg/lex_n_yacc/mdt_file.tab.cpp

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

67 
	#yy∑r£
 
mdt_fûï¨£


	)

68 
	#yyÀx
 
mdt_fûñex


	)

69 
	#yyîr‹
 
mdt_fûìº‹


	)

70 
	#yylvÆ
 
mdt_fûñvÆ


	)

71 
	#yych¨
 
mdt_fûech¨


	)

72 
	#yydebug
 
mdt_fûedebug


	)

73 
	#yy√ºs
 
mdt_fûíîrs


	)

88 
	#YYPARSE_PARAM
 
∑øm


	)

90 
	~<c°dio
>

91 
	~<c°rög
>

93 
	~"mdt_fûe.h
"

95 
usög
 
«me•a˚
 
	g°d
;

96 
usög
 
«me•a˚
 
	gI¡fNs
;

98 *
mdt_fûëext
;

99 
mdt_fûñöe
;

100 
mdt_fûñex
();

101 
mdt_fûìº‹
(c⁄° *
msg
);

103 
mdt_fûe‰ìNames
(
MdtNames
 *
«mes
);

104 
mdt_fûe‰ìP‹tToNë
(
MdtP‹tToNë
 *
p2ns
);

106 
	gI¡fNs
::
MdtFûe
 *
mdt
;

114 #i‚de‡
YYDEBUG


115 
	#YYDEBUG
 0

	)

119 #ifde‡
YYERROR_VERBOSE


120 #unde‡
YYERROR_VERBOSE


121 
	#YYERROR_VERBOSE
 1

	)

123 
	#YYERROR_VERBOSE
 0

	)

127 #i‚de‡
YYTOKEN_TABLE


128 
	#YYTOKEN_TABLE
 0

	)

133 #i‚de‡
YYTOKENTYPE


134 
	#YYTOKENTYPE


	)

137 
	eyytokíty≥
 {

138 
	mMODEL
 = 258,

139 
	mMODEL_SOURCE
 = 259,

140 
	mINPUT
 = 260,

141 
	mOUTPUT
 = 261,

142 
	mINOUT
 = 262,

143 
	mINTERN
 = 263,

144 
	mPRIMITIVE
 = 264,

145 
	mINSTANCE
 = 265,

146 
	mNAME
 = 266

152 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


153 
	uYYSTYPE


159 
	mych¨
[
I¡fNs
::
NAME_LEN
];

160 
	mI¡fNs
::
MdtP‹tTy≥
 
yp‹tTy≥
;

161 
	mI¡fNs
::
MdtNames
 *
y«mes
;

162 
	mI¡fNs
::
MdtP‹tToNë
 *
yp‹tToNë
;

168 } 
	tYYSTYPE
;

169 
	#YYSTYPE_IS_TRIVIAL
 1

	)

170 
	#yy°y≥
 
YYSTYPE


	)

171 
	#YYSTYPE_IS_DECLARED
 1

	)

185 #ifde‡
YYTYPE_UINT8


186 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

188 
	tyyty≥_uöt8
;

191 #ifde‡
YYTYPE_INT8


192 
YYTYPE_INT8
 
	tyyty≥_öt8
;

193 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

194 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

195 sig√d 
	tyyty≥_öt8
;

197 
	tyyty≥_öt8
;

200 #ifde‡
YYTYPE_UINT16


201 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

203 
	tyyty≥_uöt16
;

206 #ifde‡
YYTYPE_INT16


207 
YYTYPE_INT16
 
	tyyty≥_öt16
;

209 
	tyyty≥_öt16
;

212 #i‚de‡
YYSIZE_T


213 #ifde‡
__SIZE_TYPE__


214 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

215 #ñi‡
deföed
 
size_t


216 
	#YYSIZE_T
 
size_t


	)

217 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

218 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

219 
	~<°ddef.h
>

220 
	#YYSIZE_T
 
size_t


	)

222 
	#YYSIZE_T
 

	)

226 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

228 #i‚de‡
YY_


229 #i‡
YYENABLE_NLS


230 #i‡
ENABLE_NLS


231 
	~<liböé.h
>

232 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

235 #i‚de‡
YY_


236 
	#YY_
(
msgid
Ë
	)
msgid

241 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


242 
	#YYUSE
(
e
Ë((Ë”))

	)

244 
	#YYUSE
(
e
Ë

	)

248 #i‚de‡
löt


249 
	#YYID
(
n
Ë“)

	)

251 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

252 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

254 
	$YYID
 (
yyi
)

257 
	$YYID
 (
yyi
)

258 
yyi
;

261  
yyi
;

262 
	}
}

265 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


269 #ifde‡
YYSTACK_USE_ALLOCA


270 #i‡
YYSTACK_USE_ALLOCA


271 #ifde‡
__GNUC__


272 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

273 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


274 
	~<Æloˇ.h
>

275 #ñi‡
deföed
 
_AIX


276 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

277 #ñi‡
deföed
 
_MSC_VER


278 
	~<mÆloc.h
>

279 
	#Æloˇ
 
_Æloˇ


	)

281 
	#YYSTACK_ALLOC
 
Æloˇ


	)

282 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

283 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

284 
	~<°dlib.h
>

285 #i‚de‡
_STDLIB_H


286 
	#_STDLIB_H
 1

	)

293 #ifde‡
YYSTACK_ALLOC


295 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

296 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


301 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

304 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

305 
	#YYSTACK_FREE
 
YYFREE


	)

306 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


307 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

309 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

310 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

311 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

312 
	~<°dlib.h
>

313 #i‚de‡
_STDLIB_H


314 
	#_STDLIB_H
 1

	)

317 #i‚de‡
YYMALLOC


318 
	#YYMALLOC
 
mÆloc


	)

319 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

320 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

321 *
mÆloc
 (
YYSIZE_T
);

324 #i‚de‡
YYFREE


325 
	#YYFREE
 
‰ì


	)

326 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

327 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

328 
‰ì
 (*);

335 #i‡(! 
deföed
 
yyovîÊow
 \

336 && (! 
deföed
 
	g__˝lu•lus
 \

337 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

340 
	uyyÆloc


342 
yyty≥_öt16
 
	myyss_Æloc
;

343 
YYSTYPE
 
	myyvs_Æloc
;

347 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

351 
	#YYSTACK_BYTES
(
N
) \

352 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

353 + 
YYSTACK_GAP_MAXIMUM
)

	)

357 #i‚de‡
YYCOPY


358 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

359 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

360 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

362 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

365 
YYSIZE_T
 
yyi
; \

366 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

367 (
To
)[
yyi
] = (
From
)[yyi]; \

369 
	`YYID
 (0))

	)

378 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

381 
YYSIZE_T
 
yy√wbyãs
; \

382 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

383 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

384 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

385 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

387 
	`YYID
 (0))

	)

392 
	#YYFINAL
 3

	)

394 
	#YYLAST
 96

	)

397 
	#YYNTOKENS
 18

	)

399 
	#YYNNTS
 17

	)

401 
	#YYNRULES
 34

	)

403 
	#YYNSTATES
 83

	)

406 
	#YYUNDEFTOK
 2

	)

407 
	#YYMAXUTOK
 266

	)

409 
	#YYTRANSLATE
(
YYX
) \

410 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

413 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

444 #i‡
YYDEBUG


447 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

456 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

475 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

484 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


487 c⁄° *c⁄° 
	gyyäame
[] =

498 #ifde‡
YYPRINT


501 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

509 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

518 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

529 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

543 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

551 
	#YYPACT_NINF
 -33

	)

552 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

566 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

576 
	#YYTABLE_NINF
 -1

	)

577 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

591 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

607 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

620 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

621 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

622 
	#YYEMPTY
 (-2)

	)

623 
	#YYEOF
 0

	)

625 
	#YYACCEPT
 
yyac˚±œb


	)

626 
	#YYABORT
 
yyab‹éab


	)

627 
	#YYERROR
 
yyîr‹œb


	)

634 
	#YYFAIL
 
yyîæab


	)

636 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

638 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

640 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

642 
yych¨
 = (
Tokí
); \

643 
yylvÆ
 = (
VÆue
); \

644 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

645 
	`YYPOPSTACK
 (1); \

646 
yybackup
; \

650 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

651 
YYERROR
; \

653 
	`YYID
 (0))

	)

656 
	#YYTERROR
 1

	)

657 
	#YYERRCODE
 256

	)

664 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

665 #i‚de‡
YYLLOC_DEFAULT


666 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

668 i‡(
	`YYID
 (
N
)) \

670 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

671 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

672 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

673 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

677 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

678 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

679 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

680 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

682 
	`YYID
 (0))

	)

690 #i‚de‡
YY_LOCATION_PRINT


691 #i‡
YYLTYPE_IS_TRIVIAL


692 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

693 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

694 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

695 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

697 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

704 #ifde‡
YYLEX_PARAM


705 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

707 
	#YYLEX
 
	`yyÀx
 ()

	)

711 #i‡
YYDEBUG


713 #i‚de‡
YYFPRINTF


714 
	~<°dio.h
>

715 
	#YYFPRINTF
 
Ârötf


	)

718 
	#YYDPRINTF
(
Args
) \

720 i‡(
yydebug
) \

721 
YYFPRINTF
 
Args
; \

722 } 
	`YYID
 (0))

	)

724 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

726 i‡(
yydebug
) \

728 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

729 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

730 
Ty≥
, 
VÆue
); \

731 
	`YYFPRINTF
 (
°dîr
, "\n"); \

733 } 
	`YYID
 (0))

	)

741 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

742 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

744 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

747 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

748 
FILE
 *
yyouçut
;

749 
yyty≥
;

750 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

753 i‡(!
yyvÆuï
)

755 #ifde‡
YYPRINT


756 i‡(
yyty≥
 < 
YYNTOKENS
)

757 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

759 
	`YYUSE
 (
yyouçut
);

761 
yyty≥
)

766 
	}
}

773 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

774 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

776 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

779 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

780 
FILE
 *
yyouçut
;

781 
yyty≥
;

782 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

785 i‡(
yyty≥
 < 
YYNTOKENS
)

786 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

788 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

790 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

791 
	`YYFPRINTF
 (
yyouçut
, ")");

792 
	}
}

799 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

800 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

802 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

805 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

806 
yyty≥_öt16
 *
yybŸtom
;

807 
yyty≥_öt16
 *
yyt›
;

810 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

811 ; 
yybŸtom
 <
yyt›
; yybottom++)

813 
yybŸ
 = *
yybŸtom
;

814 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

816 
	`YYFPRINTF
 (
°dîr
, "\n");

817 
	}
}

819 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

821 i‡(
yydebug
) \

822 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

823 } 
	`YYID
 (0))

	)

830 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

831 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

833 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

836 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

837 
YYSTYPE
 *
yyv•
;

838 
yyruÀ
;

841 
yyƒhs
 = 
yyr2
[
yyruÀ
];

842 
yyi
;

843 
yy o
 = 
yyæöe
[
yyruÀ
];

844 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

845 
yyruÀ
 - 1, 
yy o
);

847 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

849 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

850 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

851 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

853 
	`YYFPRINTF
 (
°dîr
, "\n");

855 
	}
}

857 
	#YY_REDUCE_PRINT
(
RuÀ
) \

859 i‡(
yydebug
) \

860 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

861 } 
	`YYID
 (0))

	)

865 
	gyydebug
;

867 
	#YYDPRINTF
(
Args
)

	)

868 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

869 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

870 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

875 #i‚def 
YYINITDEPTH


876 
	#YYINITDEPTH
 200

	)

886 #i‚de‡
YYMAXDEPTH


887 
	#YYMAXDEPTH
 10000

	)

892 #i‡
YYERROR_VERBOSE


894 #i‚de‡
yy°æí


895 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


896 
	#yy°æí
 
°æí


	)

899 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

900 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

901 
YYSIZE_T


902 
	$yy°æí
 (c⁄° *
yy°r
)

904 
YYSIZE_T


905 
	$yy°æí
 (
yy°r
)

906 c⁄° *
yy°r
;

909 
YYSIZE_T
 
yyÀn
;

910 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

912  
yyÀn
;

913 
	}
}

917 #i‚de‡
yy°p˝y


918 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


919 
	#yy°p˝y
 
°p˝y


	)

923 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

924 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

926 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

929 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

930 *
yyde°
;

931 c⁄° *
yy§c
;

934 *
yyd
 = 
yyde°
;

935 c⁄° *
yys
 = 
yy§c
;

937 (*
yyd
++ = *
yys
++) != '\0')

940  
yyd
 - 1;

941 
	}
}

945 #i‚de‡
yyäamîr


953 
YYSIZE_T


954 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

956 i‡(*
yy°r
 == '"')

958 
YYSIZE_T
 
yyn
 = 0;

959 c⁄° *
yyp
 = 
yy°r
;

962 *++
yyp
)

966 
do_nŸ_°rù_quŸes
;

969 i‡(*++
yyp
 != '\\')

970 
do_nŸ_°rù_quŸes
;

973 i‡(
yyªs
)

974 
yyªs
[
yyn
] = *
yyp
;

975 
yyn
++;

979 i‡(
yyªs
)

980 
yyªs
[
yyn
] = '\0';

981  
yyn
;

983 
do_nŸ_°rù_quŸes
: ;

986 i‡(! 
yyªs
)

987  
	`yy°æí
 (
yy°r
);

989  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

990 
	}
}

1000 
YYSIZE_T


1001 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1003 
yyn
 = 
yy∑˘
[
yy°©e
];

1005 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1009 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1010 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1011 
YYSIZE_T
 
yysize
 = 
yysize0
;

1012 
YYSIZE_T
 
yysize1
;

1013 
yysize_ovîÊow
 = 0;

1014 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1015 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1016 
yyx
;

1021 
	`YY_
("syntaxÉrror, unexpected %s");

1022 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1023 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1024 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1025 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1027 *
yyfmt
;

1028 c⁄° *
yyf
;

1029 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1030 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1031 c⁄° 
yy‹
[] = " or %s";

1032 
yyf‹m©
[ 
yyu√x≥˘ed


1033 +  
yyex≥˘ög
 - 1

1034 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1035 * ( 
yy‹
 - 1))];

1036 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1040 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1043 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1044 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1045 
yycou¡
 = 1;

1047 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1048 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1050 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1051 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1053 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1055 
yycou¡
 = 1;

1056 
yysize
 = 
yysize0
;

1057 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1060 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1061 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1062 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1063 
yysize
 = 
yysize1
;

1064 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1065 
yy¥efix
 = 
yy‹
;

1068 
yyf
 = 
	`YY_
(
yyf‹m©
);

1069 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1070 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1071 
yysize
 = 
yysize1
;

1073 i‡(
yysize_ovîÊow
)

1074  
YYSIZE_MAXIMUM
;

1076 i‡(
yyªsu…
)

1081 *
yyp
 = 
yyªsu…
;

1082 
yyi
 = 0;

1083 (*
yyp
 = *
yyf
) != '\0')

1085 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1087 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1088 
yyf
 += 2;

1092 
yyp
++;

1093 
yyf
++;

1097  
yysize
;

1099 
	}
}

1108 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1109 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1111 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1114 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1115 c⁄° *
yymsg
;

1116 
yyty≥
;

1117 
YYSTYPE
 *
yyvÆuï
;

1120 
	`YYUSE
 (
yyvÆuï
);

1122 i‡(!
yymsg
)

1123 
yymsg
 = "Deleting";

1124 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1126 
yyty≥
)

1132 
	}
}

1135 #ifde‡
YYPARSE_PARAM


1136 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1137 
yy∑r£
 (*
YYPARSE_PARAM
);

1139 
yy∑r£
 ();

1142 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1143 
yy∑r£
 ();

1145 
yy∑r£
 ();

1151 
	gyych¨
;

1154 
YYSTYPE
 
	gyylvÆ
;

1157 
	gyy√ºs
;

1165 #ifde‡
YYPARSE_PARAM


1166 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1167 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1169 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1172 
	$yy∑r£
 (
YYPARSE_PARAM
)

1173 *
YYPARSE_PARAM
;

1176 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1177 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1179 
	$yy∑r£
 ()

1182 
	$yy∑r£
 ()

1189 
yy°©e
;

1191 
yyîr°©us
;

1201 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1202 
yyty≥_öt16
 *
yyss
;

1203 
yyty≥_öt16
 *
yys•
;

1206 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1207 
YYSTYPE
 *
yyvs
;

1208 
YYSTYPE
 *
yyv•
;

1210 
YYSIZE_T
 
yy°acksize
;

1212 
yyn
;

1213 
yyªsu…
;

1215 
yytokí
;

1218 
YYSTYPE
 
yyvÆ
;

1220 #i‡
YYERROR_VERBOSE


1222 
yymsgbuf
[128];

1223 *
yymsg
 = 
yymsgbuf
;

1224 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1227 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1231 
yyÀn
 = 0;

1233 
yytokí
 = 0;

1234 
yyss
 = 
yysß
;

1235 
yyvs
 = 
yyvß
;

1236 
yy°acksize
 = 
YYINITDEPTH
;

1238 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1240 
yy°©e
 = 0;

1241 
yyîr°©us
 = 0;

1242 
yy√ºs
 = 0;

1243 
yych¨
 = 
YYEMPTY
;

1249 
yys•
 = 
yyss
;

1250 
yyv•
 = 
yyvs
;

1252 
yy£t°©e
;

1257 
yy√w°©e
:

1260 
yys•
++;

1262 
yy£t°©e
:

1263 *
yys•
 = 
yy°©e
;

1265 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1268 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1270 #ifde‡
yyovîÊow


1275 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1276 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1282 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1283 &
yyss1
, 
yysize
 *  (*
yys•
),

1284 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1285 &
yy°acksize
);

1287 
yyss
 = 
yyss1
;

1288 
yyvs
 = 
yyvs1
;

1291 #i‚de‡
YYSTACK_RELOCATE


1292 
yyexhau°edœb
;

1295 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1296 
yyexhau°edœb
;

1297 
yy°acksize
 *= 2;

1298 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1299 
yy°acksize
 = 
YYMAXDEPTH
;

1302 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1303 
yyÆloc
 *
yy±r
 =

1304 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1305 i‡(! 
yy±r
)

1306 
yyexhau°edœb
;

1307 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1308 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1309 #unde‡
YYSTACK_RELOCATE


1310 i‡(
yyss1
 !
yysß
)

1311 
	`YYSTACK_FREE
 (
yyss1
);

1316 
yys•
 = 
yyss
 + 
yysize
 - 1;

1317 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1319 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1320 (Ë
yy°acksize
));

1322 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1323 
YYABORT
;

1326 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1328 i‡(
yy°©e
 =
YYFINAL
)

1329 
YYACCEPT
;

1331 
yybackup
;

1336 
yybackup
:

1342 
yyn
 = 
yy∑˘
[
yy°©e
];

1343 i‡(
yyn
 =
YYPACT_NINF
)

1344 
yydeÁu…
;

1349 i‡(
yych¨
 =
YYEMPTY
)

1351 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1352 
yych¨
 = 
YYLEX
;

1355 i‡(
yych¨
 <
YYEOF
)

1357 
yych¨
 = 
yytokí
 = 
YYEOF
;

1358 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1362 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1363 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1368 
yyn
 +
yytokí
;

1369 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1370 
yydeÁu…
;

1371 
yyn
 = 
yyèbÀ
[yyn];

1372 i‡(
yyn
 <= 0)

1374 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1375 
yyîæab
;

1376 
yyn
 = -yyn;

1377 
yyªdu˚
;

1382 i‡(
yyîr°©us
)

1383 
yyîr°©us
--;

1386 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1389 
yych¨
 = 
YYEMPTY
;

1391 
yy°©e
 = 
yyn
;

1392 *++
yyv•
 = 
yylvÆ
;

1394 
yy√w°©e
;

1400 
yydeÁu…
:

1401 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1402 i‡(
yyn
 == 0)

1403 
yyîæab
;

1404 
yyªdu˚
;

1410 
yyªdu˚
:

1412 
yyÀn
 = 
yyr2
[
yyn
];

1422 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1425 
	`YY_REDUCE_PRINT
 (
yyn
);

1426 
yyn
)

1432 { 
mdt
 = (
MdtFûe
 *)(
∑øm
); ;}

1439 { 
mdt
->
	`addModñ
((
yyv•
[(1Ë- (1)].
ych¨
)); ;}

1446 { 
mdt
->
	`addP‹ts
((
yyv•
[(1Ë- (1)].
y«mes
)->
hód
); ;}

1453 { (
yyv•
[(1Ë- (4)].
yp‹tTy≥
)) {

1454 
MDT_PORT_INPUT
:

1455 
mdt
->
	`£tI≈utNës
((
yyv•
[(3Ë- (4)].
y«mes
)->
hód
);

1457 
MDT_PORT_OUTPUT
:

1458 
mdt
->
	`£tOuçutNës
((
yyv•
[(3Ë- (4)].
y«mes
)->
hód
);

1460 
MDT_PORT_INOUT
:

1461 
mdt
->
	`£tInoutNës
((
yyv•
[(3Ë- (4)].
y«mes
)->
hód
);

1463 
MDT_PORT_INTERN
:

1464 
mdt
->
	`£tI¡înNës
((
yyv•
[(3Ë- (4)].
y«mes
)->
hód
);

1467 
	`mdt_fûe‰ìNames
((
yyv•
[(3Ë- (4)].
y«mes
)->
hód
); ;}

1474 { (
yyvÆ
.
yp‹tTy≥
Ë
MDT_PORT_INPUT
; ;}

1481 { (
yyvÆ
.
yp‹tTy≥
Ë
MDT_PORT_OUTPUT
; ;}

1488 { (
yyvÆ
.
yp‹tTy≥
Ë
MDT_PORT_INOUT
; ;}

1495 { (
yyvÆ
.
yp‹tTy≥
Ë
MDT_PORT_INTERN
; ;}

1503 
mdt
->
	`addPrimôive
((
yyv•
[(3Ë- (8)].
ych¨
), (yyv•[(4Ë- (8)].ych¨), (yyv•[(6Ë- (8)].
y«mes
)->
hód
);

1504 
	`mdt_fûe‰ìNames
((
yyv•
[(6Ë- (8)].
y«mes
)->
hód
);

1513 
mdt
->
	`addPrimôive
((
yyv•
[(3Ë- (7)].
ych¨
), "", (yyv•[(5Ë- (7)].
y«mes
)->
hód
);

1514 
	`mdt_fûe‰ìNames
((
yyv•
[(5Ë- (7)].
y«mes
)->
hód
);

1523 
mdt
->
	`addIn°™˚
((
yyv•
[(3Ë- (8)].
ych¨
), (yyv•[(4Ë- (8)].ych¨), (yyv•[(6Ë- (8)].
y«mes
)->
hód
);

1524 
	`mdt_fûe‰ìNames
((
yyv•
[(6Ë- (8)].
y«mes
)->
hód
);

1533 
mdt
->
	`addIn°™˚
((
yyv•
[(3Ë- (7)].
ych¨
), "", (yyv•[(5Ë- (7)].
y«mes
)->
hód
);

1534 
	`mdt_fûe‰ìNames
((
yyv•
[(5Ë- (7)].
y«mes
)->
hód
);

1543 
mdt
->
	`addIn°™˚
((
yyv•
[(3Ë- (8)].
ych¨
), (yyv•[(4Ë- (8)].ych¨), (yyv•[(6Ë- (8)].
yp‹tToNë
)->
hód
);

1544 
	`mdt_fûe‰ìP‹tToNë
((
yyv•
[(6Ë- (8)].
yp‹tToNë
)->
hód
);

1553 
mdt
->
	`addIn°™˚
((
yyv•
[(3Ë- (7)].
ych¨
), "", (yyv•[(5Ë- (7)].
yp‹tToNë
)->
hód
);

1554 
	`mdt_fûe‰ìP‹tToNë
((
yyv•
[(5Ë- (7)].
yp‹tToNë
)->
hód
);

1562 { (
yyvÆ
.
y«mes
Ë
√w
 
MdtNames
;

1563 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(3Ë- (3)].
ych¨
));

1564 (
yyv•
[(1Ë- (3)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1565 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (3)].ynames)->head;

1566 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1573 { (
yyvÆ
.
y«mes
Ë
√w
 
MdtNames
;

1574 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, "");

1575 (
yyv•
[(1Ë- (2)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1576 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (2)].ynames)->head;

1577 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1584 { (
yyvÆ
.
y«mes
Ë
√w
 
MdtNames
;

1585 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(1Ë- (1)].
ych¨
));

1586 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1587 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1594 { (
yyvÆ
.
y«mes
Ë
√w
 
MdtNames
;

1595 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, "");

1596 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1597 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1605 (
yyvÆ
.
yp‹tToNë
Ë
√w
 
MdtP‹tToNë
;

1606 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
p‹t
, (
yyv•
[(4Ë- (7)].
ych¨
));

1607 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
√t
, (
yyv•
[(6Ë- (7)].
ych¨
));

1608 (
yyv•
[(1Ë- (7)].
yp‹tToNë
)->
√xt
 = (
yyvÆ
.yportToNet);

1609 (
yyvÆ
.
yp‹tToNë
)->
hód
 = (
yyv•
[(1) - (7)].yportToNet)->head;

1610 (
yyvÆ
.
yp‹tToNë
)->
√xt
 = 
NULL
;

1619 (
yyvÆ
.
yp‹tToNë
Ë
√w
 
MdtP‹tToNë
;

1620 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
p‹t
, (
yyv•
[(2Ë- (5)].
ych¨
));

1621 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
√t
, (
yyv•
[(4Ë- (5)].
ych¨
));

1622 (
yyvÆ
.
yp‹tToNë
)->
hód
 = (yyval.yportToNet);

1623 (
yyvÆ
.
yp‹tToNë
)->
√xt
 = 
NULL
;

1633 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1635 
	`YYPOPSTACK
 (
yyÀn
);

1636 
yyÀn
 = 0;

1637 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1639 *++
yyv•
 = 
yyvÆ
;

1645 
yyn
 = 
yyr1
[yyn];

1647 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1648 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1649 
yy°©e
 = 
yyèbÀ
[yystate];

1651 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1653 
yy√w°©e
;

1659 
yyîæab
:

1661 i‡(!
yyîr°©us
)

1663 ++
yy√ºs
;

1664 #i‡! 
YYERROR_VERBOSE


1665 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1668 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1669 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1671 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1672 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1673 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1674 i‡(
yymsg
 !
yymsgbuf
)

1675 
	`YYSTACK_FREE
 (
yymsg
);

1676 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1677 i‡(
yymsg
)

1678 
yymsg_Æloc
 = 
yyÆloc
;

1681 
yymsg
 = 
yymsgbuf
;

1682 
yymsg_Æloc
 =  
yymsgbuf
;

1686 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1688 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1689 
	`yyîr‹
 (
yymsg
);

1693 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1694 i‡(
yysize
 != 0)

1695 
yyexhau°edœb
;

1703 i‡(
yyîr°©us
 == 3)

1708 i‡(
yych¨
 <
YYEOF
)

1711 i‡(
yych¨
 =
YYEOF
)

1712 
YYABORT
;

1716 
	`yyde°ru˘
 ("Error: discarding",

1717 
yytokí
, &
yylvÆ
);

1718 
yych¨
 = 
YYEMPTY
;

1724 
yyîæab1
;

1730 
yyîr‹œb
:

1736 
yyîr‹œb
;

1740 
	`YYPOPSTACK
 (
yyÀn
);

1741 
yyÀn
 = 0;

1742 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1743 
yy°©e
 = *
yys•
;

1744 
yyîæab1
;

1750 
yyîæab1
:

1751 
yyîr°©us
 = 3;

1755 
yyn
 = 
yy∑˘
[
yy°©e
];

1756 i‡(
yyn
 !
YYPACT_NINF
)

1758 
yyn
 +
YYTERROR
;

1759 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1761 
yyn
 = 
yyèbÀ
[yyn];

1762 i‡(0 < 
yyn
)

1768 i‡(
yys•
 =
yyss
)

1769 
YYABORT
;

1772 
	`yyde°ru˘
 ("Error:Öopping",

1773 
yy°os
[
yy°©e
], 
yyv•
);

1774 
	`YYPOPSTACK
 (1);

1775 
yy°©e
 = *
yys•
;

1776 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1779 *++
yyv•
 = 
yylvÆ
;

1783 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1785 
yy°©e
 = 
yyn
;

1786 
yy√w°©e
;

1792 
yyac˚±œb
:

1793 
yyªsu…
 = 0;

1794 
yyªtu∫
;

1799 
yyab‹éab
:

1800 
yyªsu…
 = 1;

1801 
yyªtu∫
;

1803 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


1807 
yyexhau°edœb
:

1808 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1809 
yyªsu…
 = 2;

1813 
yyªtu∫
:

1814 i‡(
yych¨
 !
YYEMPTY
)

1815 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1816 
yytokí
, &
yylvÆ
);

1819 
	`YYPOPSTACK
 (
yyÀn
);

1820 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1821 
yys•
 !
yyss
)

1823 
	`yyde°ru˘
 ("Cleanup:Öopping",

1824 
yy°os
[*
yys•
], 
yyv•
);

1825 
	`YYPOPSTACK
 (1);

1827 #i‚de‡
yyovîÊow


1828 i‡(
yyss
 !
yysß
)

1829 
	`YYSTACK_FREE
 (
yyss
);

1831 #i‡
YYERROR_VERBOSE


1832 i‡(
yymsg
 !
yymsgbuf
)

1833 
	`YYSTACK_FREE
 (
yymsg
);

1836  
	`YYID
 (
yyªsu…
);

1837 
	}
}

1845 
	$mdt_fûìº‹
(c⁄° *
msg
) {

1846 
	`Ârötf
(
°dîr
, "**ERROR mdt_fileerror(): ");

1847 
	`Ârötf
(
°dîr
, "Aàlöê%d. Nó∏`%s'. ", 
mdt_fûñöe
, 
mdt_fûëext
);

1848 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

1849 
	}
}

1851 
	$mdt_fûe‰ìNames
(
MdtNames
 *
«mes
) {

1852 
MdtNames
 *
«me
 = 
«mes
->
hód
;

1853 
«me
) {

1854 
MdtNames
 *
¥ev
 = 
«me
;

1855 
«me
 =Çame->
√xt
;

1856 
dñëe
 
¥ev
;

1858 
	}
}

1860 
	$mdt_fûe‰ìP‹tToNë
(
MdtP‹tToNë
 *
p2ns
) {

1861 
MdtP‹tToNë
 *
p2n
 = 
p2ns
->
hód
;

1862 
p2n
) {

1863 
MdtP‹tToNë
 *
¥ev
 = 
p2n
;

1864 
p2n
 =Ö2n->
√xt
;

1865 
dñëe
 
¥ev
;

1867 
	}
}

	@interface/lib/dbg/lex_n_yacc/mdt_file.tab.hpp

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mMODEL
 = 258,

43 
	mMODEL_SOURCE
 = 259,

44 
	mINPUT
 = 260,

45 
	mOUTPUT
 = 261,

46 
	mINOUT
 = 262,

47 
	mINTERN
 = 263,

48 
	mPRIMITIVE
 = 264,

49 
	mINSTANCE
 = 265,

50 
	mNAME
 = 266

56 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


57 
	uYYSTYPE


63 
	mych¨
[
I¡fNs
::
NAME_LEN
];

64 
	mI¡fNs
::
MdtP‹tTy≥
 
yp‹tTy≥
;

65 
	mI¡fNs
::
MdtNames
 *
y«mes
;

66 
	mI¡fNs
::
MdtP‹tToNë
 *
yp‹tToNë
;

72 } 
	tYYSTYPE
;

73 
	#YYSTYPE_IS_TRIVIAL
 1

	)

74 
	#yy°y≥
 
YYSTYPE


	)

75 
	#YYSTYPE_IS_DECLARED
 1

	)

78 
YYSTYPE
 
mdt_fûñvÆ
;

	@interface/lib/dbg/lex_n_yacc/mdt_file.yy.cpp

5 
	#YY_INT_ALIGNED
 

	)

9 
	#yy_¸óã_buf„r
 
mdt_fûe_¸óã_buf„r


	)

10 
	#yy_dñëe_buf„r
 
mdt_fûe_dñëe_buf„r


	)

11 
	#yy_Êex_debug
 
mdt_fûe_Êex_debug


	)

12 
	#yy_öô_buf„r
 
mdt_fûe_öô_buf„r


	)

13 
	#yy_Êush_buf„r
 
mdt_fûe_Êush_buf„r


	)

14 
	#yy_lﬂd_buf„r_°©e
 
mdt_fûe_lﬂd_buf„r_°©e


	)

15 
	#yy_swôch_to_buf„r
 
mdt_fûe_swôch_to_buf„r


	)

16 
	#yyö
 
mdt_fûeö


	)

17 
	#yyÀng
 
mdt_fûñíg


	)

18 
	#yyÀx
 
mdt_fûñex


	)

19 
	#yylöío
 
mdt_fûñöío


	)

20 
	#yyout
 
mdt_fûeout


	)

21 
	#yyª°¨t
 
mdt_fûîe°¨t


	)

22 
	#yyãxt
 
mdt_fûëext


	)

23 
	#yywøp
 
mdt_fûewøp


	)

24 
	#yyÆloc
 
mdt_fûóŒoc


	)

25 
	#yyªÆloc
 
mdt_fûîóŒoc


	)

26 
	#yy‰ì
 
mdt_fûe‰ì


	)

28 
	#FLEX_SCANNER


	)

29 
	#YY_FLEX_MAJOR_VERSION
 2

	)

30 
	#YY_FLEX_MINOR_VERSION
 5

	)

31 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

32 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

33 
	#FLEX_BETA


	)

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<°dlib.h
>

48 #i‚de‡
FLEXINT_H


49 
	#FLEXINT_H


	)

53 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

58 #i‚de‡
__STDC_LIMIT_MACROS


59 
	#__STDC_LIMIT_MACROS
 1

	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	tÊex_öt8_t
;

64 
uöt8_t
 
	tÊex_uöt8_t
;

65 
öt16_t
 
	tÊex_öt16_t
;

66 
uöt16_t
 
	tÊex_uöt16_t
;

67 
öt32_t
 
	tÊex_öt32_t
;

68 
uöt32_t
 
	tÊex_uöt32_t
;

70 sig√d 
	tÊex_öt8_t
;

71 
	tÊex_öt16_t
;

72 
	tÊex_öt32_t
;

73 
	tÊex_uöt8_t
;

74 
	tÊex_uöt16_t
;

75 
	tÊex_uöt32_t
;

79 #i‚de‡
INT8_MIN


80 
	#INT8_MIN
 (-128)

	)

82 #i‚de‡
INT16_MIN


83 
	#INT16_MIN
 (-32767-1)

	)

85 #i‚de‡
INT32_MIN


86 
	#INT32_MIN
 (-2147483647-1)

	)

88 #i‚de‡
INT8_MAX


89 
	#INT8_MAX
 (127)

	)

91 #i‚de‡
INT16_MAX


92 
	#INT16_MAX
 (32767)

	)

94 #i‚de‡
INT32_MAX


95 
	#INT32_MAX
 (2147483647)

	)

97 #i‚de‡
UINT8_MAX


98 
	#UINT8_MAX
 (255U)

	)

100 #i‚de‡
UINT16_MAX


101 
	#UINT16_MAX
 (65535U)

	)

103 #i‚de‡
UINT32_MAX


104 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`mdt_fûîe°¨t
(
mdt_fûeö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 
mdt_fûñíg
;

177 
FILE
 *
mdt_fûeö
, *
mdt_fûeout
;

179 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

180 
	#EOB_ACT_END_OF_FILE
 1

	)

181 
	#EOB_ACT_LAST_MATCH
 2

	)

183 
	#YY_LESS_LINENO
(
n
)

	)

186 
	#yyÀss
(
n
) \

190 
yyÀss_ma¸o_¨g
 = (
n
); \

191 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

192 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

193 
YY_RESTORE_YY_MORE_OFFSET
 \

194 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

195 
YY_DO_BEFORE_ACTION
; \

197  0 )

	)

199 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

201 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


202 
	#YY_TYPEDEF_YY_SIZE_T


	)

203 
size_t
 
	tyy_size_t
;

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
	gyy_n_ch¨s
;

294 
	gmdt_fûñíg
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
mdt_fûîe°¨t
 (
FILE
 *
öput_fûe
 );

307 
mdt_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
mdt_fûe_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
mdt_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
mdt_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
mdt_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
mdt_fûï›_buf„r_°©e
 ();

314 
mdt_fûìnsuª_buf„r_°ack
 ();

315 
mdt_fûe_lﬂd_buf„r_°©e
 ();

316 
mdt_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`mdt_fûe_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
mdt_fûe_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
mdt_fûe_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
mdt_fûe_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

324 *
mdt_fûóŒoc
 (
yy_size_t
 );

325 *
mdt_fûîóŒoc
 (*,
yy_size_t
 );

326 
mdt_fûe‰ì
 (* );

328 
	#yy_√w_buf„r
 
mdt_fûe_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`mdt_fûìnsuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`mdt_fûe_¸óã_buf„r
(
mdt_fûeö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`mdt_fûìnsuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`mdt_fûe_¸óã_buf„r
(
mdt_fûeö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	#mdt_fûewøp
(
n
Ë1

	)

355 
	#YY_SKIP_YYWRAP


	)

357 
	tYY_CHAR
;

359 
FILE
 *
	gmdt_fûeö
 = (FILE *Ë0, *
	gmdt_fûeout
 = (FILE *) 0;

361 
	tyy_°©e_ty≥
;

363 
mdt_fûñöío
;

365 
	gmdt_fûñöío
 = 1;

367 *
mdt_fûëext
;

368 
	#yyãxt_±r
 
mdt_fûëext


	)

370 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

371 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

372 
yy_gë_√xt_buf„r
 ();

373 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

378 
	#YY_DO_BEFORE_ACTION
 \

379 (
yyãxt_±r
Ë
yy_bp
; \

380 
mdt_fûñíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

381 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

382 *
yy_˝
 = '\0'; \

383 (
yy_c_buf_p
Ë
yy_˝
;

	)

385 
	#YY_NUM_RULES
 144

	)

386 
	#YY_END_OF_BUFFER
 145

	)

389 
	syy_å™s_öfo


391 
Êex_öt32_t
 
	myy_vîify
;

392 
Êex_öt32_t
 
	myy_nxt
;

394 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[550] =

458 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

490 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[40] =

498 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[583] =

566 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[583] =

634 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[1058] =

754 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[1058] =

874 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

875 *
	gyy_œ°_ac˚±ög_˝os
;

877 
mdt_fûe_Êex_debug
;

878 
	gmdt_fûe_Êex_debug
 = 0;

883 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

884 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

885 
	#YY_MORE_ADJ
 0

	)

886 
	#YY_RESTORE_YY_MORE_OFFSET


	)

887 *
	gmdt_fûëext
;

897 
	~"mdt_fûe.h
"

898 
	~"mdt_fûe.èb.hµ
"

900 
usög
 
«me•a˚
 
	g°d
;

902 
	gmdt_fûñöe
 = 1;

903 
boﬁ
 
	gmdt_fûew¨nög
 = 1;

904 
	gmdt_fûï¨í
 = 0;

907 
mdt_fûeskùSˇnDef
();

910 
mdt_fûeskùCñlTy≥
();

911 
mdt_fûeskùU£d
();

912 
mdt_fûeskùClock
();

913 
mdt_fûeskùNoFau…
();

914 
mdt_fûeskùFun˘i⁄
();

915 
mdt_fûeskùFau…
();

916 
mdt_fûeskùSëClk
();

917 
mdt_fûeskùRe£tClk
();

918 
mdt_fûeskùBusKì≥r
();

919 
mdt_fûeskùAºayDñ
();

920 
mdt_fûeskùAºay
();

921 
mdt_fûeskùPul£
();

922 
mdt_fûeskùPöNoFau…
();

925 
mdt_fûeskùD©aSize
();

926 
mdt_fûeskùAddrSize
();

927 
mdt_fûeskùRom
();

928 
mdt_fûeskùRam
();

929 
mdt_fûeskùCøm
();

930 
mdt_fûeskùMöAddr
();

931 
mdt_fûeskùMaxAddr
();

932 
mdt_fûeskùRódOff
();

933 
mdt_fûeskùInôFûe
();

934 
mdt_fûeskùEdgeTriggî
();

935 
mdt_fûeskùAddrTy≥
();

936 
mdt_fûeskùRrC⁄Êi˘
();

937 
mdt_fûeskùRwC⁄Êi˘
();

938 
mdt_fûeskùWrôeC⁄ã¡i⁄
();

939 
mdt_fûeskùOvîwrôe
();

942 
mdt_fûeskùMa¸o
();

943 
mdt_fûeskùAlüs
();

944 
mdt_fûeskùIn˛ude
();

954 
	#INITIAL
 0

	)

955 
	#SCAN_DEF
 1

	)

956 
	#CELL_TYPE
 2

	)

957 
	#USED
 3

	)

958 
	#CLOCK
 4

	)

959 
	#NO_FAULT
 5

	)

960 
	#FUNCTION
 6

	)

961 
	#FAULT
 7

	)

962 
	#SET_CLK
 8

	)

963 
	#RESET_CLK
 9

	)

964 
	#BUS_KEEPER
 10

	)

965 
	#ARRAY_DEL
 11

	)

966 
	#ARRAY
 12

	)

967 
	#PULSE
 13

	)

968 
	#DATA_SIZE
 14

	)

969 
	#ADDR_SIZE
 15

	)

970 
	#ROM
 16

	)

971 
	#RAM
 17

	)

972 
	#CRAM
 18

	)

973 
	#MIN_ADDR
 19

	)

974 
	#MAX_ADDR
 20

	)

975 
	#READ_OFF
 21

	)

976 
	#INIT_FILE
 22

	)

977 
	#EDGE_TRIGGER
 23

	)

978 
	#ADDR_TYPE
 24

	)

979 
	#RR_CONFLICT
 25

	)

980 
	#RW_CONFLICT
 26

	)

981 
	#WRT_CONTENTION
 27

	)

982 
	#OVERWRITE
 28

	)

983 
	#MACRO
 29

	)

984 
	#ALIAS
 30

	)

985 
	#INCLUDE
 31

	)

987 #i‚de‡
YY_NO_UNISTD_H


992 
	~<uni°d.h
>

995 #i‚de‡
YY_EXTRA_TYPE


996 
	#YY_EXTRA_TYPE
 *

	)

999 
yy_öô_globÆs
 ();

1004 
mdt_fûñex_de°roy
 ();

1006 
mdt_fûegë_debug
 ();

1008 
mdt_fûe£t_debug
 (
debug_Êag
 );

1010 
YY_EXTRA_TYPE
 
mdt_fûegë_exåa
 ();

1012 
mdt_fûe£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

1014 
FILE
 *
mdt_fûegë_ö
 ();

1016 
mdt_fûe£t_ö
 (
FILE
 * 
ö_°r
 );

1018 
FILE
 *
mdt_fûegë_out
 ();

1020 
mdt_fûe£t_out
 (
FILE
 * 
out_°r
 );

1022 
mdt_fûegë_Àng
 ();

1024 *
mdt_fûegë_ãxt
 ();

1026 
mdt_fûegë_löío
 ();

1028 
mdt_fûe£t_löío
 (
löe_numbî
 );

1034 #i‚de‡
YY_SKIP_YYWRAP


1035 #ifde‡
__˝lu•lus


1036 "C" 
mdt_fûewøp
 ();

1038 
mdt_fûewøp
 ();

1042 #i‚de‡
yyãxt_±r


1043 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

1046 #ifde‡
YY_NEED_STRLEN


1047 
yy_Êex_°æí
 (
yyc⁄°
 * );

1050 #i‚de‡
YY_NO_INPUT


1052 #ifde‡
__˝lu•lus


1053 
yyöput
 ();

1055 
öput
 ();

1061 #i‚de‡
YY_READ_BUF_SIZE


1062 
	#YY_READ_BUF_SIZE
 8192

	)

1066 #i‚de‡
ECHO


1070 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
mdt_fûëext
, 
mdt_fûñíg
, 1, 
mdt_fûeout
 )Ë{} } 0)

	)

1076 #i‚de‡
YY_INPUT


1077 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

1078 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

1080 
c
 = '*'; \

1081 
n
; \

1082  
n
 = 0;Ç < 
max_size
 && \

1083 (
c
 = 
	`gëc
–
mdt_fûeö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

1084 
buf
[
n
] = (Ë
c
; \

1085 i‡–
c
 == '\n' ) \

1086 
buf
[
n
++] = (Ë
c
; \

1087 i‡–
c
 =
EOF
 && 
	`„º‹
–
mdt_fûeö
 ) ) \

1088 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1089 
ªsu…
 = 
n
; \

1093 
î∫o
=0; \

1094  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
mdt_fûeö
))==0 && 
	`„º‹
(mdt_filein)) \

1096 if–
î∫o
 !
EINTR
) \

1098 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1101 
î∫o
=0; \

1102 
	`˛óªº
(
mdt_fûeö
); \

1106 

	)

1113 #i‚de‡
yyãrmö©e


1114 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1118 #i‚de‡
YY_START_STACK_INCR


1119 
	#YY_START_STACK_INCR
 25

	)

1123 #i‚de‡
YY_FATAL_ERROR


1124 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1132 #i‚de‡
YY_DECL


1133 
	#YY_DECL_IS_OURS
 1

	)

1135 
mdt_fûñex
 ();

1137 
	#YY_DECL
 
	`mdt_fûñex
 ()

	)

1143 #i‚de‡
YY_USER_ACTION


1144 
	#YY_USER_ACTION


	)

1148 #i‚de‡
YY_BREAK


1149 
	#YY_BREAK
 ;

	)

1152 
	#YY_RULE_SETUP
 \

1153 
YY_USER_ACTION


	)

1157 
	gYY_DECL


1159 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1160 *
	gyy_˝
, *
	gyy_bp
;

1161 
	gyy_a˘
;

1168 i‡–!(
	gyy_öô
) )

1170 (
	gyy_öô
) = 1;

1172 #ifde‡
YY_USER_INIT


1173 
	gYY_USER_INIT
;

1176 i‡–! (
	gyy_°¨t
) )

1177 (
	gyy_°¨t
) = 1;

1179 i‡–! 
	gmdt_fûeö
 )

1180 
	gmdt_fûeö
 = 
°dö
;

1182 i‡–! 
	gmdt_fûeout
 )

1183 
	gmdt_fûeout
 = 
°dout
;

1185 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1186 
mdt_fûìnsuª_buf„r_°ack
 ();

1187 
	gYY_CURRENT_BUFFER_LVALUE
 =

1188 
mdt_fûe_¸óã_buf„r
(
mdt_fûeö
,
YY_BUF_SIZE
 );

1191 
mdt_fûe_lﬂd_buf„r_°©e
( );

1196 
	gyy_˝
 = (
yy_c_buf_p
);

1199 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1204 
	gyy_bp
 = 
yy_˝
;

1206 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1207 
	gyy_m©ch
:

1210 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

1211 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1213 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1214 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1216  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1218 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1219 i‡–
	gyy_cuºít_°©e
 >= 550 )

1220 
yy_c
 = 
yy_mëa
[() yy_c];

1222 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

1223 ++
	gyy_˝
;

1225  
	gyy_ba£
[
yy_cuºít_°©e
] != 1018 );

1227 
	gyy_föd_a˘i⁄
:

1228 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1229 i‡–
	gyy_a˘
 == 0 )

1231 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1232 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1233 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1236 
	gYY_DO_BEFORE_ACTION
;

1238 
	gdo_a˘i⁄
:

1240  
yy_a˘
 )

1244 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1245 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1246 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1247 
	gyy_föd_a˘i⁄
;

1250 
YY_RULE_SETUP


1253 
YY_BREAK


1256 
YY_RULE_SETUP


1258 { 
mdt_fûï¨í
++;

1259 
BEGIN
 
	gSCAN_DEF
; }

1260 
YY_BREAK


1262 
YY_RULE_SETUP


1264 { 
mdt_fûï¨í
--;

1265 i‡(
	gmdt_fûï¨í
 == 0) {

1266 
mdt_fûeskùSˇnDef
();

1267 
BEGIN
(
INITIAL
);

1270 
YY_BREAK


1272 
YY_RULE_SETUP


1274 { 
mdt_fûï¨í
++; }

1275 
YY_BREAK


1278 
YY_RULE_SETUP


1280 { 
mdt_fûñöe
++; }

1281 
YY_BREAK


1283 
YY_RULE_SETUP


1286 
YY_BREAK


1289 
YY_RULE_SETUP


1291 
BEGIN
 
CELL_TYPE
 ;

1292 
YY_BREAK


1294 
YY_RULE_SETUP


1296 { 
mdt_fûeskùCñlTy≥
();

1297 
BEGIN
(
INITIAL
); }

1298 
YY_BREAK


1301 
YY_RULE_SETUP


1303 { 
mdt_fûñöe
++; }

1304 
YY_BREAK


1306 
YY_RULE_SETUP


1309 
YY_BREAK


1312 
YY_RULE_SETUP


1314 
BEGIN
 
USED
 ;

1315 
YY_BREAK


1317 
YY_RULE_SETUP


1319 { 
mdt_fûeskùU£d
();

1320 
BEGIN
(
INITIAL
); }

1321 
YY_BREAK


1324 
YY_RULE_SETUP


1326 { 
mdt_fûñöe
++; }

1327 
YY_BREAK


1329 
YY_RULE_SETUP


1332 
YY_BREAK


1335 
YY_RULE_SETUP


1337 
BEGIN
 
CLOCK
 ;

1338 
YY_BREAK


1340 
YY_RULE_SETUP


1342 { 
mdt_fûeskùClock
();

1343 
BEGIN
(
INITIAL
); }

1344 
YY_BREAK


1347 
YY_RULE_SETUP


1349 { 
mdt_fûñöe
++; }

1350 
YY_BREAK


1352 
YY_RULE_SETUP


1355 
YY_BREAK


1358 
YY_RULE_SETUP


1360 
BEGIN
 
NO_FAULT
 ;

1361 
YY_BREAK


1363 
YY_RULE_SETUP


1365 { 
mdt_fûeskùNoFau…
();

1366 
BEGIN
(
INITIAL
); }

1367 
YY_BREAK


1370 
YY_RULE_SETUP


1372 { 
mdt_fûñöe
++; }

1373 
YY_BREAK


1375 
YY_RULE_SETUP


1378 
YY_BREAK


1381 
YY_RULE_SETUP


1383 
BEGIN
 
FUNCTION
 ;

1384 
YY_BREAK


1386 
YY_RULE_SETUP


1388 { 
mdt_fûeskùFun˘i⁄
();

1389 
BEGIN
(
INITIAL
); }

1390 
YY_BREAK


1393 
YY_RULE_SETUP


1395 { 
mdt_fûñöe
++; }

1396 
YY_BREAK


1398 
YY_RULE_SETUP


1401 
YY_BREAK


1404 
YY_RULE_SETUP


1406 
BEGIN
 
FAULT
 ;

1407 
YY_BREAK


1409 
YY_RULE_SETUP


1411 { 
mdt_fûeskùFau…
();

1412 
BEGIN
(
INITIAL
); }

1413 
YY_BREAK


1416 
YY_RULE_SETUP


1418 { 
mdt_fûñöe
++; }

1419 
YY_BREAK


1421 
YY_RULE_SETUP


1424 
YY_BREAK


1427 
YY_RULE_SETUP


1429 
BEGIN
 
SET_CLK
 ;

1430 
YY_BREAK


1432 
YY_RULE_SETUP


1434 { 
mdt_fûeskùSëClk
();

1435 
BEGIN
(
INITIAL
); }

1436 
YY_BREAK


1439 
YY_RULE_SETUP


1441 { 
mdt_fûñöe
++; }

1442 
YY_BREAK


1444 
YY_RULE_SETUP


1447 
YY_BREAK


1450 
YY_RULE_SETUP


1452 
BEGIN
 
RESET_CLK
;

1453 
YY_BREAK


1455 
YY_RULE_SETUP


1457 { 
mdt_fûeskùRe£tClk
();

1458 
BEGIN
(
INITIAL
); }

1459 
YY_BREAK


1462 
YY_RULE_SETUP


1464 { 
mdt_fûñöe
++; }

1465 
YY_BREAK


1467 
YY_RULE_SETUP


1470 
YY_BREAK


1473 
YY_RULE_SETUP


1475 
BEGIN
 
BUS_KEEPER
 ;

1476 
YY_BREAK


1478 
YY_RULE_SETUP


1480 { 
mdt_fûeskùBusKì≥r
();

1481 
BEGIN
(
INITIAL
); }

1482 
YY_BREAK


1485 
YY_RULE_SETUP


1487 { 
mdt_fûñöe
++; }

1488 
YY_BREAK


1490 
YY_RULE_SETUP


1493 
YY_BREAK


1496 
YY_RULE_SETUP


1498 
BEGIN
 
ARRAY_DEL
 ;

1499 
YY_BREAK


1501 
YY_RULE_SETUP


1503 { 
mdt_fûeskùAºayDñ
();

1504 
BEGIN
(
INITIAL
); }

1505 
YY_BREAK


1508 
YY_RULE_SETUP


1510 { 
mdt_fûñöe
++; }

1511 
YY_BREAK


1513 
YY_RULE_SETUP


1516 
YY_BREAK


1519 
YY_RULE_SETUP


1521 
BEGIN
 
ARRAY
 ;

1522 
YY_BREAK


1524 
YY_RULE_SETUP


1526 { 
mdt_fûeskùAºay
();

1527 
BEGIN
(
INITIAL
); }

1528 
YY_BREAK


1531 
YY_RULE_SETUP


1533 { 
mdt_fûñöe
++; }

1534 
YY_BREAK


1536 
YY_RULE_SETUP


1539 
YY_BREAK


1542 
YY_RULE_SETUP


1544 
BEGIN
 
PULSE
;

1545 
YY_BREAK


1547 
YY_RULE_SETUP


1549 { 
mdt_fûeskùPul£
();

1550 
BEGIN
(
INITIAL
); }

1551 
YY_BREAK


1554 
YY_RULE_SETUP


1556 { 
mdt_fûñöe
++; }

1557 
YY_BREAK


1559 
YY_RULE_SETUP


1562 
YY_BREAK


1565 
YY_RULE_SETUP


1567 
BEGIN
 
ROM
 ;

1568 
YY_BREAK


1570 
YY_RULE_SETUP


1572 { 
mdt_fûeskùRom
();

1573 
BEGIN
(
INITIAL
); }

1574 
YY_BREAK


1577 
YY_RULE_SETUP


1579 { 
mdt_fûñöe
++; }

1580 
YY_BREAK


1582 
YY_RULE_SETUP


1585 
YY_BREAK


1588 
YY_RULE_SETUP


1590 
BEGIN
 
RAM
 ;

1591 
YY_BREAK


1593 
YY_RULE_SETUP


1595 { 
mdt_fûeskùRam
();

1596 
BEGIN
(
INITIAL
); }

1597 
YY_BREAK


1600 
YY_RULE_SETUP


1602 { 
mdt_fûñöe
++; }

1603 
YY_BREAK


1605 
YY_RULE_SETUP


1608 
YY_BREAK


1611 
YY_RULE_SETUP


1613 
BEGIN
 
CRAM
 ;

1614 
YY_BREAK


1616 
YY_RULE_SETUP


1618 { 
mdt_fûeskùCøm
();

1619 
BEGIN
(
INITIAL
); }

1620 
YY_BREAK


1623 
YY_RULE_SETUP


1625 { 
mdt_fûñöe
++; }

1626 
YY_BREAK


1628 
YY_RULE_SETUP


1631 
YY_BREAK


1634 
YY_RULE_SETUP


1636 
BEGIN
 
DATA_SIZE
 ;

1637 
YY_BREAK


1639 
YY_RULE_SETUP


1641 { 
mdt_fûeskùD©aSize
();

1642 
BEGIN
(
INITIAL
); }

1643 
YY_BREAK


1646 
YY_RULE_SETUP


1648 { 
mdt_fûñöe
++; }

1649 
YY_BREAK


1651 
YY_RULE_SETUP


1654 
YY_BREAK


1657 
YY_RULE_SETUP


1659 
BEGIN
 
ADDR_SIZE
 ;

1660 
YY_BREAK


1662 
YY_RULE_SETUP


1664 { 
mdt_fûeskùAddrSize
();

1665 
BEGIN
(
INITIAL
); }

1666 
YY_BREAK


1669 
YY_RULE_SETUP


1671 { 
mdt_fûñöe
++; }

1672 
YY_BREAK


1674 
YY_RULE_SETUP


1677 
YY_BREAK


1680 
YY_RULE_SETUP


1682 
BEGIN
 
MIN_ADDR
 ;

1683 
YY_BREAK


1685 
YY_RULE_SETUP


1687 { 
mdt_fûeskùMöAddr
();

1688 
BEGIN
(
INITIAL
); }

1689 
YY_BREAK


1692 
YY_RULE_SETUP


1694 { 
mdt_fûñöe
++; }

1695 
YY_BREAK


1697 
YY_RULE_SETUP


1700 
YY_BREAK


1703 
YY_RULE_SETUP


1705 
BEGIN
 
MAX_ADDR
 ;

1706 
YY_BREAK


1708 
YY_RULE_SETUP


1710 { 
mdt_fûeskùMaxAddr
();

1711 
BEGIN
(
INITIAL
); }

1712 
YY_BREAK


1715 
YY_RULE_SETUP


1717 { 
mdt_fûñöe
++; }

1718 
YY_BREAK


1720 
YY_RULE_SETUP


1723 
YY_BREAK


1726 
YY_RULE_SETUP


1728 
BEGIN
 
READ_OFF
 ;

1729 
YY_BREAK


1731 
YY_RULE_SETUP


1733 { 
mdt_fûeskùRódOff
();

1734 
BEGIN
(
INITIAL
); }

1735 
YY_BREAK


1738 
YY_RULE_SETUP


1740 { 
mdt_fûñöe
++; }

1741 
YY_BREAK


1743 
YY_RULE_SETUP


1746 
YY_BREAK


1749 
YY_RULE_SETUP


1751 
BEGIN
 
INIT_FILE
 ;

1752 
YY_BREAK


1754 
YY_RULE_SETUP


1756 { 
mdt_fûeskùInôFûe
();

1757 
BEGIN
(
INITIAL
); }

1758 
YY_BREAK


1761 
YY_RULE_SETUP


1763 { 
mdt_fûñöe
++; }

1764 
YY_BREAK


1766 
YY_RULE_SETUP


1769 
YY_BREAK


1772 
YY_RULE_SETUP


1774 
BEGIN
 
EDGE_TRIGGER
 ;

1775 
YY_BREAK


1777 
YY_RULE_SETUP


1779 { 
mdt_fûeskùEdgeTriggî
();

1780 
BEGIN
(
INITIAL
); }

1781 
YY_BREAK


1784 
YY_RULE_SETUP


1786 { 
mdt_fûñöe
++; }

1787 
YY_BREAK


1789 
YY_RULE_SETUP


1792 
YY_BREAK


1795 
YY_RULE_SETUP


1797 
BEGIN
 
ADDR_TYPE
 ;

1798 
YY_BREAK


1800 
YY_RULE_SETUP


1802 { 
mdt_fûeskùAddrTy≥
();

1803 
BEGIN
(
INITIAL
); }

1804 
YY_BREAK


1807 
YY_RULE_SETUP


1809 { 
mdt_fûñöe
++; }

1810 
YY_BREAK


1812 
YY_RULE_SETUP


1815 
YY_BREAK


1818 
YY_RULE_SETUP


1820 
BEGIN
 
RR_CONFLICT
;

1821 
YY_BREAK


1823 
YY_RULE_SETUP


1825 { 
mdt_fûeskùRrC⁄Êi˘
();

1826 
BEGIN
(
INITIAL
); }

1827 
YY_BREAK


1830 
YY_RULE_SETUP


1832 { 
mdt_fûñöe
++; }

1833 
YY_BREAK


1835 
YY_RULE_SETUP


1838 
YY_BREAK


1841 
YY_RULE_SETUP


1843 
BEGIN
 
RW_CONFLICT
;

1844 
YY_BREAK


1846 
YY_RULE_SETUP


1848 { 
mdt_fûeskùRwC⁄Êi˘
();

1849 
BEGIN
(
INITIAL
); }

1850 
YY_BREAK


1853 
YY_RULE_SETUP


1855 { 
mdt_fûñöe
++; }

1856 
YY_BREAK


1858 
YY_RULE_SETUP


1861 
YY_BREAK


1864 
YY_RULE_SETUP


1866 
BEGIN
 
WRT_CONTENTION
;

1867 
YY_BREAK


1869 
YY_RULE_SETUP


1871 { 
mdt_fûeskùWrôeC⁄ã¡i⁄
();

1872 
BEGIN
(
INITIAL
); }

1873 
YY_BREAK


1876 
YY_RULE_SETUP


1878 { 
mdt_fûñöe
++; }

1879 
YY_BREAK


1881 
YY_RULE_SETUP


1884 
YY_BREAK


1887 
YY_RULE_SETUP


1889 
BEGIN
 
OVERWRITE
;

1890 
YY_BREAK


1892 
YY_RULE_SETUP


1894 { 
mdt_fûeskùOvîwrôe
();

1895 
BEGIN
(
INITIAL
); }

1896 
YY_BREAK


1899 
YY_RULE_SETUP


1901 { 
mdt_fûñöe
++; }

1902 
YY_BREAK


1904 
YY_RULE_SETUP


1907 
YY_BREAK


1910 
YY_RULE_SETUP


1912 
BEGIN
 
MACRO
 ;

1913 
YY_BREAK


1915 
YY_RULE_SETUP


1917 { 
mdt_fûï¨í
--;

1918 i‡(
	gmdt_fûï¨í
 == 0) {

1919 
mdt_fûeskùMa¸o
();

1920 
BEGIN
(
INITIAL
);

1923 
YY_BREAK


1925 
YY_RULE_SETUP


1927 { 
mdt_fûï¨í
++; }

1928 
YY_BREAK


1931 
YY_RULE_SETUP


1933 { 
mdt_fûñöe
++; }

1934 
YY_BREAK


1936 
YY_RULE_SETUP


1939 
YY_BREAK


1942 
YY_RULE_SETUP


1944 
BEGIN
 
ALIAS
 ;

1945 
YY_BREAK


1948 
YY_RULE_SETUP


1950 { 
mdt_fûñöe
++;

1951 
mdt_fûeskùAlüs
();

1952 
BEGIN
(
INITIAL
); }

1953 
YY_BREAK


1955 
YY_RULE_SETUP


1958 
YY_BREAK


1961 
YY_RULE_SETUP


1963 
BEGIN
 
INCLUDE
 ;

1964 
YY_BREAK


1967 
YY_RULE_SETUP


1969 { 
mdt_fûñöe
++;

1970 
mdt_fûeskùIn˛ude
();

1971 
BEGIN
(
INITIAL
); }

1972 
YY_BREAK


1974 
YY_RULE_SETUP


1977 
YY_BREAK


1979 
YY_RULE_SETUP


1981 {  
MODEL
; }

1982 
YY_BREAK


1984 
YY_RULE_SETUP


1986 {  
MODEL_SOURCE
; }

1987 
YY_BREAK


1989 
YY_RULE_SETUP


1991 {  
INPUT
; }

1992 
YY_BREAK


1994 
YY_RULE_SETUP


1996 {  
OUTPUT
; }

1997 
YY_BREAK


1999 
YY_RULE_SETUP


2001 {  
INOUT
; }

2002 
YY_BREAK


2004 
YY_RULE_SETUP


2006 {  
INTERN
; }

2007 
YY_BREAK


2009 
YY_RULE_SETUP


2011 {  
PRIMITIVE
; }

2012 
YY_BREAK


2014 
YY_RULE_SETUP


2016 {  
INSTANCE
; }

2017 
YY_BREAK


2019 
YY_RULE_SETUP


2022 *
pch
 = 
°ºchr
(
mdt_fûëext
, ':');

2023 
	gÀn
 = 
pch
 - 
mdt_fûëext
;

2024 
°∫˝y
(
mdt_fûñvÆ
.
ych¨
, 
mdt_fûëext
, 
Àn
);

2025 
	gmdt_fûñvÆ
.
	gych¨
[
Àn
 + 1] = '\0';

2026 
mdt_fûeskùPöNoFau…
();

2027  
	gNAME
;

2029 
YY_BREAK


2031 
YY_RULE_SETUP


2034 
°r˝y
(
mdt_fûñvÆ
.
ych¨
, 
mdt_fûëext
);

2035  
	gNAME
;

2037 
YY_BREAK


2039 
YY_RULE_SETUP


2041 {  
mdt_fûëext
[0]; }

2042 
YY_BREAK


2044 
YY_RULE_SETUP


2046 {  
mdt_fûëext
[0]; }

2047 
YY_BREAK


2049 
YY_RULE_SETUP


2051 {  
mdt_fûëext
[0]; }

2052 
YY_BREAK


2054 
YY_RULE_SETUP


2056 {  
mdt_fûëext
[0]; }

2057 
YY_BREAK


2059 
YY_RULE_SETUP


2061 {  
mdt_fûëext
[0]; }

2062 
YY_BREAK


2065 
YY_RULE_SETUP


2067 { 
mdt_fûñöe
++; }

2068 
YY_BREAK


2070 
YY_RULE_SETUP


2073 
YY_BREAK


2075 
YY_RULE_SETUP


2078 
YY_BREAK


2080 
YY_RULE_SETUP


2082 
ECHO
;

2083 
	gYY_BREAK


2085 
YY_STATE_EOF
(
INITIAL
):

2086 
YY_STATE_EOF
(
SCAN_DEF
):

2087 
YY_STATE_EOF
(
CELL_TYPE
):

2088 
YY_STATE_EOF
(
USED
):

2089 
YY_STATE_EOF
(
CLOCK
):

2090 
YY_STATE_EOF
(
NO_FAULT
):

2091 
YY_STATE_EOF
(
FUNCTION
):

2092 
YY_STATE_EOF
(
FAULT
):

2093 
YY_STATE_EOF
(
SET_CLK
):

2094 
YY_STATE_EOF
(
RESET_CLK
):

2095 
YY_STATE_EOF
(
BUS_KEEPER
):

2096 
YY_STATE_EOF
(
ARRAY_DEL
):

2097 
YY_STATE_EOF
(
ARRAY
):

2098 
YY_STATE_EOF
(
PULSE
):

2099 
YY_STATE_EOF
(
DATA_SIZE
):

2100 
YY_STATE_EOF
(
ADDR_SIZE
):

2101 
YY_STATE_EOF
(
ROM
):

2102 
YY_STATE_EOF
(
RAM
):

2103 
YY_STATE_EOF
(
CRAM
):

2104 
YY_STATE_EOF
(
MIN_ADDR
):

2105 
YY_STATE_EOF
(
MAX_ADDR
):

2106 
YY_STATE_EOF
(
READ_OFF
):

2107 
YY_STATE_EOF
(
INIT_FILE
):

2108 
YY_STATE_EOF
(
EDGE_TRIGGER
):

2109 
YY_STATE_EOF
(
ADDR_TYPE
):

2110 
YY_STATE_EOF
(
RR_CONFLICT
):

2111 
YY_STATE_EOF
(
RW_CONFLICT
):

2112 
YY_STATE_EOF
(
WRT_CONTENTION
):

2113 
YY_STATE_EOF
(
OVERWRITE
):

2114 
YY_STATE_EOF
(
MACRO
):

2115 
YY_STATE_EOF
(
ALIAS
):

2116 
YY_STATE_EOF
(
INCLUDE
):

2117 
yyãrmö©e
();

2119 
	gYY_END_OF_BUFFER
:

2122 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

2125 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

2126 
YY_RESTORE_YY_MORE_OFFSET


2128 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

2139 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2140 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
mdt_fûeö
;

2141 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

2151 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2153 
yy_°©e_ty≥
 
yy_√xt_°©e
;

2155 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2157 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2168 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

2170 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2172 i‡–
	gyy_√xt_°©e
 )

2175 
	gyy_˝
 = ++(
yy_c_buf_p
);

2176 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

2177 
	gyy_m©ch
;

2182 
	gyy_˝
 = (
yy_c_buf_p
);

2183 
	gyy_föd_a˘i⁄
;

2187  
yy_gë_√xt_buf„r
( ) )

2189 
	gEOB_ACT_END_OF_FILE
:

2191 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

2193 i‡–
mdt_fûewøp
( ) )

2204 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2206 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

2207 
	gdo_a˘i⁄
;

2212 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

2213 
	gYY_NEW_FILE
;

2218 
	gEOB_ACT_CONTINUE_SCAN
:

2219 (
yy_c_buf_p
) =

2220 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2222 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2224 
	gyy_˝
 = (
yy_c_buf_p
);

2225 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2226 
	gyy_m©ch
;

2228 
	gEOB_ACT_LAST_MATCH
:

2229 (
yy_c_buf_p
) =

2230 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

2232 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2234 
	gyy_˝
 = (
yy_c_buf_p
);

2235 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2236 
	gyy_föd_a˘i⁄
;

2242 
YY_FATAL_ERROR
(

2255 
	$yy_gë_√xt_buf„r
 ()

2257 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

2258 *
sour˚
 = (
yyãxt_±r
);

2259 
numbî_to_move
, 
i
;

2260 
ªt_vÆ
;

2262 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

2263 
	`YY_FATAL_ERROR
(

2266 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

2268 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

2273  
EOB_ACT_END_OF_FILE
;

2281  
EOB_ACT_LAST_MATCH
;

2288 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

2290  
i
 = 0; i < 
numbî_to_move
; ++i )

2291 *(
de°
++Ë*(
sour˚
++);

2293 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

2297 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

2301 
num_to_ªad
 =

2302 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

2304  
num_to_ªad
 <= 0 )

2308 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

2310 
yy_c_buf_p_off£t
 =

2311 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

2313 i‡–
b
->
yy_is_our_buf„r
 )

2315 
√w_size
 = 
b
->
yy_buf_size
 * 2;

2317 i‡–
√w_size
 <= 0 )

2318 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

2320 
b
->
yy_buf_size
 *= 2;

2322 
b
->
yy_ch_buf
 = (*)

2324 
	`mdt_fûîóŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

2328 
b
->
yy_ch_buf
 = 0;

2330 i‡–! 
b
->
yy_ch_buf
 )

2331 
	`YY_FATAL_ERROR
(

2334 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

2336 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

2337 
numbî_to_move
 - 1;

2341 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

2342 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

2345 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

2346 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

2348 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2351 i‡–(
yy_n_ch¨s
) == 0 )

2353 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

2355 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

2356 
	`mdt_fûîe°¨t
(
mdt_fûeö
 );

2361 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

2362 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

2363 
YY_BUFFER_EOF_PENDING
;

2368 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

2370 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

2372 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

2373 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`mdt_fûîóŒoc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

2374 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2375 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

2378 (
yy_n_ch¨s
Ë+
numbî_to_move
;

2379 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

2380 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

2382 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

2384  
ªt_vÆ
;

2385 
	}
}

2389 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

2391 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

2392 *
yy_˝
;

2394 
yy_cuºít_°©e
 = (
yy_°¨t
);

2396  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

2398 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

2399 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2401 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2402 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2404  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2406 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2407 i‡–
yy_cuºít_°©e
 >= 550 )

2408 
yy_c
 = 
yy_mëa
[() yy_c];

2410 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2413  
yy_cuºít_°©e
;

2414 
	}
}

2421 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2423 
yy_is_jam
;

2424 *
yy_˝
 = (
yy_c_buf_p
);

2426 
YY_CHAR
 
yy_c
 = 1;

2427 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2429 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2430 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2432  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2434 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2435 i‡–
yy_cuºít_°©e
 >= 550 )

2436 
yy_c
 = 
yy_mëa
[() yy_c];

2438 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2439 
yy_is_jam
 = (
yy_cuºít_°©e
 == 549);

2441  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2442 
	}
}

2444 #i‚de‡
YY_NO_INPUT


2445 #ifde‡
__˝lu•lus


2446 
	$yyöput
 ()

2448 
	$öput
 ()

2452 
c
;

2454 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2456 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2462 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2464 *(
yy_c_buf_p
) = '\0';

2468 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

2469 ++(
yy_c_buf_p
);

2471  
	`yy_gë_√xt_buf„r
( ) )

2473 
EOB_ACT_LAST_MATCH
:

2485 
	`mdt_fûîe°¨t
(
mdt_fûeö
 );

2489 
EOB_ACT_END_OF_FILE
:

2491 i‡–
	`mdt_fûewøp
( ) )

2492  
EOF
;

2494 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2495 
YY_NEW_FILE
;

2496 #ifde‡
__˝lu•lus


2497  
	`yyöput
();

2499  
	`öput
();

2503 
EOB_ACT_CONTINUE_SCAN
:

2504 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2510 
c
 = *(*Ë(
yy_c_buf_p
);

2511 *(
yy_c_buf_p
) = '\0';

2512 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2514  
c
;

2515 
	}
}

2523 
	$mdt_fûîe°¨t
 (
FILE
 * 
öput_fûe
 )

2526 i‡–! 
YY_CURRENT_BUFFER
 ){

2527 
	`mdt_fûìnsuª_buf„r_°ack
 ();

2528 
YY_CURRENT_BUFFER_LVALUE
 =

2529 
	`mdt_fûe_¸óã_buf„r
(
mdt_fûeö
,
YY_BUF_SIZE
 );

2532 
	`mdt_fûe_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

2533 
	`mdt_fûe_lﬂd_buf„r_°©e
( );

2534 
	}
}

2540 
	$mdt_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2548 
	`mdt_fûìnsuª_buf„r_°ack
 ();

2549 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2552 i‡–
YY_CURRENT_BUFFER
 )

2555 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2556 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2557 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2560 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2561 
	`mdt_fûe_lﬂd_buf„r_°©e
( );

2568 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2569 
	}
}

2571 
	$mdt_fûe_lﬂd_buf„r_°©e
 ()

2573 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2574 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2575 
mdt_fûeö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2576 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2577 
	}
}

2585 
YY_BUFFER_STATE
 
	$mdt_fûe_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2587 
YY_BUFFER_STATE
 
b
;

2589 
b
 = (
YY_BUFFER_STATE
Ë
	`mdt_fûóŒoc
(–
yy_buf„r_°©e
 ) );

2590 i‡–! 
b
 )

2591 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_file_create_buffer()" );

2593 
b
->
yy_buf_size
 = 
size
;

2598 
b
->
yy_ch_buf
 = (*Ë
	`mdt_fûóŒoc
(b->
yy_buf_size
 + 2 );

2599 i‡–! 
b
->
yy_ch_buf
 )

2600 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_file_create_buffer()" );

2602 
b
->
yy_is_our_buf„r
 = 1;

2604 
	`mdt_fûe_öô_buf„r
(
b
,
fûe
 );

2606  
b
;

2607 
	}
}

2613 
	$mdt_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2616 i‡–! 
b
 )

2619 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2620 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2622 i‡–
b
->
yy_is_our_buf„r
 )

2623 
	`mdt_fûe‰ì
((*Ë
b
->
yy_ch_buf
 );

2625 
	`mdt_fûe‰ì
((*Ë
b
 );

2626 
	}
}

2628 #i‚de‡
__˝lu•lus


2629 
ißây
 ();

2636 
	$mdt_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2639 
€ºno
 = 
î∫o
;

2641 
	`mdt_fûe_Êush_buf„r
(
b
 );

2643 
b
->
yy_öput_fûe
 = 
fûe
;

2644 
b
->
yy_fûl_buf„r
 = 1;

2650 i‡(
b
 !
YY_CURRENT_BUFFER
){

2651 
b
->
yy_bs_löío
 = 1;

2652 
b
->
yy_bs_cﬁumn
 = 0;

2655 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2657 
î∫o
 = 
€ºno
;

2658 
	}
}

2664 
	$mdt_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2666 i‡–! 
b
 )

2669 
b
->
yy_n_ch¨s
 = 0;

2675 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2676 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2678 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2680 
b
->
yy_©_bﬁ
 = 1;

2681 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2683 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2684 
	`mdt_fûe_lﬂd_buf„r_°©e
( );

2685 
	}
}

2693 
	$mdt_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2695 i‡(
√w_buf„r
 =
NULL
)

2698 
	`mdt_fûìnsuª_buf„r_°ack
();

2701 i‡–
YY_CURRENT_BUFFER
 )

2704 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2705 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2706 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2710 i‡(
YY_CURRENT_BUFFER
)

2711 (
yy_buf„r_°ack_t›
)++;

2712 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2715 
	`mdt_fûe_lﬂd_buf„r_°©e
( );

2716 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2717 
	}
}

2723 
	$mdt_fûï›_buf„r_°©e
 ()

2725 i‡(!
YY_CURRENT_BUFFER
)

2728 
	`mdt_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2729 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2730 i‡((
yy_buf„r_°ack_t›
) > 0)

2731 --(
yy_buf„r_°ack_t›
);

2733 i‡(
YY_CURRENT_BUFFER
) {

2734 
	`mdt_fûe_lﬂd_buf„r_°©e
( );

2735 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2737 
	}
}

2742 
	$mdt_fûìnsuª_buf„r_°ack
 ()

2744 
num_to_Æloc
;

2746 i‡(!(
yy_buf„r_°ack
)) {

2752 
num_to_Æloc
 = 1;

2753 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
mdt_fûóŒoc


2754 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2756 i‡–! (
yy_buf„r_°ack
) )

2757 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_fileensure_buffer_stack()" );

2759 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2761 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2762 (
yy_buf„r_°ack_t›
) = 0;

2766 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2769 
grow_size
 = 8 ;

2771 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2772 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
mdt_fûîóŒoc


2773 ((
yy_buf„r_°ack
),

2774 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2776 i‡–! (
yy_buf„r_°ack
) )

2777 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_fileensure_buffer_stack()" );

2780 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2781 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2783 
	}
}

2791 
YY_BUFFER_STATE
 
	$mdt_fûe_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2793 
YY_BUFFER_STATE
 
b
;

2795 i‡–
size
 < 2 ||

2796 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2797 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2801 
b
 = (
YY_BUFFER_STATE
Ë
	`mdt_fûóŒoc
(–
yy_buf„r_°©e
 ) );

2802 i‡–! 
b
 )

2803 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_file_scan_buffer()" );

2805 
b
->
yy_buf_size
 = 
size
 - 2;

2806 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2807 
b
->
yy_is_our_buf„r
 = 0;

2808 
b
->
yy_öput_fûe
 = 0;

2809 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2810 
b
->
yy_is_öãø˘ive
 = 0;

2811 
b
->
yy_©_bﬁ
 = 1;

2812 
b
->
yy_fûl_buf„r
 = 0;

2813 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2815 
	`mdt_fûe_swôch_to_buf„r
(
b
 );

2817  
b
;

2818 
	}
}

2828 
YY_BUFFER_STATE
 
	$mdt_fûe_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2831  
	`mdt_fûe_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2832 
	}
}

2841 
YY_BUFFER_STATE
 
	$mdt_fûe_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

2843 
YY_BUFFER_STATE
 
b
;

2844 *
buf
;

2845 
yy_size_t
 
n
;

2846 
i
;

2849 
n
 = 
_yybyãs_Àn
 + 2;

2850 
buf
 = (*Ë
	`mdt_fûóŒoc
(
n
 );

2851 i‡–! 
buf
 )

2852 
	`YY_FATAL_ERROR
( "out of dynamic memory in mdt_file_scan_bytes()" );

2854  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2855 
buf
[
i
] = 
yybyãs
[i];

2857 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2859 
b
 = 
	`mdt_fûe_sˇn_buf„r
(
buf
,
n
 );

2860 i‡–! 
b
 )

2861 
	`YY_FATAL_ERROR
( "bad buffer in mdt_file_scan_bytes()" );

2866 
b
->
yy_is_our_buf„r
 = 1;

2868  
b
;

2869 
	}
}

2871 #i‚de‡
YY_EXIT_FAILURE


2872 
	#YY_EXIT_FAILURE
 2

	)

2875 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2877 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2878 
	`exô
–
YY_EXIT_FAILURE
 );

2879 
	}
}

2883 #unde‡
yyÀss


2884 
	#yyÀss
(
n
) \

2888 
yyÀss_ma¸o_¨g
 = (
n
); \

2889 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2890 
mdt_fûëext
[
mdt_fûñíg
] = (
yy_hﬁd_ch¨
); \

2891 (
yy_c_buf_p
Ë
mdt_fûëext
 + 
yyÀss_ma¸o_¨g
; \

2892 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2893 *(
yy_c_buf_p
) = '\0'; \

2894 
mdt_fûñíg
 = 
yyÀss_ma¸o_¨g
; \

2896  0 )

	)

2903 
	$mdt_fûegë_löío
 ()

2906  
mdt_fûñöío
;

2907 
	}
}

2912 
FILE
 *
	$mdt_fûegë_ö
 ()

2914  
mdt_fûeö
;

2915 
	}
}

2920 
FILE
 *
	$mdt_fûegë_out
 ()

2922  
mdt_fûeout
;

2923 
	}
}

2928 
	$mdt_fûegë_Àng
 ()

2930  
mdt_fûñíg
;

2931 
	}
}

2937 *
	$mdt_fûegë_ãxt
 ()

2939  
mdt_fûëext
;

2940 
	}
}

2946 
	$mdt_fûe£t_löío
 (
löe_numbî
 )

2949 
mdt_fûñöío
 = 
löe_numbî
;

2950 
	}
}

2958 
	$mdt_fûe£t_ö
 (
FILE
 * 
ö_°r
 )

2960 
mdt_fûeö
 = 
ö_°r
 ;

2961 
	}
}

2963 
	$mdt_fûe£t_out
 (
FILE
 * 
out_°r
 )

2965 
mdt_fûeout
 = 
out_°r
 ;

2966 
	}
}

2968 
	$mdt_fûegë_debug
 ()

2970  
mdt_fûe_Êex_debug
;

2971 
	}
}

2973 
	$mdt_fûe£t_debug
 (
bdebug
 )

2975 
mdt_fûe_Êex_debug
 = 
bdebug
 ;

2976 
	}
}

2978 
	$yy_öô_globÆs
 ()

2984 (
yy_buf„r_°ack
) = 0;

2985 (
yy_buf„r_°ack_t›
) = 0;

2986 (
yy_buf„r_°ack_max
) = 0;

2987 (
yy_c_buf_p
) = (*) 0;

2988 (
yy_öô
) = 0;

2989 (
yy_°¨t
) = 0;

2992 #ifde‡
YY_STDINIT


2993 
mdt_fûeö
 = 
°dö
;

2994 
mdt_fûeout
 = 
°dout
;

2996 
mdt_fûeö
 = (
FILE
 *) 0;

2997 
mdt_fûeout
 = (
FILE
 *) 0;

3004 
	}
}

3007 
	$mdt_fûñex_de°roy
 ()

3011 
YY_CURRENT_BUFFER
){

3012 
	`mdt_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

3013 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

3014 
	`mdt_fûï›_buf„r_°©e
();

3018 
	`mdt_fûe‰ì
((
yy_buf„r_°ack
) );

3019 (
yy_buf„r_°ack
Ë
NULL
;

3023 
	`yy_öô_globÆs
( );

3026 
	}
}

3032 #i‚de‡
yyãxt_±r


3033 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

3035 
i
;

3036  
i
 = 0; i < 
n
; ++i )

3037 
s1
[
i
] = 
s2
[i];

3038 
	}
}

3041 #ifde‡
YY_NEED_STRLEN


3042 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

3044 
n
;

3045  
n
 = 0; 
s
[n]; ++n )

3048  
n
;

3049 
	}
}

3052 *
	$mdt_fûóŒoc
 (
yy_size_t
 
size
 )

3054  (*Ë
	`mÆloc
–
size
 );

3055 
	}
}

3057 *
	$mdt_fûîóŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

3066  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

3067 
	}
}

3069 
	$mdt_fûe‰ì
 (* 
±r
 )

3071 
	`‰ì
–(*Ë
±r
 );

3072 
	}
}

3074 
	#YYTABLES_NAME
 "yyèbÀs"

	)

3080 
	$mdt_fûeskùSˇnDef
() {

3081 i‡(
mdt_fûew¨nög
) {

3082 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `scan_definition' ");

3083 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3085 
	}
}

3087 
	$mdt_fûeskùCñlTy≥
() {

3088 i‡(
mdt_fûew¨nög
) {

3089 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `cell_type' ");

3090 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3092 
	}
}

3094 
	$mdt_fûeskùU£d
() {

3095 i‡(
mdt_fûew¨nög
) {

3096 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `used'áttribute ");

3097 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3099 
	}
}

3101 
	$mdt_fûeskùClock
() {

3102 i‡(
mdt_fûew¨nög
) {

3103 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `clock'áttribute ");

3104 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3106 
	}
}

3108 
	$mdt_fûeskùNoFau…
() {

3109 i‡(
mdt_fûew¨nög
) {

3110 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `no_fault' ");

3111 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3113 
	}
}

3115 
	$mdt_fûeskùFun˘i⁄
() {

3116 i‡(
mdt_fûew¨nög
) {

3117 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `function' ");

3118 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3120 
	}
}

3122 
	$mdt_fûeskùFau…
() {

3123 i‡(
mdt_fûew¨nög
) {

3124 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `fault' ");

3125 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3127 
	}
}

3129 
	$mdt_fûeskùSëClk
() {

3130 i‡(
mdt_fûew¨nög
) {

3131 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `set_clock_conflict' ");

3132 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3134 
	}
}

3136 
	$mdt_fûeskùRe£tClk
() {

3137 i‡(
mdt_fûew¨nög
) {

3138 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `reset_clock_conflict' ");

3139 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3141 
	}
}

3143 
	$mdt_fûeskùBusKì≥r
() {

3144 i‡(
mdt_fûew¨nög
) {

3145 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `bus_keeper' ");

3146 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3148 
	}
}

3150 
	$mdt_fûeskùAºayDñ
() {

3151 i‡(
mdt_fûew¨nög
) {

3152 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `array_delimiter' ");

3153 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3155 
	}
}

3157 
	$mdt_fûeskùAºay
() {

3158 i‡(
mdt_fûew¨nög
) {

3159 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `array' ");

3160 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3162 
	}
}

3164 
	$mdt_fûeskùPul£
() {

3165 i‡(
mdt_fûew¨nög
) {

3166 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `_pulse_generator' ");

3167 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3169 
	}
}

3171 
	$mdt_fûeskùPöNoFau…
() {

3172 i‡(
mdt_fûew¨nög
) {

3173 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `pinÇo fault' ");

3174 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3176 
	}
}

3178 
	$mdt_fûeskùD©aSize
() {

3179 i‡(
mdt_fûew¨nög
) {

3180 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `data_size' ");

3181 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3183 
	}
}

3185 
	$mdt_fûeskùAddrSize
() {

3186 i‡(
mdt_fûew¨nög
) {

3187 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `address_size' ");

3188 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3190 
	}
}

3192 
	$mdt_fûeskùRom
() {

3193 i‡(
mdt_fûew¨nög
) {

3194 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `ROM' ");

3195 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3197 
	}
}

3199 
	$mdt_fûeskùRam
() {

3200 i‡(
mdt_fûew¨nög
) {

3201 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `RAM' ");

3202 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3204 
	}
}

3206 
	$mdt_fûeskùCøm
() {

3207 i‡(
mdt_fûew¨nög
) {

3208 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `CRAM' ");

3209 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3211 
	}
}

3213 
	$mdt_fûeskùMöAddr
() {

3214 i‡(
mdt_fûew¨nög
) {

3215 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `min_address' ");

3216 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3218 
	}
}

3220 
	$mdt_fûeskùMaxAddr
() {

3221 i‡(
mdt_fûew¨nög
) {

3222 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `max_address' ");

3223 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3225 
	}
}

3227 
	$mdt_fûeskùRódOff
() {

3228 i‡(
mdt_fûew¨nög
) {

3229 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `read_off' ");

3230 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3232 
	}
}

3234 
	$mdt_fûeskùInôFûe
() {

3235 i‡(
mdt_fûew¨nög
) {

3236 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `init_file' ");

3237 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3239 
	}
}

3241 
	$mdt_fûeskùEdgeTriggî
() {

3242 i‡(
mdt_fûew¨nög
) {

3243 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `edge_trigger' ");

3244 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3246 
	}
}

3248 
	$mdt_fûeskùAddrTy≥
() {

3249 i‡(
mdt_fûew¨nög
) {

3250 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `address_type' ");

3251 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3253 
	}
}

3255 
	$mdt_fûeskùRrC⁄Êi˘
() {

3256 i‡(
mdt_fûew¨nög
) {

3257 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `read_read_conflict' ");

3258 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3260 
	}
}

3262 
	$mdt_fûeskùRwC⁄Êi˘
() {

3263 i‡(
mdt_fûew¨nög
) {

3264 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `read_write_conflict' ");

3265 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3267 
	}
}

3269 
	$mdt_fûeskùWrôeC⁄ã¡i⁄
() {

3270 i‡(
mdt_fûew¨nög
) {

3271 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `write_contention' ");

3272 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3274 
	}
}

3276 
	$mdt_fûeskùOvîwrôe
() {

3277 i‡(
mdt_fûew¨nög
) {

3278 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `overwrite' ");

3279 
	`Ârötf
(
°dîr
, "©åibuã skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3281 
	}
}

3283 
	$mdt_fûeskùMa¸o
() {

3284 i‡(
mdt_fûew¨nög
) {

3285 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `macro' ");

3286 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3288 
	}
}

3290 
	$mdt_fûeskùAlüs
() {

3291 i‡(
mdt_fûew¨nög
) {

3292 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `alias' ");

3293 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3295 
	}
}

3297 
	$mdt_fûeskùIn˛ude
() {

3298 i‡(
mdt_fûew¨nög
) {

3299 
	`Ârötf
(
°dîr
, "**WARN mdt_filelex(): `include' ");

3300 
	`Ârötf
(
°dîr
, "skù≥dÇó∏löê%d\n", 
mdt_fûñöe
);

3302 
	}
}

	@interface/lib/dbg/lex_n_yacc/pat_file.tab.cpp

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

67 
	#yy∑r£
 
∑t_fûï¨£


	)

68 
	#yyÀx
 
∑t_fûñex


	)

69 
	#yyîr‹
 
∑t_fûìº‹


	)

70 
	#yylvÆ
 
∑t_fûñvÆ


	)

71 
	#yych¨
 
∑t_fûech¨


	)

72 
	#yydebug
 
∑t_fûedebug


	)

73 
	#yy√ºs
 
∑t_fûíîrs


	)

88 
	#YYPARSE_PARAM
 
∑øm


	)

90 
	~<c°dio
>

91 
	~<c°rög
>

93 
	~"∑t_fûe.h
"

95 
usög
 
«me•a˚
 
	g°d
;

96 
usög
 
«me•a˚
 
	gI¡fNs
;

98 *
∑t_fûëext
;

99 
∑t_fûñöe
;

100 
∑t_fûñex
();

102 
∑t_fûìº‹
(c⁄° *
msg
);

103 
∑t_fûe‰ìNames
(
P©Names
 *
«mes
);

105 
P©Fûe
 *
	g∑t
;

113 #i‚de‡
YYDEBUG


114 
	#YYDEBUG
 0

	)

118 #ifde‡
YYERROR_VERBOSE


119 #unde‡
YYERROR_VERBOSE


120 
	#YYERROR_VERBOSE
 1

	)

122 
	#YYERROR_VERBOSE
 0

	)

126 #i‚de‡
YYTOKEN_TABLE


127 
	#YYTOKEN_TABLE
 0

	)

132 #i‚de‡
YYTOKENTYPE


133 
	#YYTOKENTYPE


	)

136 
	eyytokíty≥
 {

137 
	mPATTERN
 = 258,

138 
	mNAME
 = 259,

139 
	mPATTERN_NUM
 = 260,

140 
	mPATTERN_TYPE
 = 261

146 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


147 
	uYYSTYPE


153 *
	mych¨
;

154 
	myöt
;

155 
	mI¡fNs
::
P©Ty≥
 
y∑tTy≥
;

156 
	mI¡fNs
::
P©Names
 *
y«mes
;

162 } 
	tYYSTYPE
;

163 
	#YYSTYPE_IS_TRIVIAL
 1

	)

164 
	#yy°y≥
 
YYSTYPE


	)

165 
	#YYSTYPE_IS_DECLARED
 1

	)

179 #ifde‡
YYTYPE_UINT8


180 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

182 
	tyyty≥_uöt8
;

185 #ifde‡
YYTYPE_INT8


186 
YYTYPE_INT8
 
	tyyty≥_öt8
;

187 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

188 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

189 sig√d 
	tyyty≥_öt8
;

191 
	tyyty≥_öt8
;

194 #ifde‡
YYTYPE_UINT16


195 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

197 
	tyyty≥_uöt16
;

200 #ifde‡
YYTYPE_INT16


201 
YYTYPE_INT16
 
	tyyty≥_öt16
;

203 
	tyyty≥_öt16
;

206 #i‚de‡
YYSIZE_T


207 #ifde‡
__SIZE_TYPE__


208 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

209 #ñi‡
deföed
 
size_t


210 
	#YYSIZE_T
 
size_t


	)

211 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

212 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

213 
	~<°ddef.h
>

214 
	#YYSIZE_T
 
size_t


	)

216 
	#YYSIZE_T
 

	)

220 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

222 #i‚de‡
YY_


223 #i‡
YYENABLE_NLS


224 #i‡
ENABLE_NLS


225 
	~<liböé.h
>

226 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

229 #i‚de‡
YY_


230 
	#YY_
(
msgid
Ë
	)
msgid

235 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


236 
	#YYUSE
(
e
Ë((Ë”))

	)

238 
	#YYUSE
(
e
Ë

	)

242 #i‚de‡
löt


243 
	#YYID
(
n
Ë“)

	)

245 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

246 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

248 
	$YYID
 (
yyi
)

251 
	$YYID
 (
yyi
)

252 
yyi
;

255  
yyi
;

256 
	}
}

259 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


263 #ifde‡
YYSTACK_USE_ALLOCA


264 #i‡
YYSTACK_USE_ALLOCA


265 #ifde‡
__GNUC__


266 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

267 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


268 
	~<Æloˇ.h
>

269 #ñi‡
deföed
 
_AIX


270 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

271 #ñi‡
deföed
 
_MSC_VER


272 
	~<mÆloc.h
>

273 
	#Æloˇ
 
_Æloˇ


	)

275 
	#YYSTACK_ALLOC
 
Æloˇ


	)

276 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

277 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

278 
	~<°dlib.h
>

279 #i‚de‡
_STDLIB_H


280 
	#_STDLIB_H
 1

	)

287 #ifde‡
YYSTACK_ALLOC


289 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

290 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


295 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

298 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

299 
	#YYSTACK_FREE
 
YYFREE


	)

300 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


301 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

303 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

304 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

305 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

306 
	~<°dlib.h
>

307 #i‚de‡
_STDLIB_H


308 
	#_STDLIB_H
 1

	)

311 #i‚de‡
YYMALLOC


312 
	#YYMALLOC
 
mÆloc


	)

313 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

314 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

315 *
mÆloc
 (
YYSIZE_T
);

318 #i‚de‡
YYFREE


319 
	#YYFREE
 
‰ì


	)

320 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

321 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

322 
‰ì
 (*);

329 #i‡(! 
deföed
 
yyovîÊow
 \

330 && (! 
deföed
 
	g__˝lu•lus
 \

331 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

334 
	uyyÆloc


336 
yyty≥_öt16
 
	myyss_Æloc
;

337 
YYSTYPE
 
	myyvs_Æloc
;

341 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

345 
	#YYSTACK_BYTES
(
N
) \

346 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

347 + 
YYSTACK_GAP_MAXIMUM
)

	)

351 #i‚de‡
YYCOPY


352 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

353 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

354 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

356 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

359 
YYSIZE_T
 
yyi
; \

360 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

361 (
To
)[
yyi
] = (
From
)[yyi]; \

363 
	`YYID
 (0))

	)

372 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

375 
YYSIZE_T
 
yy√wbyãs
; \

376 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

377 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

378 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

379 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

381 
	`YYID
 (0))

	)

386 
	#YYFINAL
 3

	)

388 
	#YYLAST
 29

	)

391 
	#YYNTOKENS
 8

	)

393 
	#YYNNTS
 10

	)

395 
	#YYNRULES
 14

	)

397 
	#YYNSTATES
 35

	)

400 
	#YYUNDEFTOK
 2

	)

401 
	#YYMAXUTOK
 261

	)

403 
	#YYTRANSLATE
(
YYX
) \

404 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

407 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

438 #i‡
YYDEBUG


441 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

448 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

459 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

466 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


469 c⁄° *c⁄° 
	gyyäame
[] =

477 #ifde‡
YYPRINT


480 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

487 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

494 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

503 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

512 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

519 
	#YYPACT_NINF
 -24

	)

520 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

529 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

538 
	#YYTABLE_NINF
 -1

	)

539 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

546 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

555 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

563 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

564 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

565 
	#YYEMPTY
 (-2)

	)

566 
	#YYEOF
 0

	)

568 
	#YYACCEPT
 
yyac˚±œb


	)

569 
	#YYABORT
 
yyab‹éab


	)

570 
	#YYERROR
 
yyîr‹œb


	)

577 
	#YYFAIL
 
yyîæab


	)

579 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

581 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

583 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

585 
yych¨
 = (
Tokí
); \

586 
yylvÆ
 = (
VÆue
); \

587 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

588 
	`YYPOPSTACK
 (1); \

589 
yybackup
; \

593 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

594 
YYERROR
; \

596 
	`YYID
 (0))

	)

599 
	#YYTERROR
 1

	)

600 
	#YYERRCODE
 256

	)

607 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

608 #i‚de‡
YYLLOC_DEFAULT


609 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

611 i‡(
	`YYID
 (
N
)) \

613 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

614 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

615 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

616 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

620 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

621 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

622 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

623 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

625 
	`YYID
 (0))

	)

633 #i‚de‡
YY_LOCATION_PRINT


634 #i‡
YYLTYPE_IS_TRIVIAL


635 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

636 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

637 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

638 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

640 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

647 #ifde‡
YYLEX_PARAM


648 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

650 
	#YYLEX
 
	`yyÀx
 ()

	)

654 #i‡
YYDEBUG


656 #i‚de‡
YYFPRINTF


657 
	~<°dio.h
>

658 
	#YYFPRINTF
 
Ârötf


	)

661 
	#YYDPRINTF
(
Args
) \

663 i‡(
yydebug
) \

664 
YYFPRINTF
 
Args
; \

665 } 
	`YYID
 (0))

	)

667 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

669 i‡(
yydebug
) \

671 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

672 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

673 
Ty≥
, 
VÆue
); \

674 
	`YYFPRINTF
 (
°dîr
, "\n"); \

676 } 
	`YYID
 (0))

	)

684 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

685 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

687 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

690 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

691 
FILE
 *
yyouçut
;

692 
yyty≥
;

693 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

696 i‡(!
yyvÆuï
)

698 #ifde‡
YYPRINT


699 i‡(
yyty≥
 < 
YYNTOKENS
)

700 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

702 
	`YYUSE
 (
yyouçut
);

704 
yyty≥
)

709 
	}
}

716 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

717 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

719 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

722 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

723 
FILE
 *
yyouçut
;

724 
yyty≥
;

725 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

728 i‡(
yyty≥
 < 
YYNTOKENS
)

729 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

731 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

733 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

734 
	`YYFPRINTF
 (
yyouçut
, ")");

735 
	}
}

742 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

743 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

745 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

748 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

749 
yyty≥_öt16
 *
yybŸtom
;

750 
yyty≥_öt16
 *
yyt›
;

753 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

754 ; 
yybŸtom
 <
yyt›
; yybottom++)

756 
yybŸ
 = *
yybŸtom
;

757 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

759 
	`YYFPRINTF
 (
°dîr
, "\n");

760 
	}
}

762 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

764 i‡(
yydebug
) \

765 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

766 } 
	`YYID
 (0))

	)

773 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

774 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

776 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

779 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

780 
YYSTYPE
 *
yyv•
;

781 
yyruÀ
;

784 
yyƒhs
 = 
yyr2
[
yyruÀ
];

785 
yyi
;

786 
yy o
 = 
yyæöe
[
yyruÀ
];

787 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

788 
yyruÀ
 - 1, 
yy o
);

790 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

792 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

793 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

794 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

796 
	`YYFPRINTF
 (
°dîr
, "\n");

798 
	}
}

800 
	#YY_REDUCE_PRINT
(
RuÀ
) \

802 i‡(
yydebug
) \

803 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

804 } 
	`YYID
 (0))

	)

808 
	gyydebug
;

810 
	#YYDPRINTF
(
Args
)

	)

811 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

812 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

813 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

818 #i‚def 
YYINITDEPTH


819 
	#YYINITDEPTH
 200

	)

829 #i‚de‡
YYMAXDEPTH


830 
	#YYMAXDEPTH
 10000

	)

835 #i‡
YYERROR_VERBOSE


837 #i‚de‡
yy°æí


838 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


839 
	#yy°æí
 
°æí


	)

842 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

843 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

844 
YYSIZE_T


845 
	$yy°æí
 (c⁄° *
yy°r
)

847 
YYSIZE_T


848 
	$yy°æí
 (
yy°r
)

849 c⁄° *
yy°r
;

852 
YYSIZE_T
 
yyÀn
;

853 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

855  
yyÀn
;

856 
	}
}

860 #i‚de‡
yy°p˝y


861 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


862 
	#yy°p˝y
 
°p˝y


	)

866 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

867 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

869 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

872 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

873 *
yyde°
;

874 c⁄° *
yy§c
;

877 *
yyd
 = 
yyde°
;

878 c⁄° *
yys
 = 
yy§c
;

880 (*
yyd
++ = *
yys
++) != '\0')

883  
yyd
 - 1;

884 
	}
}

888 #i‚de‡
yyäamîr


896 
YYSIZE_T


897 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

899 i‡(*
yy°r
 == '"')

901 
YYSIZE_T
 
yyn
 = 0;

902 c⁄° *
yyp
 = 
yy°r
;

905 *++
yyp
)

909 
do_nŸ_°rù_quŸes
;

912 i‡(*++
yyp
 != '\\')

913 
do_nŸ_°rù_quŸes
;

916 i‡(
yyªs
)

917 
yyªs
[
yyn
] = *
yyp
;

918 
yyn
++;

922 i‡(
yyªs
)

923 
yyªs
[
yyn
] = '\0';

924  
yyn
;

926 
do_nŸ_°rù_quŸes
: ;

929 i‡(! 
yyªs
)

930  
	`yy°æí
 (
yy°r
);

932  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

933 
	}
}

943 
YYSIZE_T


944 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

946 
yyn
 = 
yy∑˘
[
yy°©e
];

948 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

952 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

953 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

954 
YYSIZE_T
 
yysize
 = 
yysize0
;

955 
YYSIZE_T
 
yysize1
;

956 
yysize_ovîÊow
 = 0;

957 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

958 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

959 
yyx
;

964 
	`YY_
("syntaxÉrror, unexpected %s");

965 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

966 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

967 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

968 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

970 *
yyfmt
;

971 c⁄° *
yyf
;

972 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

973 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

974 c⁄° 
yy‹
[] = " or %s";

975 
yyf‹m©
[ 
yyu√x≥˘ed


976 +  
yyex≥˘ög
 - 1

977 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

978 * ( 
yy‹
 - 1))];

979 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

983 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

986 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

987 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

988 
yycou¡
 = 1;

990 
yy¨g
[0] = 
yyäame
[
yyty≥
];

991 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

993 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

994 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

996 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

998 
yycou¡
 = 1;

999 
yysize
 = 
yysize0
;

1000 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1003 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1004 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1005 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1006 
yysize
 = 
yysize1
;

1007 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1008 
yy¥efix
 = 
yy‹
;

1011 
yyf
 = 
	`YY_
(
yyf‹m©
);

1012 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1013 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1014 
yysize
 = 
yysize1
;

1016 i‡(
yysize_ovîÊow
)

1017  
YYSIZE_MAXIMUM
;

1019 i‡(
yyªsu…
)

1024 *
yyp
 = 
yyªsu…
;

1025 
yyi
 = 0;

1026 (*
yyp
 = *
yyf
) != '\0')

1028 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1030 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1031 
yyf
 += 2;

1035 
yyp
++;

1036 
yyf
++;

1040  
yysize
;

1042 
	}
}

1051 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1052 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1054 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1057 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1058 c⁄° *
yymsg
;

1059 
yyty≥
;

1060 
YYSTYPE
 *
yyvÆuï
;

1063 
	`YYUSE
 (
yyvÆuï
);

1065 i‡(!
yymsg
)

1066 
yymsg
 = "Deleting";

1067 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1069 
yyty≥
)

1075 
	}
}

1078 #ifde‡
YYPARSE_PARAM


1079 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1080 
yy∑r£
 (*
YYPARSE_PARAM
);

1082 
yy∑r£
 ();

1085 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1086 
yy∑r£
 ();

1088 
yy∑r£
 ();

1094 
	gyych¨
;

1097 
YYSTYPE
 
	gyylvÆ
;

1100 
	gyy√ºs
;

1108 #ifde‡
YYPARSE_PARAM


1109 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1110 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1112 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1115 
	$yy∑r£
 (
YYPARSE_PARAM
)

1116 *
YYPARSE_PARAM
;

1119 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1120 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1122 
	$yy∑r£
 ()

1125 
	$yy∑r£
 ()

1132 
yy°©e
;

1134 
yyîr°©us
;

1144 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1145 
yyty≥_öt16
 *
yyss
;

1146 
yyty≥_öt16
 *
yys•
;

1149 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1150 
YYSTYPE
 *
yyvs
;

1151 
YYSTYPE
 *
yyv•
;

1153 
YYSIZE_T
 
yy°acksize
;

1155 
yyn
;

1156 
yyªsu…
;

1158 
yytokí
;

1161 
YYSTYPE
 
yyvÆ
;

1163 #i‡
YYERROR_VERBOSE


1165 
yymsgbuf
[128];

1166 *
yymsg
 = 
yymsgbuf
;

1167 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1170 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1174 
yyÀn
 = 0;

1176 
yytokí
 = 0;

1177 
yyss
 = 
yysß
;

1178 
yyvs
 = 
yyvß
;

1179 
yy°acksize
 = 
YYINITDEPTH
;

1181 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1183 
yy°©e
 = 0;

1184 
yyîr°©us
 = 0;

1185 
yy√ºs
 = 0;

1186 
yych¨
 = 
YYEMPTY
;

1192 
yys•
 = 
yyss
;

1193 
yyv•
 = 
yyvs
;

1195 
yy£t°©e
;

1200 
yy√w°©e
:

1203 
yys•
++;

1205 
yy£t°©e
:

1206 *
yys•
 = 
yy°©e
;

1208 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1211 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1213 #ifde‡
yyovîÊow


1218 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1219 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1225 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1226 &
yyss1
, 
yysize
 *  (*
yys•
),

1227 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1228 &
yy°acksize
);

1230 
yyss
 = 
yyss1
;

1231 
yyvs
 = 
yyvs1
;

1234 #i‚de‡
YYSTACK_RELOCATE


1235 
yyexhau°edœb
;

1238 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1239 
yyexhau°edœb
;

1240 
yy°acksize
 *= 2;

1241 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1242 
yy°acksize
 = 
YYMAXDEPTH
;

1245 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1246 
yyÆloc
 *
yy±r
 =

1247 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1248 i‡(! 
yy±r
)

1249 
yyexhau°edœb
;

1250 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1251 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1252 #unde‡
YYSTACK_RELOCATE


1253 i‡(
yyss1
 !
yysß
)

1254 
	`YYSTACK_FREE
 (
yyss1
);

1259 
yys•
 = 
yyss
 + 
yysize
 - 1;

1260 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1262 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1263 (Ë
yy°acksize
));

1265 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1266 
YYABORT
;

1269 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1271 i‡(
yy°©e
 =
YYFINAL
)

1272 
YYACCEPT
;

1274 
yybackup
;

1279 
yybackup
:

1285 
yyn
 = 
yy∑˘
[
yy°©e
];

1286 i‡(
yyn
 =
YYPACT_NINF
)

1287 
yydeÁu…
;

1292 i‡(
yych¨
 =
YYEMPTY
)

1294 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1295 
yych¨
 = 
YYLEX
;

1298 i‡(
yych¨
 <
YYEOF
)

1300 
yych¨
 = 
yytokí
 = 
YYEOF
;

1301 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1305 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1306 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1311 
yyn
 +
yytokí
;

1312 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1313 
yydeÁu…
;

1314 
yyn
 = 
yyèbÀ
[yyn];

1315 i‡(
yyn
 <= 0)

1317 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1318 
yyîæab
;

1319 
yyn
 = -yyn;

1320 
yyªdu˚
;

1325 i‡(
yyîr°©us
)

1326 
yyîr°©us
--;

1329 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1332 
yych¨
 = 
YYEMPTY
;

1334 
yy°©e
 = 
yyn
;

1335 *++
yyv•
 = 
yylvÆ
;

1337 
yy√w°©e
;

1343 
yydeÁu…
:

1344 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1345 i‡(
yyn
 == 0)

1346 
yyîæab
;

1347 
yyªdu˚
;

1353 
yyªdu˚
:

1355 
yyÀn
 = 
yyr2
[
yyn
];

1365 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1368 
	`YY_REDUCE_PRINT
 (
yyn
);

1369 
yyn
)

1375 { 
∑t
 = (
P©Fûe
 *)(
∑øm
); ;}

1382 { 
∑t
->
	`£tPiOrdî
((
yyv•
[(1Ë- (5)].
y«mes
)->
hód
);

1383 
∑t
->
	`£tPpiOrdî
((
yyv•
[(3Ë- (5)].
y«mes
)->
hód
);

1384 
∑t
->
	`£tPoOrdî
((
yyv•
[(5Ë- (5)].
y«mes
)->
hód
);

1385 
	`∑t_fûe‰ìNames
((
yyv•
[(1Ë- (5)].
y«mes
)->
hód
);

1386 
	`∑t_fûe‰ìNames
((
yyv•
[(3Ë- (5)].
y«mes
)->
hód
);

1387 
	`∑t_fûe‰ìNames
((
yyv•
[(5Ë- (5)].
y«mes
)->
hód
); ;}

1394 { 
∑t
->
	`£tPiOrdî
((
yyv•
[(1Ë- (4)].
y«mes
)->
hód
);

1395 
∑t
->
	`£tPoOrdî
((
yyv•
[(4Ë- (4)].
y«mes
)->
hód
);

1396 
	`∑t_fûe‰ìNames
((
yyv•
[(1Ë- (4)].
y«mes
)->
hód
);

1397 
	`∑t_fûe‰ìNames
((
yyv•
[(4Ë- (4)].
y«mes
)->
hód
); ;}

1404 { 
∑t
->
	`£tP©ã∫Ty≥
((
yyv•
[(1Ë- (1)].
y∑tTy≥
)); ;}

1411 { 
∑t
->
	`£tP©ã∫Num
((
yyv•
[(1Ë- (1)].
yöt
)); ;}

1418 { (
yyvÆ
.
y«mes
Ë
√w
 
P©Names
;

1419 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(2Ë- (2)].
ych¨
));

1420 (
yyv•
[(1Ë- (2)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1421 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (2)].ynames)->head;

1422 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1429 { (
yyvÆ
.
y«mes
Ë
√w
 
P©Names
;

1430 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(1Ë- (1)].
ych¨
));

1431 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1432 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1440 
∑t
->
	`addP©ã∫
((
yyv•
[(2Ë- (14)].
ych¨
), (yyvsp[(4) - (14)].ychar), (yyvsp[(6) - (14)].ychar), (yyvsp[(8) - (14)].ychar), (yyvsp[(10) - (14)].ychar), (yyvsp[(12) - (14)].ychar), (yyvsp[(14) - (14)].ychar));

1441 
dñëe
 [] (
yyv•
[(2Ë- (14)].
ych¨
);

1442 
dñëe
 [] (
yyv•
[(4Ë- (14)].
ych¨
);

1443 
dñëe
 [] (
yyv•
[(6Ë- (14)].
ych¨
);

1444 
dñëe
 [] (
yyv•
[(8Ë- (14)].
ych¨
);

1445 
dñëe
 [] (
yyv•
[(10Ë- (14)].
ych¨
);

1446 
dñëe
 [] (
yyv•
[(12Ë- (14)].
ych¨
);

1447 
dñëe
 [] (
yyv•
[(14Ë- (14)].
ych¨
);

1455 { (
yyvÆ
.
ych¨
Ë(
yyv•
[(1) - (1)].ychar); ;}

1462 { (
yyvÆ
.
ych¨
Ë
NULL
; ;}

1471 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1473 
	`YYPOPSTACK
 (
yyÀn
);

1474 
yyÀn
 = 0;

1475 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1477 *++
yyv•
 = 
yyvÆ
;

1483 
yyn
 = 
yyr1
[yyn];

1485 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1486 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1487 
yy°©e
 = 
yyèbÀ
[yystate];

1489 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1491 
yy√w°©e
;

1497 
yyîæab
:

1499 i‡(!
yyîr°©us
)

1501 ++
yy√ºs
;

1502 #i‡! 
YYERROR_VERBOSE


1503 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1506 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1507 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1509 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1510 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1511 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1512 i‡(
yymsg
 !
yymsgbuf
)

1513 
	`YYSTACK_FREE
 (
yymsg
);

1514 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1515 i‡(
yymsg
)

1516 
yymsg_Æloc
 = 
yyÆloc
;

1519 
yymsg
 = 
yymsgbuf
;

1520 
yymsg_Æloc
 =  
yymsgbuf
;

1524 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1526 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1527 
	`yyîr‹
 (
yymsg
);

1531 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1532 i‡(
yysize
 != 0)

1533 
yyexhau°edœb
;

1541 i‡(
yyîr°©us
 == 3)

1546 i‡(
yych¨
 <
YYEOF
)

1549 i‡(
yych¨
 =
YYEOF
)

1550 
YYABORT
;

1554 
	`yyde°ru˘
 ("Error: discarding",

1555 
yytokí
, &
yylvÆ
);

1556 
yych¨
 = 
YYEMPTY
;

1562 
yyîæab1
;

1568 
yyîr‹œb
:

1574 
yyîr‹œb
;

1578 
	`YYPOPSTACK
 (
yyÀn
);

1579 
yyÀn
 = 0;

1580 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1581 
yy°©e
 = *
yys•
;

1582 
yyîæab1
;

1588 
yyîæab1
:

1589 
yyîr°©us
 = 3;

1593 
yyn
 = 
yy∑˘
[
yy°©e
];

1594 i‡(
yyn
 !
YYPACT_NINF
)

1596 
yyn
 +
YYTERROR
;

1597 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1599 
yyn
 = 
yyèbÀ
[yyn];

1600 i‡(0 < 
yyn
)

1606 i‡(
yys•
 =
yyss
)

1607 
YYABORT
;

1610 
	`yyde°ru˘
 ("Error:Öopping",

1611 
yy°os
[
yy°©e
], 
yyv•
);

1612 
	`YYPOPSTACK
 (1);

1613 
yy°©e
 = *
yys•
;

1614 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1617 *++
yyv•
 = 
yylvÆ
;

1621 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1623 
yy°©e
 = 
yyn
;

1624 
yy√w°©e
;

1630 
yyac˚±œb
:

1631 
yyªsu…
 = 0;

1632 
yyªtu∫
;

1637 
yyab‹éab
:

1638 
yyªsu…
 = 1;

1639 
yyªtu∫
;

1641 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


1645 
yyexhau°edœb
:

1646 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1647 
yyªsu…
 = 2;

1651 
yyªtu∫
:

1652 i‡(
yych¨
 !
YYEMPTY
)

1653 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1654 
yytokí
, &
yylvÆ
);

1657 
	`YYPOPSTACK
 (
yyÀn
);

1658 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1659 
yys•
 !
yyss
)

1661 
	`yyde°ru˘
 ("Cleanup:Öopping",

1662 
yy°os
[*
yys•
], 
yyv•
);

1663 
	`YYPOPSTACK
 (1);

1665 #i‚de‡
yyovîÊow


1666 i‡(
yyss
 !
yysß
)

1667 
	`YYSTACK_FREE
 (
yyss
);

1669 #i‡
YYERROR_VERBOSE


1670 i‡(
yymsg
 !
yymsgbuf
)

1671 
	`YYSTACK_FREE
 (
yymsg
);

1674  
	`YYID
 (
yyªsu…
);

1675 
	}
}

1683 
	$∑t_fûìº‹
(c⁄° *
msg
) {

1684 
	`Ârötf
(
°dîr
, "**ERRORÖat_fileerror(): ");

1685 
	`Ârötf
(
°dîr
, "Aàlöê%d. Nó∏`%s'. ", 
∑t_fûñöe
, 
∑t_fûëext
);

1686 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

1687 
	}
}

1689 
	$∑t_fûe‰ìNames
(
P©Names
 *
«mes
) {

1690 
P©Names
 *
«me
 = 
«mes
->
hód
;

1691 
«me
) {

1692 
P©Names
 *
¥ev
 = 
«me
;

1693 
«me
 =Çame->
√xt
;

1694 
dñëe
 
¥ev
;

1696 
	}
}

	@interface/lib/dbg/lex_n_yacc/pat_file.tab.hpp

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mPATTERN
 = 258,

43 
	mNAME
 = 259,

44 
	mPATTERN_NUM
 = 260,

45 
	mPATTERN_TYPE
 = 261

51 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


52 
	uYYSTYPE


58 *
	mych¨
;

59 
	myöt
;

60 
	mI¡fNs
::
P©Ty≥
 
y∑tTy≥
;

61 
	mI¡fNs
::
P©Names
 *
y«mes
;

67 } 
	tYYSTYPE
;

68 
	#YYSTYPE_IS_TRIVIAL
 1

	)

69 
	#yy°y≥
 
YYSTYPE


	)

70 
	#YYSTYPE_IS_DECLARED
 1

	)

73 
YYSTYPE
 
∑t_fûñvÆ
;

	@interface/lib/dbg/lex_n_yacc/pat_file.yy.cpp

5 
	#YY_INT_ALIGNED
 

	)

9 
	#yy_¸óã_buf„r
 
∑t_fûe_¸óã_buf„r


	)

10 
	#yy_dñëe_buf„r
 
∑t_fûe_dñëe_buf„r


	)

11 
	#yy_Êex_debug
 
∑t_fûe_Êex_debug


	)

12 
	#yy_öô_buf„r
 
∑t_fûe_öô_buf„r


	)

13 
	#yy_Êush_buf„r
 
∑t_fûe_Êush_buf„r


	)

14 
	#yy_lﬂd_buf„r_°©e
 
∑t_fûe_lﬂd_buf„r_°©e


	)

15 
	#yy_swôch_to_buf„r
 
∑t_fûe_swôch_to_buf„r


	)

16 
	#yyö
 
∑t_fûeö


	)

17 
	#yyÀng
 
∑t_fûñíg


	)

18 
	#yyÀx
 
∑t_fûñex


	)

19 
	#yylöío
 
∑t_fûñöío


	)

20 
	#yyout
 
∑t_fûeout


	)

21 
	#yyª°¨t
 
∑t_fûîe°¨t


	)

22 
	#yyãxt
 
∑t_fûëext


	)

23 
	#yywøp
 
∑t_fûewøp


	)

24 
	#yyÆloc
 
∑t_fûóŒoc


	)

25 
	#yyªÆloc
 
∑t_fûîóŒoc


	)

26 
	#yy‰ì
 
∑t_fûe‰ì


	)

28 
	#FLEX_SCANNER


	)

29 
	#YY_FLEX_MAJOR_VERSION
 2

	)

30 
	#YY_FLEX_MINOR_VERSION
 5

	)

31 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

32 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

33 
	#FLEX_BETA


	)

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<°dlib.h
>

48 #i‚de‡
FLEXINT_H


49 
	#FLEXINT_H


	)

53 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

58 #i‚de‡
__STDC_LIMIT_MACROS


59 
	#__STDC_LIMIT_MACROS
 1

	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	tÊex_öt8_t
;

64 
uöt8_t
 
	tÊex_uöt8_t
;

65 
öt16_t
 
	tÊex_öt16_t
;

66 
uöt16_t
 
	tÊex_uöt16_t
;

67 
öt32_t
 
	tÊex_öt32_t
;

68 
uöt32_t
 
	tÊex_uöt32_t
;

70 sig√d 
	tÊex_öt8_t
;

71 
	tÊex_öt16_t
;

72 
	tÊex_öt32_t
;

73 
	tÊex_uöt8_t
;

74 
	tÊex_uöt16_t
;

75 
	tÊex_uöt32_t
;

79 #i‚de‡
INT8_MIN


80 
	#INT8_MIN
 (-128)

	)

82 #i‚de‡
INT16_MIN


83 
	#INT16_MIN
 (-32767-1)

	)

85 #i‚de‡
INT32_MIN


86 
	#INT32_MIN
 (-2147483647-1)

	)

88 #i‚de‡
INT8_MAX


89 
	#INT8_MAX
 (127)

	)

91 #i‚de‡
INT16_MAX


92 
	#INT16_MAX
 (32767)

	)

94 #i‚de‡
INT32_MAX


95 
	#INT32_MAX
 (2147483647)

	)

97 #i‚de‡
UINT8_MAX


98 
	#UINT8_MAX
 (255U)

	)

100 #i‚de‡
UINT16_MAX


101 
	#UINT16_MAX
 (65535U)

	)

103 #i‚de‡
UINT32_MAX


104 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`∑t_fûîe°¨t
(
∑t_fûeö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 
∑t_fûñíg
;

177 
FILE
 *
∑t_fûeö
, *
∑t_fûeout
;

179 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

180 
	#EOB_ACT_END_OF_FILE
 1

	)

181 
	#EOB_ACT_LAST_MATCH
 2

	)

183 
	#YY_LESS_LINENO
(
n
)

	)

186 
	#yyÀss
(
n
) \

190 
yyÀss_ma¸o_¨g
 = (
n
); \

191 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

192 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

193 
YY_RESTORE_YY_MORE_OFFSET
 \

194 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

195 
YY_DO_BEFORE_ACTION
; \

197  0 )

	)

199 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

201 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


202 
	#YY_TYPEDEF_YY_SIZE_T


	)

203 
size_t
 
	tyy_size_t
;

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
	gyy_n_ch¨s
;

294 
	g∑t_fûñíg
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
∑t_fûîe°¨t
 (
FILE
 *
öput_fûe
 );

307 
∑t_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
∑t_fûe_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
∑t_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
∑t_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
∑t_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
∑t_fûï›_buf„r_°©e
 ();

314 
∑t_fûìnsuª_buf„r_°ack
 ();

315 
∑t_fûe_lﬂd_buf„r_°©e
 ();

316 
∑t_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`∑t_fûe_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
∑t_fûe_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
∑t_fûe_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
∑t_fûe_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

324 *
∑t_fûóŒoc
 (
yy_size_t
 );

325 *
∑t_fûîóŒoc
 (*,
yy_size_t
 );

326 
∑t_fûe‰ì
 (* );

328 
	#yy_√w_buf„r
 
∑t_fûe_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`∑t_fûìnsuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`∑t_fûe_¸óã_buf„r
(
∑t_fûeö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`∑t_fûìnsuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`∑t_fûe_¸óã_buf„r
(
∑t_fûeö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	#∑t_fûewøp
(
n
Ë1

	)

355 
	#YY_SKIP_YYWRAP


	)

357 
	tYY_CHAR
;

359 
FILE
 *
	g∑t_fûeö
 = (FILE *Ë0, *
	g∑t_fûeout
 = (FILE *) 0;

361 
	tyy_°©e_ty≥
;

363 
∑t_fûñöío
;

365 
	g∑t_fûñöío
 = 1;

367 *
∑t_fûëext
;

368 
	#yyãxt_±r
 
∑t_fûëext


	)

370 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

371 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

372 
yy_gë_√xt_buf„r
 ();

373 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

378 
	#YY_DO_BEFORE_ACTION
 \

379 (
yyãxt_±r
Ë
yy_bp
; \

380 
∑t_fûñíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

381 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

382 *
yy_˝
 = '\0'; \

383 (
yy_c_buf_p
Ë
yy_˝
;

	)

385 
	#YY_NUM_RULES
 11

	)

386 
	#YY_END_OF_BUFFER
 12

	)

389 
	syy_å™s_öfo


391 
Êex_öt32_t
 
	myy_vîify
;

392 
Êex_öt32_t
 
	myy_nxt
;

394 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[81] =

406 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

438 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[39] =

446 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[84] =

459 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[84] =

472 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[296] =

509 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[296] =

546 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

547 *
	gyy_œ°_ac˚±ög_˝os
;

549 
∑t_fûe_Êex_debug
;

550 
	g∑t_fûe_Êex_debug
 = 0;

555 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

556 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

557 
	#YY_MORE_ADJ
 0

	)

558 
	#YY_RESTORE_YY_MORE_OFFSET


	)

559 *
	g∑t_fûëext
;

570 
	~<c°dlib
>

572 
	~"∑t_fûe.h
"

573 
	~"∑t_fûe.èb.hµ
"

575 
usög
 
«me•a˚
 
	g°d
;

577 
	g∑t_fûñöe
 = 1;

582 
	#INITIAL
 0

	)

584 #i‚de‡
YY_NO_UNISTD_H


589 
	~<uni°d.h
>

592 #i‚de‡
YY_EXTRA_TYPE


593 
	#YY_EXTRA_TYPE
 *

	)

596 
yy_öô_globÆs
 ();

601 
∑t_fûñex_de°roy
 ();

603 
∑t_fûegë_debug
 ();

605 
∑t_fûe£t_debug
 (
debug_Êag
 );

607 
YY_EXTRA_TYPE
 
∑t_fûegë_exåa
 ();

609 
∑t_fûe£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

611 
FILE
 *
∑t_fûegë_ö
 ();

613 
∑t_fûe£t_ö
 (
FILE
 * 
ö_°r
 );

615 
FILE
 *
∑t_fûegë_out
 ();

617 
∑t_fûe£t_out
 (
FILE
 * 
out_°r
 );

619 
∑t_fûegë_Àng
 ();

621 *
∑t_fûegë_ãxt
 ();

623 
∑t_fûegë_löío
 ();

625 
∑t_fûe£t_löío
 (
löe_numbî
 );

631 #i‚de‡
YY_SKIP_YYWRAP


632 #ifde‡
__˝lu•lus


633 "C" 
∑t_fûewøp
 ();

635 
∑t_fûewøp
 ();

639 #i‚de‡
yyãxt_±r


640 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

643 #ifde‡
YY_NEED_STRLEN


644 
yy_Êex_°æí
 (
yyc⁄°
 * );

647 #i‚de‡
YY_NO_INPUT


649 #ifde‡
__˝lu•lus


650 
yyöput
 ();

652 
öput
 ();

658 #i‚de‡
YY_READ_BUF_SIZE


659 
	#YY_READ_BUF_SIZE
 8192

	)

663 #i‚de‡
ECHO


667 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
∑t_fûëext
, 
∑t_fûñíg
, 1, 
∑t_fûeout
 )Ë{} } 0)

	)

673 #i‚de‡
YY_INPUT


674 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

675 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

677 
c
 = '*'; \

678 
n
; \

679  
n
 = 0;Ç < 
max_size
 && \

680 (
c
 = 
	`gëc
–
∑t_fûeö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

681 
buf
[
n
] = (Ë
c
; \

682 i‡–
c
 == '\n' ) \

683 
buf
[
n
++] = (Ë
c
; \

684 i‡–
c
 =
EOF
 && 
	`„º‹
–
∑t_fûeö
 ) ) \

685 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

686 
ªsu…
 = 
n
; \

690 
î∫o
=0; \

691  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
∑t_fûeö
))==0 && 
	`„º‹
(pat_filein)) \

693 if–
î∫o
 !
EINTR
) \

695 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

698 
î∫o
=0; \

699 
	`˛óªº
(
∑t_fûeö
); \

703 

	)

710 #i‚de‡
yyãrmö©e


711 
	#yyãrmö©e
(Ë 
YY_NULL


	)

715 #i‚de‡
YY_START_STACK_INCR


716 
	#YY_START_STACK_INCR
 25

	)

720 #i‚de‡
YY_FATAL_ERROR


721 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

729 #i‚de‡
YY_DECL


730 
	#YY_DECL_IS_OURS
 1

	)

732 
∑t_fûñex
 ();

734 
	#YY_DECL
 
	`∑t_fûñex
 ()

	)

740 #i‚de‡
YY_USER_ACTION


741 
	#YY_USER_ACTION


	)

745 #i‚de‡
YY_BREAK


746 
	#YY_BREAK
 ;

	)

749 
	#YY_RULE_SETUP
 \

750 
YY_USER_ACTION


	)

754 
	gYY_DECL


756 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

757 *
	gyy_˝
, *
	gyy_bp
;

758 
	gyy_a˘
;

765 i‡–!(
	gyy_öô
) )

767 (
	gyy_öô
) = 1;

769 #ifde‡
YY_USER_INIT


770 
	gYY_USER_INIT
;

773 i‡–! (
	gyy_°¨t
) )

774 (
	gyy_°¨t
) = 1;

776 i‡–! 
	g∑t_fûeö
 )

777 
	g∑t_fûeö
 = 
°dö
;

779 i‡–! 
	g∑t_fûeout
 )

780 
	g∑t_fûeout
 = 
°dout
;

782 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

783 
∑t_fûìnsuª_buf„r_°ack
 ();

784 
	gYY_CURRENT_BUFFER_LVALUE
 =

785 
∑t_fûe_¸óã_buf„r
(
∑t_fûeö
,
YY_BUF_SIZE
 );

788 
∑t_fûe_lﬂd_buf„r_°©e
( );

793 
	gyy_˝
 = (
yy_c_buf_p
);

796 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

801 
	gyy_bp
 = 
yy_˝
;

803 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

804 
	gyy_m©ch
:

807 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

808 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

810 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

811 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

813  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

815 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

816 i‡–
	gyy_cuºít_°©e
 >= 81 )

817 
yy_c
 = 
yy_mëa
[() yy_c];

819 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

820 ++
	gyy_˝
;

822  
	gyy_ba£
[
yy_cuºít_°©e
] != 257 );

824 
	gyy_föd_a˘i⁄
:

825 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

826 i‡–
	gyy_a˘
 == 0 )

828 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

829 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

830 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

833 
	gYY_DO_BEFORE_ACTION
;

835 
	gdo_a˘i⁄
:

837  
yy_a˘
 )

841 *
yy_˝
 = (
yy_hﬁd_ch¨
);

842 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

843 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

844 
	gyy_föd_a˘i⁄
;

847 
YY_RULE_SETUP


850 
∑t_fûñvÆ
.
y∑tTy≥
 = 
I¡fNs
::
BASIC_SCAN
;

851  
	gPATTERN_TYPE
;

853 
YY_BREAK


855 
YY_RULE_SETUP


858 
∑t_fûñvÆ
.
y∑tTy≥
 = 
I¡fNs
::
LAUNCH_CAPTURE
;

859  
	gPATTERN_TYPE
;

861 
YY_BREAK


863 
YY_RULE_SETUP


866 
∑t_fûñvÆ
.
y∑tTy≥
 = 
I¡fNs
::
LAUNCH_SHIFT
;

867  
	gPATTERN_TYPE
;

869 
YY_BREAK


871 
YY_RULE_SETUP


874 
∑t_fûñvÆ
.
yöt
 = 
©oi
(&
∑t_fûëext
[16]);

875  
	gPATTERN_NUM
;

877 
YY_BREAK


879 
YY_RULE_SETUP


882  
PATTERN
;

884 
YY_BREAK


886 
YY_RULE_SETUP


889 
∑t_fûñvÆ
.
ych¨
 = 
°rdup
(
∑t_fûëext
);

890  
	gNAME
;

892 
YY_BREAK


894 
YY_RULE_SETUP


896 {  
∑t_fûëext
[0]; }

897 
YY_BREAK


900 
YY_RULE_SETUP


902 { 
∑t_fûñöe
++; }

903 
YY_BREAK


905 
YY_RULE_SETUP


908 
YY_BREAK


910 
YY_RULE_SETUP


913 
YY_BREAK


915 
YY_RULE_SETUP


917 
ECHO
;

918 
	gYY_BREAK


920 
YY_STATE_EOF
(
INITIAL
):

921 
yyãrmö©e
();

923 
	gYY_END_OF_BUFFER
:

926 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

929 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

930 
YY_RESTORE_YY_MORE_OFFSET


932 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

943 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

944 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
∑t_fûeö
;

945 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

955 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

957 
yy_°©e_ty≥
 
yy_√xt_°©e
;

959 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

961 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

972 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

974 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

976 i‡–
	gyy_√xt_°©e
 )

979 
	gyy_˝
 = ++(
yy_c_buf_p
);

980 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

981 
	gyy_m©ch
;

986 
	gyy_˝
 = (
yy_c_buf_p
);

987 
	gyy_föd_a˘i⁄
;

991  
yy_gë_√xt_buf„r
( ) )

993 
	gEOB_ACT_END_OF_FILE
:

995 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

997 i‡–
∑t_fûewøp
( ) )

1008 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1010 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1011 
	gdo_a˘i⁄
;

1016 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1017 
	gYY_NEW_FILE
;

1022 
	gEOB_ACT_CONTINUE_SCAN
:

1023 (
yy_c_buf_p
) =

1024 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1026 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1028 
	gyy_˝
 = (
yy_c_buf_p
);

1029 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1030 
	gyy_m©ch
;

1032 
	gEOB_ACT_LAST_MATCH
:

1033 (
yy_c_buf_p
) =

1034 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1036 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1038 
	gyy_˝
 = (
yy_c_buf_p
);

1039 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1040 
	gyy_föd_a˘i⁄
;

1046 
YY_FATAL_ERROR
(

1059 
	$yy_gë_√xt_buf„r
 ()

1061 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1062 *
sour˚
 = (
yyãxt_±r
);

1063 
numbî_to_move
, 
i
;

1064 
ªt_vÆ
;

1066 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1067 
	`YY_FATAL_ERROR
(

1070 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1072 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1077  
EOB_ACT_END_OF_FILE
;

1085  
EOB_ACT_LAST_MATCH
;

1092 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1094  
i
 = 0; i < 
numbî_to_move
; ++i )

1095 *(
de°
++Ë*(
sour˚
++);

1097 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1101 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1105 
num_to_ªad
 =

1106 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1108  
num_to_ªad
 <= 0 )

1112 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1114 
yy_c_buf_p_off£t
 =

1115 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1117 i‡–
b
->
yy_is_our_buf„r
 )

1119 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1121 i‡–
√w_size
 <= 0 )

1122 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1124 
b
->
yy_buf_size
 *= 2;

1126 
b
->
yy_ch_buf
 = (*)

1128 
	`∑t_fûîóŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1132 
b
->
yy_ch_buf
 = 0;

1134 i‡–! 
b
->
yy_ch_buf
 )

1135 
	`YY_FATAL_ERROR
(

1138 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1140 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1141 
numbî_to_move
 - 1;

1145 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1146 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1149 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1150 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

1152 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1155 i‡–(
yy_n_ch¨s
) == 0 )

1157 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1159 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1160 
	`∑t_fûîe°¨t
(
∑t_fûeö
 );

1165 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1166 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1167 
YY_BUFFER_EOF_PENDING
;

1172 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1174 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1176 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1177 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`∑t_fûîóŒoc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1178 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1179 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1182 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1183 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1184 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1186 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1188  
ªt_vÆ
;

1189 
	}
}

1193 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1195 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1196 *
yy_˝
;

1198 
yy_cuºít_°©e
 = (
yy_°¨t
);

1200  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1202 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1203 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1205 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1206 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1208  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1210 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1211 i‡–
yy_cuºít_°©e
 >= 81 )

1212 
yy_c
 = 
yy_mëa
[() yy_c];

1214 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1217  
yy_cuºít_°©e
;

1218 
	}
}

1225 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1227 
yy_is_jam
;

1228 *
yy_˝
 = (
yy_c_buf_p
);

1230 
YY_CHAR
 
yy_c
 = 1;

1231 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1233 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1234 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1236  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1238 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1239 i‡–
yy_cuºít_°©e
 >= 81 )

1240 
yy_c
 = 
yy_mëa
[() yy_c];

1242 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1243 
yy_is_jam
 = (
yy_cuºít_°©e
 == 80);

1245  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1246 
	}
}

1248 #i‚de‡
YY_NO_INPUT


1249 #ifde‡
__˝lu•lus


1250 
	$yyöput
 ()

1252 
	$öput
 ()

1256 
c
;

1258 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1260 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1266 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1268 *(
yy_c_buf_p
) = '\0';

1272 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1273 ++(
yy_c_buf_p
);

1275  
	`yy_gë_√xt_buf„r
( ) )

1277 
EOB_ACT_LAST_MATCH
:

1289 
	`∑t_fûîe°¨t
(
∑t_fûeö
 );

1293 
EOB_ACT_END_OF_FILE
:

1295 i‡–
	`∑t_fûewøp
( ) )

1296  
EOF
;

1298 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1299 
YY_NEW_FILE
;

1300 #ifde‡
__˝lu•lus


1301  
	`yyöput
();

1303  
	`öput
();

1307 
EOB_ACT_CONTINUE_SCAN
:

1308 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1314 
c
 = *(*Ë(
yy_c_buf_p
);

1315 *(
yy_c_buf_p
) = '\0';

1316 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1318  
c
;

1319 
	}
}

1327 
	$∑t_fûîe°¨t
 (
FILE
 * 
öput_fûe
 )

1330 i‡–! 
YY_CURRENT_BUFFER
 ){

1331 
	`∑t_fûìnsuª_buf„r_°ack
 ();

1332 
YY_CURRENT_BUFFER_LVALUE
 =

1333 
	`∑t_fûe_¸óã_buf„r
(
∑t_fûeö
,
YY_BUF_SIZE
 );

1336 
	`∑t_fûe_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1337 
	`∑t_fûe_lﬂd_buf„r_°©e
( );

1338 
	}
}

1344 
	$∑t_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1352 
	`∑t_fûìnsuª_buf„r_°ack
 ();

1353 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1356 i‡–
YY_CURRENT_BUFFER
 )

1359 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1360 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1361 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1364 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1365 
	`∑t_fûe_lﬂd_buf„r_°©e
( );

1372 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1373 
	}
}

1375 
	$∑t_fûe_lﬂd_buf„r_°©e
 ()

1377 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1378 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1379 
∑t_fûeö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1380 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1381 
	}
}

1389 
YY_BUFFER_STATE
 
	$∑t_fûe_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1391 
YY_BUFFER_STATE
 
b
;

1393 
b
 = (
YY_BUFFER_STATE
Ë
	`∑t_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1394 i‡–! 
b
 )

1395 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_file_create_buffer()" );

1397 
b
->
yy_buf_size
 = 
size
;

1402 
b
->
yy_ch_buf
 = (*Ë
	`∑t_fûóŒoc
(b->
yy_buf_size
 + 2 );

1403 i‡–! 
b
->
yy_ch_buf
 )

1404 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_file_create_buffer()" );

1406 
b
->
yy_is_our_buf„r
 = 1;

1408 
	`∑t_fûe_öô_buf„r
(
b
,
fûe
 );

1410  
b
;

1411 
	}
}

1417 
	$∑t_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1420 i‡–! 
b
 )

1423 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1424 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1426 i‡–
b
->
yy_is_our_buf„r
 )

1427 
	`∑t_fûe‰ì
((*Ë
b
->
yy_ch_buf
 );

1429 
	`∑t_fûe‰ì
((*Ë
b
 );

1430 
	}
}

1432 #i‚de‡
__˝lu•lus


1433 
ißây
 ();

1440 
	$∑t_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1443 
€ºno
 = 
î∫o
;

1445 
	`∑t_fûe_Êush_buf„r
(
b
 );

1447 
b
->
yy_öput_fûe
 = 
fûe
;

1448 
b
->
yy_fûl_buf„r
 = 1;

1454 i‡(
b
 !
YY_CURRENT_BUFFER
){

1455 
b
->
yy_bs_löío
 = 1;

1456 
b
->
yy_bs_cﬁumn
 = 0;

1459 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1461 
î∫o
 = 
€ºno
;

1462 
	}
}

1468 
	$∑t_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1470 i‡–! 
b
 )

1473 
b
->
yy_n_ch¨s
 = 0;

1479 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1480 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1482 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1484 
b
->
yy_©_bﬁ
 = 1;

1485 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1487 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1488 
	`∑t_fûe_lﬂd_buf„r_°©e
( );

1489 
	}
}

1497 
	$∑t_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1499 i‡(
√w_buf„r
 =
NULL
)

1502 
	`∑t_fûìnsuª_buf„r_°ack
();

1505 i‡–
YY_CURRENT_BUFFER
 )

1508 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1509 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1510 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1514 i‡(
YY_CURRENT_BUFFER
)

1515 (
yy_buf„r_°ack_t›
)++;

1516 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1519 
	`∑t_fûe_lﬂd_buf„r_°©e
( );

1520 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1521 
	}
}

1527 
	$∑t_fûï›_buf„r_°©e
 ()

1529 i‡(!
YY_CURRENT_BUFFER
)

1532 
	`∑t_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1533 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1534 i‡((
yy_buf„r_°ack_t›
) > 0)

1535 --(
yy_buf„r_°ack_t›
);

1537 i‡(
YY_CURRENT_BUFFER
) {

1538 
	`∑t_fûe_lﬂd_buf„r_°©e
( );

1539 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1541 
	}
}

1546 
	$∑t_fûìnsuª_buf„r_°ack
 ()

1548 
num_to_Æloc
;

1550 i‡(!(
yy_buf„r_°ack
)) {

1556 
num_to_Æloc
 = 1;

1557 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
∑t_fûóŒoc


1558 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1560 i‡–! (
yy_buf„r_°ack
) )

1561 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_fileensure_buffer_stack()" );

1563 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1565 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1566 (
yy_buf„r_°ack_t›
) = 0;

1570 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1573 
grow_size
 = 8 ;

1575 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1576 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
∑t_fûîóŒoc


1577 ((
yy_buf„r_°ack
),

1578 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1580 i‡–! (
yy_buf„r_°ack
) )

1581 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_fileensure_buffer_stack()" );

1584 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1585 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1587 
	}
}

1595 
YY_BUFFER_STATE
 
	$∑t_fûe_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1597 
YY_BUFFER_STATE
 
b
;

1599 i‡–
size
 < 2 ||

1600 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1601 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1605 
b
 = (
YY_BUFFER_STATE
Ë
	`∑t_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1606 i‡–! 
b
 )

1607 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_file_scan_buffer()" );

1609 
b
->
yy_buf_size
 = 
size
 - 2;

1610 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1611 
b
->
yy_is_our_buf„r
 = 0;

1612 
b
->
yy_öput_fûe
 = 0;

1613 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1614 
b
->
yy_is_öãø˘ive
 = 0;

1615 
b
->
yy_©_bﬁ
 = 1;

1616 
b
->
yy_fûl_buf„r
 = 0;

1617 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1619 
	`∑t_fûe_swôch_to_buf„r
(
b
 );

1621  
b
;

1622 
	}
}

1632 
YY_BUFFER_STATE
 
	$∑t_fûe_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1635  
	`∑t_fûe_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1636 
	}
}

1645 
YY_BUFFER_STATE
 
	$∑t_fûe_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

1647 
YY_BUFFER_STATE
 
b
;

1648 *
buf
;

1649 
yy_size_t
 
n
;

1650 
i
;

1653 
n
 = 
_yybyãs_Àn
 + 2;

1654 
buf
 = (*Ë
	`∑t_fûóŒoc
(
n
 );

1655 i‡–! 
buf
 )

1656 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖat_file_scan_bytes()" );

1658  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1659 
buf
[
i
] = 
yybyãs
[i];

1661 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1663 
b
 = 
	`∑t_fûe_sˇn_buf„r
(
buf
,
n
 );

1664 i‡–! 
b
 )

1665 
	`YY_FATAL_ERROR
( "bad buffer inÖat_file_scan_bytes()" );

1670 
b
->
yy_is_our_buf„r
 = 1;

1672  
b
;

1673 
	}
}

1675 #i‚de‡
YY_EXIT_FAILURE


1676 
	#YY_EXIT_FAILURE
 2

	)

1679 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1681 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1682 
	`exô
–
YY_EXIT_FAILURE
 );

1683 
	}
}

1687 #unde‡
yyÀss


1688 
	#yyÀss
(
n
) \

1692 
yyÀss_ma¸o_¨g
 = (
n
); \

1693 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1694 
∑t_fûëext
[
∑t_fûñíg
] = (
yy_hﬁd_ch¨
); \

1695 (
yy_c_buf_p
Ë
∑t_fûëext
 + 
yyÀss_ma¸o_¨g
; \

1696 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1697 *(
yy_c_buf_p
) = '\0'; \

1698 
∑t_fûñíg
 = 
yyÀss_ma¸o_¨g
; \

1700  0 )

	)

1707 
	$∑t_fûegë_löío
 ()

1710  
∑t_fûñöío
;

1711 
	}
}

1716 
FILE
 *
	$∑t_fûegë_ö
 ()

1718  
∑t_fûeö
;

1719 
	}
}

1724 
FILE
 *
	$∑t_fûegë_out
 ()

1726  
∑t_fûeout
;

1727 
	}
}

1732 
	$∑t_fûegë_Àng
 ()

1734  
∑t_fûñíg
;

1735 
	}
}

1741 *
	$∑t_fûegë_ãxt
 ()

1743  
∑t_fûëext
;

1744 
	}
}

1750 
	$∑t_fûe£t_löío
 (
löe_numbî
 )

1753 
∑t_fûñöío
 = 
löe_numbî
;

1754 
	}
}

1762 
	$∑t_fûe£t_ö
 (
FILE
 * 
ö_°r
 )

1764 
∑t_fûeö
 = 
ö_°r
 ;

1765 
	}
}

1767 
	$∑t_fûe£t_out
 (
FILE
 * 
out_°r
 )

1769 
∑t_fûeout
 = 
out_°r
 ;

1770 
	}
}

1772 
	$∑t_fûegë_debug
 ()

1774  
∑t_fûe_Êex_debug
;

1775 
	}
}

1777 
	$∑t_fûe£t_debug
 (
bdebug
 )

1779 
∑t_fûe_Êex_debug
 = 
bdebug
 ;

1780 
	}
}

1782 
	$yy_öô_globÆs
 ()

1788 (
yy_buf„r_°ack
) = 0;

1789 (
yy_buf„r_°ack_t›
) = 0;

1790 (
yy_buf„r_°ack_max
) = 0;

1791 (
yy_c_buf_p
) = (*) 0;

1792 (
yy_öô
) = 0;

1793 (
yy_°¨t
) = 0;

1796 #ifde‡
YY_STDINIT


1797 
∑t_fûeö
 = 
°dö
;

1798 
∑t_fûeout
 = 
°dout
;

1800 
∑t_fûeö
 = (
FILE
 *) 0;

1801 
∑t_fûeout
 = (
FILE
 *) 0;

1808 
	}
}

1811 
	$∑t_fûñex_de°roy
 ()

1815 
YY_CURRENT_BUFFER
){

1816 
	`∑t_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1817 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1818 
	`∑t_fûï›_buf„r_°©e
();

1822 
	`∑t_fûe‰ì
((
yy_buf„r_°ack
) );

1823 (
yy_buf„r_°ack
Ë
NULL
;

1827 
	`yy_öô_globÆs
( );

1830 
	}
}

1836 #i‚de‡
yyãxt_±r


1837 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1839 
i
;

1840  
i
 = 0; i < 
n
; ++i )

1841 
s1
[
i
] = 
s2
[i];

1842 
	}
}

1845 #ifde‡
YY_NEED_STRLEN


1846 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

1848 
n
;

1849  
n
 = 0; 
s
[n]; ++n )

1852  
n
;

1853 
	}
}

1856 *
	$∑t_fûóŒoc
 (
yy_size_t
 
size
 )

1858  (*Ë
	`mÆloc
–
size
 );

1859 
	}
}

1861 *
	$∑t_fûîóŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

1870  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1871 
	}
}

1873 
	$∑t_fûe‰ì
 (* 
±r
 )

1875 
	`‰ì
–(*Ë
±r
 );

1876 
	}
}

1878 
	#YYTABLES_NAME
 "yyèbÀs"

	)

	@interface/lib/dbg/lex_n_yacc/sdf_file.tab.cpp

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

67 
	#yy∑r£
 
sdf_fûï¨£


	)

68 
	#yyÀx
 
sdf_fûñex


	)

69 
	#yyîr‹
 
sdf_fûìº‹


	)

70 
	#yylvÆ
 
sdf_fûñvÆ


	)

71 
	#yych¨
 
sdf_fûech¨


	)

72 
	#yydebug
 
sdf_fûedebug


	)

73 
	#yy√ºs
 
sdf_fûíîrs


	)

89 
	#YYPARSE_PARAM
 
∑øm


	)

91 
	~<c°rög
>

92 
	~<c°dio
>

94 
	~"sdf_fûe.h
"

96 
usög
 
«me•a˚
 
	g°d
;

97 
usög
 
«me•a˚
 
	gI¡fNs
;

99 *
sdf_fûëext
;

100 
sdf_fûñöe
;

101 
sdf_fûñex
();

102 
sdf_fûìº‹
(c⁄° *
msg
);

104 
	gI¡fNs
::
SdfFûe
 *
sdf
;

112 #i‚de‡
YYDEBUG


113 
	#YYDEBUG
 0

	)

117 #ifde‡
YYERROR_VERBOSE


118 #unde‡
YYERROR_VERBOSE


119 
	#YYERROR_VERBOSE
 1

	)

121 
	#YYERROR_VERBOSE
 0

	)

125 #i‚de‡
YYTOKEN_TABLE


126 
	#YYTOKEN_TABLE
 0

	)

131 #i‚de‡
YYTOKENTYPE


132 
	#YYTOKENTYPE


	)

135 
	eyytokíty≥
 {

136 
	mDELAYFILE
 = 258,

137 
	mSDFVERSION
 = 259,

138 
	mDESIGN
 = 260,

139 
	mDATE
 = 261,

140 
	mVENDOR
 = 262,

141 
	mPROGRAM
 = 263,

142 
	mVERSION
 = 264,

143 
	mDIVIDER
 = 265,

144 
	mVOLTAGE
 = 266,

145 
	mPROCESS
 = 267,

146 
	mTEMPERATURE
 = 268,

147 
	mTIMESCALE
 = 269,

148 
	mCELL
 = 270,

149 
	mCELLTYPE
 = 271,

150 
	mINSTANCE
 = 272,

151 
	mDELAY
 = 273,

152 
	mTIMINGCHECK
 = 274,

153 
	mTIMINGENV
 = 275,

154 
	mPATHPULSE
 = 276,

155 
	mPATHPULSEPERCENT
 = 277,

156 
	mABSOLUTE
 = 278,

157 
	mINCREMENT
 = 279,

158 
	mIOPATH
 = 280,

159 
	mRETAIN
 = 281,

160 
	mCOND
 = 282,

161 
	mSCOND
 = 283,

162 
	mCCOND
 = 284,

163 
	mCONDELSE
 = 285,

164 
	mPORT
 = 286,

165 
	mINTERCONNECT
 = 287,

166 
	mDEVICE
 = 288,

167 
	mSETUP
 = 289,

168 
	mHOLD
 = 290,

169 
	mSETUPHOLD
 = 291,

170 
	mRECOVERY
 = 292,

171 
	mREMOVAL
 = 293,

172 
	mRECREM
 = 294,

173 
	mSKEW
 = 295,

174 
	mWIDTH
 = 296,

175 
	mPERIOD
 = 297,

176 
	mNOCHANGE
 = 298,

177 
	mNAME
 = 299,

178 
	mEXCEPTION
 = 300,

179 
	mPATHCONSTRAINT
 = 301,

180 
	mPERIODCONSTRAINT
 = 302,

181 
	mSUM
 = 303,

182 
	mDIFF
 = 304,

183 
	mSKEWCONSTRAINT
 = 305,

184 
	mARRIVAL
 = 306,

185 
	mDEPARTURE
 = 307,

186 
	mSLACK
 = 308,

187 
	mWAVEFORM
 = 309,

188 
	mPOSEDGE
 = 310,

189 
	mNEGEDGE
 = 311,

190 
	mCASE_EQU
 = 312,

191 
	mCASE_INEQU
 = 313,

192 
	mEQU
 = 314,

193 
	mINEQU
 = 315,

194 
	mL_AND
 = 316,

195 
	mL_OR
 = 317,

196 
	mLESS_OR_EQU
 = 318,

197 
	mGREATER_OR_EQU
 = 319,

198 
	mRIGHT_SHIFT
 = 320,

199 
	mLEFT_SHIFT
 = 321,

200 
	mU_NAND
 = 322,

201 
	mU_NOR
 = 323,

202 
	mU_XNOR
 = 324,

203 
	mU_XNOR_ALT
 = 325,

204 
	mBIT_CONST
 = 326,

205 
	mONE_CONST
 = 327,

206 
	mZERO_CONST
 = 328,

207 
	mEDGE
 = 329,

208 
	mPATH
 = 330,

209 
	mIDENTIFIER
 = 331,

210 
	mQSTRING
 = 332,

211 
	mNUMBER
 = 333

217 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


218 
	uYYSTYPE


224 
	myÊﬂt
;

225 
	mych¨
[
I¡fNs
::
NAME_LEN
];

226 
	mI¡fNs
::
SdfDñayTy≥
 
ydñayTy≥
;

227 
	mI¡fNs
::
SdfVÆue
 
yvÆue
;

228 
	mI¡fNs
::
SdfDñayVÆue
 
ydñayVÆue
;

229 
	mI¡fNs
::
SdfDñayVÆueLi°
 
ydñayVÆueLi°
;

230 
	mI¡fNs
::
SdfDñayDef
 *
ydñayDef
;

231 
	mI¡fNs
::
SdfIoP©h
 
yioP©h
;

232 
	mI¡fNs
::
SdfP‹tS≥c
 
yp‹tS≥c
;

238 } 
	tYYSTYPE
;

239 
	#YYSTYPE_IS_TRIVIAL
 1

	)

240 
	#yy°y≥
 
YYSTYPE


	)

241 
	#YYSTYPE_IS_DECLARED
 1

	)

255 #ifde‡
YYTYPE_UINT8


256 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

258 
	tyyty≥_uöt8
;

261 #ifde‡
YYTYPE_INT8


262 
YYTYPE_INT8
 
	tyyty≥_öt8
;

263 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

264 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

265 sig√d 
	tyyty≥_öt8
;

267 
	tyyty≥_öt8
;

270 #ifde‡
YYTYPE_UINT16


271 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

273 
	tyyty≥_uöt16
;

276 #ifde‡
YYTYPE_INT16


277 
YYTYPE_INT16
 
	tyyty≥_öt16
;

279 
	tyyty≥_öt16
;

282 #i‚de‡
YYSIZE_T


283 #ifde‡
__SIZE_TYPE__


284 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

285 #ñi‡
deföed
 
size_t


286 
	#YYSIZE_T
 
size_t


	)

287 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

288 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

289 
	~<°ddef.h
>

290 
	#YYSIZE_T
 
size_t


	)

292 
	#YYSIZE_T
 

	)

296 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

298 #i‚de‡
YY_


299 #i‡
YYENABLE_NLS


300 #i‡
ENABLE_NLS


301 
	~<liböé.h
>

302 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

305 #i‚de‡
YY_


306 
	#YY_
(
msgid
Ë
	)
msgid

311 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


312 
	#YYUSE
(
e
Ë((Ë”))

	)

314 
	#YYUSE
(
e
Ë

	)

318 #i‚de‡
löt


319 
	#YYID
(
n
Ë“)

	)

321 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

322 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

324 
	$YYID
 (
yyi
)

327 
	$YYID
 (
yyi
)

328 
yyi
;

331  
yyi
;

332 
	}
}

335 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


339 #ifde‡
YYSTACK_USE_ALLOCA


340 #i‡
YYSTACK_USE_ALLOCA


341 #ifde‡
__GNUC__


342 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

343 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


344 
	~<Æloˇ.h
>

345 #ñi‡
deföed
 
_AIX


346 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

347 #ñi‡
deföed
 
_MSC_VER


348 
	~<mÆloc.h
>

349 
	#Æloˇ
 
_Æloˇ


	)

351 
	#YYSTACK_ALLOC
 
Æloˇ


	)

352 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

353 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

354 
	~<°dlib.h
>

355 #i‚de‡
_STDLIB_H


356 
	#_STDLIB_H
 1

	)

363 #ifde‡
YYSTACK_ALLOC


365 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

366 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


371 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

374 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

375 
	#YYSTACK_FREE
 
YYFREE


	)

376 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


377 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

379 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

380 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

381 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

382 
	~<°dlib.h
>

383 #i‚de‡
_STDLIB_H


384 
	#_STDLIB_H
 1

	)

387 #i‚de‡
YYMALLOC


388 
	#YYMALLOC
 
mÆloc


	)

389 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

390 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

391 *
mÆloc
 (
YYSIZE_T
);

394 #i‚de‡
YYFREE


395 
	#YYFREE
 
‰ì


	)

396 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

397 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

398 
‰ì
 (*);

405 #i‡(! 
deföed
 
yyovîÊow
 \

406 && (! 
deföed
 
	g__˝lu•lus
 \

407 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

410 
	uyyÆloc


412 
yyty≥_öt16
 
	myyss_Æloc
;

413 
YYSTYPE
 
	myyvs_Æloc
;

417 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

421 
	#YYSTACK_BYTES
(
N
) \

422 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

423 + 
YYSTACK_GAP_MAXIMUM
)

	)

427 #i‚de‡
YYCOPY


428 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

429 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

430 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

432 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

435 
YYSIZE_T
 
yyi
; \

436 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

437 (
To
)[
yyi
] = (
From
)[yyi]; \

439 
	`YYID
 (0))

	)

448 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

451 
YYSIZE_T
 
yy√wbyãs
; \

452 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

453 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

454 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

455 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

457 
	`YYID
 (0))

	)

462 
	#YYFINAL
 3

	)

464 
	#YYLAST
 767

	)

467 
	#YYNTOKENS
 101

	)

469 
	#YYNNTS
 81

	)

471 
	#YYNRULES
 233

	)

473 
	#YYNSTATES
 550

	)

476 
	#YYUNDEFTOK
 2

	)

477 
	#YYMAXUTOK
 333

	)

479 
	#YYTRANSLATE
(
YYX
) \

480 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

483 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

521 #i‡
YYDEBUG


524 c⁄° 
yyty≥_uöt16
 
	gyy¥hs
[] =

553 c⁄° 
yyty≥_öt16
 
	gyyrhs
[] =

658 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

687 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


690 c⁄° *c⁄° 
	gyyäame
[] =

726 #ifde‡
YYPRINT


729 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

746 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

775 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

806 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

866 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

881 
	#YYPACT_NINF
 -457

	)

882 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

942 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

959 
	#YYTABLE_NINF
 -1

	)

960 c⁄° 
yyty≥_uöt16
 
	gyyèbÀ
[] =

1041 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

1124 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1183 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1184 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1185 
	#YYEMPTY
 (-2)

	)

1186 
	#YYEOF
 0

	)

1188 
	#YYACCEPT
 
yyac˚±œb


	)

1189 
	#YYABORT
 
yyab‹éab


	)

1190 
	#YYERROR
 
yyîr‹œb


	)

1197 
	#YYFAIL
 
yyîæab


	)

1199 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1201 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1203 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

1205 
yych¨
 = (
Tokí
); \

1206 
yylvÆ
 = (
VÆue
); \

1207 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

1208 
	`YYPOPSTACK
 (1); \

1209 
yybackup
; \

1213 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

1214 
YYERROR
; \

1216 
	`YYID
 (0))

	)

1219 
	#YYTERROR
 1

	)

1220 
	#YYERRCODE
 256

	)

1227 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

1228 #i‚de‡
YYLLOC_DEFAULT


1229 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

1231 i‡(
	`YYID
 (
N
)) \

1233 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

1234 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

1235 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

1236 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

1240 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

1241 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

1242 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

1243 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

1245 
	`YYID
 (0))

	)

1253 #i‚de‡
YY_LOCATION_PRINT


1254 #i‡
YYLTYPE_IS_TRIVIAL


1255 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

1256 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

1257 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

1258 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

1260 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1267 #ifde‡
YYLEX_PARAM


1268 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

1270 
	#YYLEX
 
	`yyÀx
 ()

	)

1274 #i‡
YYDEBUG


1276 #i‚de‡
YYFPRINTF


1277 
	~<°dio.h
>

1278 
	#YYFPRINTF
 
Ârötf


	)

1281 
	#YYDPRINTF
(
Args
) \

1283 i‡(
yydebug
) \

1284 
YYFPRINTF
 
Args
; \

1285 } 
	`YYID
 (0))

	)

1287 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1289 i‡(
yydebug
) \

1291 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1292 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1293 
Ty≥
, 
VÆue
); \

1294 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1296 } 
	`YYID
 (0))

	)

1304 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1305 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1307 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1310 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

1311 
FILE
 *
yyouçut
;

1312 
yyty≥
;

1313 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

1316 i‡(!
yyvÆuï
)

1318 #ifde‡
YYPRINT


1319 i‡(
yyty≥
 < 
YYNTOKENS
)

1320 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1322 
	`YYUSE
 (
yyouçut
);

1324 
yyty≥
)

1329 
	}
}

1336 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1337 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1339 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1342 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

1343 
FILE
 *
yyouçut
;

1344 
yyty≥
;

1345 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

1348 i‡(
yyty≥
 < 
YYNTOKENS
)

1349 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

1351 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

1353 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

1354 
	`YYFPRINTF
 (
yyouçut
, ")");

1355 
	}
}

1362 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1363 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1365 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1368 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

1369 
yyty≥_öt16
 *
yybŸtom
;

1370 
yyty≥_öt16
 *
yyt›
;

1373 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1374 ; 
yybŸtom
 <
yyt›
; yybottom++)

1376 
yybŸ
 = *
yybŸtom
;

1377 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1379 
	`YYFPRINTF
 (
°dîr
, "\n");

1380 
	}
}

1382 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1384 i‡(
yydebug
) \

1385 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1386 } 
	`YYID
 (0))

	)

1393 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1394 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1396 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1399 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

1400 
YYSTYPE
 *
yyv•
;

1401 
yyruÀ
;

1404 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1405 
yyi
;

1406 
yy o
 = 
yyæöe
[
yyruÀ
];

1407 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1408 
yyruÀ
 - 1, 
yy o
);

1410 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1412 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1413 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

1414 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1416 
	`YYFPRINTF
 (
°dîr
, "\n");

1418 
	}
}

1420 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1422 i‡(
yydebug
) \

1423 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

1424 } 
	`YYID
 (0))

	)

1428 
	gyydebug
;

1430 
	#YYDPRINTF
(
Args
)

	)

1431 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1432 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1433 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1438 #i‚def 
YYINITDEPTH


1439 
	#YYINITDEPTH
 200

	)

1449 #i‚de‡
YYMAXDEPTH


1450 
	#YYMAXDEPTH
 10000

	)

1455 #i‡
YYERROR_VERBOSE


1457 #i‚de‡
yy°æí


1458 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1459 
	#yy°æí
 
°æí


	)

1462 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1463 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1464 
YYSIZE_T


1465 
	$yy°æí
 (c⁄° *
yy°r
)

1467 
YYSIZE_T


1468 
	$yy°æí
 (
yy°r
)

1469 c⁄° *
yy°r
;

1472 
YYSIZE_T
 
yyÀn
;

1473 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1475  
yyÀn
;

1476 
	}
}

1480 #i‚de‡
yy°p˝y


1481 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1482 
	#yy°p˝y
 
°p˝y


	)

1486 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1487 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1489 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1492 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

1493 *
yyde°
;

1494 c⁄° *
yy§c
;

1497 *
yyd
 = 
yyde°
;

1498 c⁄° *
yys
 = 
yy§c
;

1500 (*
yyd
++ = *
yys
++) != '\0')

1503  
yyd
 - 1;

1504 
	}
}

1508 #i‚de‡
yyäamîr


1516 
YYSIZE_T


1517 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1519 i‡(*
yy°r
 == '"')

1521 
YYSIZE_T
 
yyn
 = 0;

1522 c⁄° *
yyp
 = 
yy°r
;

1525 *++
yyp
)

1529 
do_nŸ_°rù_quŸes
;

1532 i‡(*++
yyp
 != '\\')

1533 
do_nŸ_°rù_quŸes
;

1536 i‡(
yyªs
)

1537 
yyªs
[
yyn
] = *
yyp
;

1538 
yyn
++;

1542 i‡(
yyªs
)

1543 
yyªs
[
yyn
] = '\0';

1544  
yyn
;

1546 
do_nŸ_°rù_quŸes
: ;

1549 i‡(! 
yyªs
)

1550  
	`yy°æí
 (
yy°r
);

1552  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1553 
	}
}

1563 
YYSIZE_T


1564 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1566 
yyn
 = 
yy∑˘
[
yy°©e
];

1568 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1572 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1573 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1574 
YYSIZE_T
 
yysize
 = 
yysize0
;

1575 
YYSIZE_T
 
yysize1
;

1576 
yysize_ovîÊow
 = 0;

1577 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1578 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1579 
yyx
;

1584 
	`YY_
("syntaxÉrror, unexpected %s");

1585 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1586 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1587 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1588 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1590 *
yyfmt
;

1591 c⁄° *
yyf
;

1592 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1593 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1594 c⁄° 
yy‹
[] = " or %s";

1595 
yyf‹m©
[ 
yyu√x≥˘ed


1596 +  
yyex≥˘ög
 - 1

1597 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1598 * ( 
yy‹
 - 1))];

1599 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1603 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1606 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1607 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1608 
yycou¡
 = 1;

1610 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1611 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1613 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1614 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1616 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1618 
yycou¡
 = 1;

1619 
yysize
 = 
yysize0
;

1620 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1623 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1624 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1625 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1626 
yysize
 = 
yysize1
;

1627 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1628 
yy¥efix
 = 
yy‹
;

1631 
yyf
 = 
	`YY_
(
yyf‹m©
);

1632 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1633 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1634 
yysize
 = 
yysize1
;

1636 i‡(
yysize_ovîÊow
)

1637  
YYSIZE_MAXIMUM
;

1639 i‡(
yyªsu…
)

1644 *
yyp
 = 
yyªsu…
;

1645 
yyi
 = 0;

1646 (*
yyp
 = *
yyf
) != '\0')

1648 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1650 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1651 
yyf
 += 2;

1655 
yyp
++;

1656 
yyf
++;

1660  
yysize
;

1662 
	}
}

1671 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1672 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1674 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1677 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1678 c⁄° *
yymsg
;

1679 
yyty≥
;

1680 
YYSTYPE
 *
yyvÆuï
;

1683 
	`YYUSE
 (
yyvÆuï
);

1685 i‡(!
yymsg
)

1686 
yymsg
 = "Deleting";

1687 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1689 
yyty≥
)

1695 
	}
}

1698 #ifde‡
YYPARSE_PARAM


1699 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1700 
yy∑r£
 (*
YYPARSE_PARAM
);

1702 
yy∑r£
 ();

1705 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1706 
yy∑r£
 ();

1708 
yy∑r£
 ();

1714 
	gyych¨
;

1717 
YYSTYPE
 
	gyylvÆ
;

1720 
	gyy√ºs
;

1728 #ifde‡
YYPARSE_PARAM


1729 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1730 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1732 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1735 
	$yy∑r£
 (
YYPARSE_PARAM
)

1736 *
YYPARSE_PARAM
;

1739 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1740 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1742 
	$yy∑r£
 ()

1745 
	$yy∑r£
 ()

1752 
yy°©e
;

1754 
yyîr°©us
;

1764 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1765 
yyty≥_öt16
 *
yyss
;

1766 
yyty≥_öt16
 *
yys•
;

1769 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1770 
YYSTYPE
 *
yyvs
;

1771 
YYSTYPE
 *
yyv•
;

1773 
YYSIZE_T
 
yy°acksize
;

1775 
yyn
;

1776 
yyªsu…
;

1778 
yytokí
;

1781 
YYSTYPE
 
yyvÆ
;

1783 #i‡
YYERROR_VERBOSE


1785 
yymsgbuf
[128];

1786 *
yymsg
 = 
yymsgbuf
;

1787 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1790 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1794 
yyÀn
 = 0;

1796 
yytokí
 = 0;

1797 
yyss
 = 
yysß
;

1798 
yyvs
 = 
yyvß
;

1799 
yy°acksize
 = 
YYINITDEPTH
;

1801 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1803 
yy°©e
 = 0;

1804 
yyîr°©us
 = 0;

1805 
yy√ºs
 = 0;

1806 
yych¨
 = 
YYEMPTY
;

1812 
yys•
 = 
yyss
;

1813 
yyv•
 = 
yyvs
;

1815 
yy£t°©e
;

1820 
yy√w°©e
:

1823 
yys•
++;

1825 
yy£t°©e
:

1826 *
yys•
 = 
yy°©e
;

1828 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1831 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1833 #ifde‡
yyovîÊow


1838 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1839 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1845 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1846 &
yyss1
, 
yysize
 *  (*
yys•
),

1847 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1848 &
yy°acksize
);

1850 
yyss
 = 
yyss1
;

1851 
yyvs
 = 
yyvs1
;

1854 #i‚de‡
YYSTACK_RELOCATE


1855 
yyexhau°edœb
;

1858 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1859 
yyexhau°edœb
;

1860 
yy°acksize
 *= 2;

1861 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1862 
yy°acksize
 = 
YYMAXDEPTH
;

1865 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1866 
yyÆloc
 *
yy±r
 =

1867 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1868 i‡(! 
yy±r
)

1869 
yyexhau°edœb
;

1870 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1871 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1872 #unde‡
YYSTACK_RELOCATE


1873 i‡(
yyss1
 !
yysß
)

1874 
	`YYSTACK_FREE
 (
yyss1
);

1879 
yys•
 = 
yyss
 + 
yysize
 - 1;

1880 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1882 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1883 (Ë
yy°acksize
));

1885 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1886 
YYABORT
;

1889 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1891 i‡(
yy°©e
 =
YYFINAL
)

1892 
YYACCEPT
;

1894 
yybackup
;

1899 
yybackup
:

1905 
yyn
 = 
yy∑˘
[
yy°©e
];

1906 i‡(
yyn
 =
YYPACT_NINF
)

1907 
yydeÁu…
;

1912 i‡(
yych¨
 =
YYEMPTY
)

1914 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1915 
yych¨
 = 
YYLEX
;

1918 i‡(
yych¨
 <
YYEOF
)

1920 
yych¨
 = 
yytokí
 = 
YYEOF
;

1921 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1925 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1926 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1931 
yyn
 +
yytokí
;

1932 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1933 
yydeÁu…
;

1934 
yyn
 = 
yyèbÀ
[yyn];

1935 i‡(
yyn
 <= 0)

1937 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1938 
yyîæab
;

1939 
yyn
 = -yyn;

1940 
yyªdu˚
;

1945 i‡(
yyîr°©us
)

1946 
yyîr°©us
--;

1949 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1952 
yych¨
 = 
YYEMPTY
;

1954 
yy°©e
 = 
yyn
;

1955 *++
yyv•
 = 
yylvÆ
;

1957 
yy√w°©e
;

1963 
yydeÁu…
:

1964 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1965 i‡(
yyn
 == 0)

1966 
yyîæab
;

1967 
yyªdu˚
;

1973 
yyªdu˚
:

1975 
yyÀn
 = 
yyr2
[
yyn
];

1985 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1988 
	`YY_REDUCE_PRINT
 (
yyn
);

1989 
yyn
)

1995 { 
sdf
 = (
SdfFûe
 *)(
∑øm
); ;}

2002 { 
sdf
->
	`addVîsi⁄
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2009 { 
sdf
->
	`addDesign
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2016 { 
sdf
->
	`addD©e
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2023 { 
sdf
->
	`addVíd‹
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2030 { 
sdf
->
	`addProgName
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2037 { 
sdf
->
	`addProgVîsi⁄
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2044 { 
sdf
->
	`addHõrCh¨
((
yyv•
[(3Ë- (4)].
ych¨
)[0]); ;}

2051 { (
yyvÆ
.
ych¨
)[0] = '/'; ;}

2058 { (
yyvÆ
.
ych¨
)[0] = '.'; ;}

2065 { 
sdf
->
	`addVﬁège
((
yyv•
[(3Ë- (4)].
yvÆue
)); ;}

2072 { 
SdfVÆue
 
v
;

2073 
v
.
n
 = 1;

2074 
v
.v[0] = (
yyv•
[(3Ë- (4)].
yÊﬂt
);

2075 
sdf
->
	`addVﬁège
(
v
); ;}

2082 { 
sdf
->
	`addPro˚ss
((
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2089 { 
sdf
->
	`addTem≥øtuª
((
yyv•
[(3Ë- (4)].
yvÆue
)); ;}

2096 { 
SdfVÆue
 
v
;

2097 
v
.
n
 = 1;

2098 
v
.v[0] = (
yyv•
[(3Ë- (4)].
yÊﬂt
);

2099 
sdf
->
	`addTem≥øtuª
(
v
); ;}

2106 { 
sdf
->
	`addTimeSˇÀ
((
yyv•
[(1Ë- (2)].
yÊﬂt
), (yyv•[(2Ë- (2)].
ych¨
)); ;}

2113 { 
sdf
->
	`addCñl
((
yyv•
[(1Ë- (2)].
ych¨
), (yyvsp[(2) - (2)].ychar)); ;}

2120 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(3) - (4)].ychar)); ;}

2127 { (
yyvÆ
.
ych¨
)[0] = '\0'; ;}

2134 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(3) - (4)].ychar)); ;}

2141 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(3) - (4)].ychar)); ;}

2148 { (
yyvÆ
.
ych¨
)[0] = '*';

2149 (
yyvÆ
.
ych¨
)[1] = '\0'; ;}

2156 { (
yyvÆ
.
ydñayTy≥
Ë
DELAY_ABSOLUTE
; ;}

2163 { (
yyvÆ
.
ydñayTy≥
Ë
DELAY_INCREMENT
; ;}

2171 (
yyvÆ
.
ydñayDef
Ë(
yyv•
[(1) - (2)].ydelayDef);

2172 (
yyv•
[(1Ë- (2)].
ydñayDef
)->
√xt
 = (yyvsp[(2) - (2)].ydelayDef);

2173 (
yyv•
[(2Ë- (2)].
ydñayDef
)->
hód
 = (yyvsp[(1) - (2)].ydelayDef)->head;

2182 (
yyvÆ
.
ydñayDef
Ë(
yyv•
[(1) - (1)].ydelayDef);

2183 (
yyvÆ
.
ydñayDef
)->
hód
 = (yyval.ydelayDef);

2184 (
yyvÆ
.
ydñayDef
)->
√xt
 = 
NULL
;

2192 { 
	`°r˝y
((
yyvÆ
.
yioP©h
).
ö
, (
yyv•
[(1Ë- (2)].
ych¨
));

2193 
	`°r˝y
((
yyvÆ
.
yioP©h
).
out
, (
yyv•
[(2Ë- (2)].
ych¨
)); ;}

2201 (
yyvÆ
.
ydñayDef
Ë(
yyv•
[(1) - (1)].ydelayDef);

2210 (
yyvÆ
.
ydñayDef
Ë(
yyv•
[(3) - (4)].ydelayDef);

2219 (
yyvÆ
.
ydñayDef
Ë(
yyv•
[(3) - (4)].ydelayDef);

2228 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2229 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
PORT_DELAY
;

2230 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p1
, (
yyv•
[(3Ë- (5)].
ych¨
));

2231 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(4Ë- (5)].
ydñayVÆueLi°
);

2240 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2241 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
INTER_DELAY
;

2242 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p1
, (
yyv•
[(3Ë- (6)].
ych¨
));

2243 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p2
, (
yyv•
[(4Ë- (6)].
ych¨
));

2244 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(5Ë- (6)].
ydñayVÆueLi°
);

2253 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2254 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
DEVICE_DELAY
;

2255 (
yyvÆ
.
ydñayDef
)->
p1
[0] = '\0';

2256 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(3Ë- (4)].
ydñayVÆueLi°
);

2265 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2266 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
DEVICE_DELAY
;

2267 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p1
, (
yyv•
[(3Ë- (5)].
ych¨
));

2268 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(4Ë- (5)].
ydñayVÆueLi°
);

2277 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2278 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
IO_DELAY
;

2279 (
yyvÆ
.
ydñayDef
)->
p•ec
 = (
yyv•
[(3Ë- (6)].
yp‹tS≥c
);

2280 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p1
, (
yyv•
[(4Ë- (6)].
ych¨
));

2281 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(5Ë- (6)].
ydñayVÆueLi°
);

2290 (
yyvÆ
.
ydñayDef
Ë
√w
 
SdfDñayDef
;

2291 (
yyvÆ
.
ydñayDef
)->
ty≥
 = 
SdfDñayDef
::
IO_RETAIN
;

2292 (
yyvÆ
.
ydñayDef
)->
p•ec
 = (
yyv•
[(3Ë- (9)].
yp‹tS≥c
);

2293 
	`°r˝y
((
yyvÆ
.
ydñayDef
)->
p1
, (
yyv•
[(4Ë- (9)].
ych¨
));

2294 (
yyvÆ
.
ydñayDef
)->
vli°
 = (
yyv•
[(7Ë- (9)].
ydñayVÆueLi°
);

2302 { (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_NA
;

2303 
	`°r˝y
((
yyvÆ
.
yp‹tS≥c
).
p‹t
, (
yyv•
[(1Ë- (1)].
ych¨
)); ;}

2310 { (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = (
yyv•
[(1) - (1)].yportSpec).type;

2311 
	`°r˝y
((
yyvÆ
.
yp‹tS≥c
).
p‹t
, (yyval.yportSpec).port); ;}

2318 { (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = (
yyv•
[(2) - (4)].yportSpec).type;

2319 
	`°r˝y
((
yyvÆ
.
yp‹tS≥c
).
p‹t
, (
yyv•
[(3Ë- (4)].
ych¨
)); ;}

2326 { (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_01
; ;}

2333 { (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_10
; ;}

2340 { i‡(!
	`°rcmp
("0z", (
yyv•
[(1Ë- (1)].
ych¨
)))

2341 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_0Z
;

2343 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_1Z
; ;}

2350 { i‡(!
	`°rcmp
("z0", (
yyv•
[(1Ë- (1)].
ych¨
)))

2351 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_Z0
;

2353 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_Z1
; ;}

2360 { i‡((
yyv•
[(1Ë- (1)].
yÊﬂt
) < 10.0)

2361 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_01
;

2363 (
yyvÆ
.
yp‹tS≥c
).
ty≥
 = 
SdfP‹tS≥c
::
EDGE_10
; ;}

2370 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (1)].ychar)); ;}

2377 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (1)].ychar)); ;}

2384 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (1)].ychar)); ;}

2391 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (1)].ychar)); ;}

2398 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (1)].ychar)); ;}

2405 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (4)].ychar));

2406 
	`°rˇt
((
yyvÆ
.
ych¨
), "[");

2407 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(3Ë- (4)].
yÊﬂt
));

2408 
	`°rˇt
((
yyvÆ
.
ych¨
), "]"); ;}

2415 { 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (4)].ychar));

2416 
	`°rˇt
((
yyvÆ
.
ych¨
), "[");

2417 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(3Ë- (4)].
yÊﬂt
));

2418 
	`°rˇt
((
yyvÆ
.
ych¨
), "]"); ;}

2426 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (6)].ychar));

2427 
	`°rˇt
((
yyvÆ
.
ych¨
), "[");

2428 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(3Ë- (6)].
yÊﬂt
));

2429 
	`°rˇt
((
yyvÆ
.
ych¨
), ":");

2430 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(5Ë- (6)].
yÊﬂt
));

2431 
	`°rˇt
((
yyvÆ
.
ych¨
), "]");

2440 
	`°r˝y
((
yyvÆ
.
ych¨
), (
yyv•
[(1) - (6)].ychar));

2441 
	`°rˇt
((
yyvÆ
.
ych¨
), "[");

2442 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(3Ë- (6)].
yÊﬂt
));

2443 
	`°rˇt
((
yyvÆ
.
ych¨
), ":");

2444 
	`•rötf
(&(
yyvÆ
.
ych¨
)[
	`°æí
((yyvÆ.ych¨))], "%d", ()(
yyv•
[(5Ë- (6)].
yÊﬂt
));

2445 
	`°rˇt
((
yyvÆ
.
ych¨
), "]");

2453 { (
yyvÆ
.
yvÆue
).
n
 = 1;

2454 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(2Ë- (3)].
yÊﬂt
); ;}

2461 { (
yyvÆ
.
yvÆue
).
n
 = (
yyv•
[(2) - (3)].yvalue).n;

2462 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(2) - (3)].yvalue).v[0];

2463 (
yyvÆ
.
yvÆue
).
v
[1] = (
yyv•
[(2) - (3)].yvalue).v[1];

2464 (
yyvÆ
.
yvÆue
).
v
[2] = (
yyv•
[(2) - (3)].yvalue).v[2]; ;}

2471 { (
yyvÆ
.
yvÆue
).
n
 = 0; ;}

2478 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2479 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(1Ë- (3)].
yÊﬂt
);

2480 (
yyvÆ
.
yvÆue
).
v
[1] = 0;

2481 (
yyvÆ
.
yvÆue
).
v
[2] = 0; ;}

2488 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2489 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(1Ë- (4)].
yÊﬂt
);

2490 (
yyvÆ
.
yvÆue
).
v
[1] = (
yyv•
[(3Ë- (4)].
yÊﬂt
);

2491 (
yyvÆ
.
yvÆue
).
v
[2] = 0; ;}

2498 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2499 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(1Ë- (4)].
yÊﬂt
);

2500 (
yyvÆ
.
yvÆue
).
v
[1] = 0;

2501 (
yyvÆ
.
yvÆue
).
v
[2] = (
yyv•
[(4Ë- (4)].
yÊﬂt
); ;}

2508 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2509 (
yyvÆ
.
yvÆue
).
v
[0] = 0;

2510 (
yyvÆ
.
yvÆue
).
v
[1] = (
yyv•
[(2Ë- (3)].
yÊﬂt
);

2511 (
yyvÆ
.
yvÆue
).
v
[2] = 0; ;}

2518 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2519 (
yyvÆ
.
yvÆue
).
v
[0] = 0;

2520 (
yyvÆ
.
yvÆue
).
v
[1] = (
yyv•
[(2Ë- (4)].
yÊﬂt
);

2521 (
yyvÆ
.
yvÆue
).
v
[2] = (
yyv•
[(4Ë- (4)].
yÊﬂt
); ;}

2528 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2529 (
yyvÆ
.
yvÆue
).
v
[0] = 0;

2530 (
yyvÆ
.
yvÆue
).
v
[1] = 0;

2531 (
yyvÆ
.
yvÆue
).
v
[2] = (
yyv•
[(3Ë- (3)].
yÊﬂt
); ;}

2538 { (
yyvÆ
.
yvÆue
).
n
 = 3;

2539 (
yyvÆ
.
yvÆue
).
v
[0] = (
yyv•
[(1Ë- (5)].
yÊﬂt
);

2540 (
yyvÆ
.
yvÆue
).
v
[1] = (
yyv•
[(3Ë- (5)].
yÊﬂt
);

2541 (
yyvÆ
.
yvÆue
).
v
[2] = (
yyv•
[(5Ë- (5)].
yÊﬂt
); ;}

2548 { (
yyvÆ
.
ydñayVÆue
).
n
 = 1;

2549 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[0], (
yyv•
[(1Ë- (1)].
yvÆue
)); ;}

2556 { (
yyvÆ
.
ydñayVÆue
).
n
 = 2;

2557 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[0], (
yyv•
[(2Ë- (4)].
yvÆue
));

2558 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[1], (
yyv•
[(3Ë- (4)].
yvÆue
)); ;}

2565 { (
yyvÆ
.
ydñayVÆue
).
n
 = 3;

2566 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[0], (
yyv•
[(2Ë- (5)].
yvÆue
));

2567 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[0], (
yyv•
[(3Ë- (5)].
yvÆue
));

2568 
	`sdfVÆueC›y
((
yyvÆ
.
ydñayVÆue
).
v
[1], (
yyv•
[(4Ë- (5)].
yvÆue
)); ;}

2576 (
yyvÆ
.
ydñayVÆueLi°
).
n
 = 1;

2577 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[0], (
yyv•
[(1Ë- (1)].
ydñayVÆue
));

2586 (
yyvÆ
.
ydñayVÆueLi°
).
n
 = 2;

2587 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[0], (
yyv•
[(1Ë- (2)].
ydñayVÆue
));

2588 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[1], (
yyv•
[(1Ë- (2)].
ydñayVÆue
));

2597 (
yyvÆ
.
ydñayVÆueLi°
).
n
 = 3;

2598 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[0], (
yyv•
[(1Ë- (3)].
ydñayVÆue
));

2599 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[1], (
yyv•
[(2Ë- (3)].
ydñayVÆue
));

2600 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[2], (
yyv•
[(3Ë- (3)].
ydñayVÆue
));

2609 (
yyvÆ
.
ydñayVÆueLi°
).
n
 = 6;

2610 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[0], (
yyv•
[(1Ë- (6)].
ydñayVÆue
));

2611 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[1], (
yyv•
[(2Ë- (6)].
ydñayVÆue
));

2612 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[2], (
yyv•
[(3Ë- (6)].
ydñayVÆue
));

2613 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[3], (
yyv•
[(4Ë- (6)].
ydñayVÆue
));

2614 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[4], (
yyv•
[(5Ë- (6)].
ydñayVÆue
));

2615 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[5], (
yyv•
[(6Ë- (6)].
ydñayVÆue
));

2624 (
yyvÆ
.
ydñayVÆueLi°
).
n
 = 12;

2625 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[0], (
yyv•
[(1Ë- (12)].
ydñayVÆue
));

2626 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[1], (
yyv•
[(2Ë- (12)].
ydñayVÆue
));

2627 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[2], (
yyv•
[(3Ë- (12)].
ydñayVÆue
));

2628 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[3], (
yyv•
[(4Ë- (12)].
ydñayVÆue
));

2629 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[4], (
yyv•
[(5Ë- (12)].
ydñayVÆue
));

2630 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[5], (
yyv•
[(6Ë- (12)].
ydñayVÆue
));

2631 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[6], (
yyv•
[(7Ë- (12)].
ydñayVÆue
));

2632 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[7], (
yyv•
[(8Ë- (12)].
ydñayVÆue
));

2633 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[8], (
yyv•
[(9Ë- (12)].
ydñayVÆue
));

2634 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[9], (
yyv•
[(10Ë- (12)].
ydñayVÆue
));

2635 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[10], (
yyv•
[(11Ë- (12)].
ydñayVÆue
));

2636 
	`sdfDñayVÆueC›y
((
yyvÆ
.
ydñayVÆueLi°
).
v
[11], (
yyv•
[(12Ë- (12)].
ydñayVÆue
));

2646 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

2648 
	`YYPOPSTACK
 (
yyÀn
);

2649 
yyÀn
 = 0;

2650 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2652 *++
yyv•
 = 
yyvÆ
;

2658 
yyn
 = 
yyr1
[yyn];

2660 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

2661 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

2662 
yy°©e
 = 
yyèbÀ
[yystate];

2664 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

2666 
yy√w°©e
;

2672 
yyîæab
:

2674 i‡(!
yyîr°©us
)

2676 ++
yy√ºs
;

2677 #i‡! 
YYERROR_VERBOSE


2678 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2681 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

2682 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

2684 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

2685 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

2686 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

2687 i‡(
yymsg
 !
yymsgbuf
)

2688 
	`YYSTACK_FREE
 (
yymsg
);

2689 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

2690 i‡(
yymsg
)

2691 
yymsg_Æloc
 = 
yyÆloc
;

2694 
yymsg
 = 
yymsgbuf
;

2695 
yymsg_Æloc
 =  
yymsgbuf
;

2699 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

2701 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

2702 
	`yyîr‹
 (
yymsg
);

2706 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2707 i‡(
yysize
 != 0)

2708 
yyexhau°edœb
;

2716 i‡(
yyîr°©us
 == 3)

2721 i‡(
yych¨
 <
YYEOF
)

2724 i‡(
yych¨
 =
YYEOF
)

2725 
YYABORT
;

2729 
	`yyde°ru˘
 ("Error: discarding",

2730 
yytokí
, &
yylvÆ
);

2731 
yych¨
 = 
YYEMPTY
;

2737 
yyîæab1
;

2743 
yyîr‹œb
:

2749 
yyîr‹œb
;

2753 
	`YYPOPSTACK
 (
yyÀn
);

2754 
yyÀn
 = 0;

2755 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2756 
yy°©e
 = *
yys•
;

2757 
yyîæab1
;

2763 
yyîæab1
:

2764 
yyîr°©us
 = 3;

2768 
yyn
 = 
yy∑˘
[
yy°©e
];

2769 i‡(
yyn
 !
YYPACT_NINF
)

2771 
yyn
 +
YYTERROR
;

2772 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2774 
yyn
 = 
yyèbÀ
[yyn];

2775 i‡(0 < 
yyn
)

2781 i‡(
yys•
 =
yyss
)

2782 
YYABORT
;

2785 
	`yyde°ru˘
 ("Error:Öopping",

2786 
yy°os
[
yy°©e
], 
yyv•
);

2787 
	`YYPOPSTACK
 (1);

2788 
yy°©e
 = *
yys•
;

2789 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2792 *++
yyv•
 = 
yylvÆ
;

2796 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2798 
yy°©e
 = 
yyn
;

2799 
yy√w°©e
;

2805 
yyac˚±œb
:

2806 
yyªsu…
 = 0;

2807 
yyªtu∫
;

2812 
yyab‹éab
:

2813 
yyªsu…
 = 1;

2814 
yyªtu∫
;

2816 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


2820 
yyexhau°edœb
:

2821 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2822 
yyªsu…
 = 2;

2826 
yyªtu∫
:

2827 i‡(
yych¨
 !
YYEMPTY
)

2828 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2829 
yytokí
, &
yylvÆ
);

2832 
	`YYPOPSTACK
 (
yyÀn
);

2833 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2834 
yys•
 !
yyss
)

2836 
	`yyde°ru˘
 ("Cleanup:Öopping",

2837 
yy°os
[*
yys•
], 
yyv•
);

2838 
	`YYPOPSTACK
 (1);

2840 #i‚de‡
yyovîÊow


2841 i‡(
yyss
 !
yysß
)

2842 
	`YYSTACK_FREE
 (
yyss
);

2844 #i‡
YYERROR_VERBOSE


2845 i‡(
yymsg
 !
yymsgbuf
)

2846 
	`YYSTACK_FREE
 (
yymsg
);

2849  
	`YYID
 (
yyªsu…
);

2850 
	}
}

2858 
	$sdf_fûìº‹
(c⁄° *
msg
) {

2859 
	`Ârötf
(
°dîr
, "**ERROR sdf_fileerror(): ");

2860 
	`Ârötf
(
°dîr
, "Aàlöê%d. Nó∏`%s'. ", 
sdf_fûñöe
, 
sdf_fûëext
);

2861 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

2862 
	}
}

	@interface/lib/dbg/lex_n_yacc/sdf_file.tab.hpp

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mDELAYFILE
 = 258,

43 
	mSDFVERSION
 = 259,

44 
	mDESIGN
 = 260,

45 
	mDATE
 = 261,

46 
	mVENDOR
 = 262,

47 
	mPROGRAM
 = 263,

48 
	mVERSION
 = 264,

49 
	mDIVIDER
 = 265,

50 
	mVOLTAGE
 = 266,

51 
	mPROCESS
 = 267,

52 
	mTEMPERATURE
 = 268,

53 
	mTIMESCALE
 = 269,

54 
	mCELL
 = 270,

55 
	mCELLTYPE
 = 271,

56 
	mINSTANCE
 = 272,

57 
	mDELAY
 = 273,

58 
	mTIMINGCHECK
 = 274,

59 
	mTIMINGENV
 = 275,

60 
	mPATHPULSE
 = 276,

61 
	mPATHPULSEPERCENT
 = 277,

62 
	mABSOLUTE
 = 278,

63 
	mINCREMENT
 = 279,

64 
	mIOPATH
 = 280,

65 
	mRETAIN
 = 281,

66 
	mCOND
 = 282,

67 
	mSCOND
 = 283,

68 
	mCCOND
 = 284,

69 
	mCONDELSE
 = 285,

70 
	mPORT
 = 286,

71 
	mINTERCONNECT
 = 287,

72 
	mDEVICE
 = 288,

73 
	mSETUP
 = 289,

74 
	mHOLD
 = 290,

75 
	mSETUPHOLD
 = 291,

76 
	mRECOVERY
 = 292,

77 
	mREMOVAL
 = 293,

78 
	mRECREM
 = 294,

79 
	mSKEW
 = 295,

80 
	mWIDTH
 = 296,

81 
	mPERIOD
 = 297,

82 
	mNOCHANGE
 = 298,

83 
	mNAME
 = 299,

84 
	mEXCEPTION
 = 300,

85 
	mPATHCONSTRAINT
 = 301,

86 
	mPERIODCONSTRAINT
 = 302,

87 
	mSUM
 = 303,

88 
	mDIFF
 = 304,

89 
	mSKEWCONSTRAINT
 = 305,

90 
	mARRIVAL
 = 306,

91 
	mDEPARTURE
 = 307,

92 
	mSLACK
 = 308,

93 
	mWAVEFORM
 = 309,

94 
	mPOSEDGE
 = 310,

95 
	mNEGEDGE
 = 311,

96 
	mCASE_EQU
 = 312,

97 
	mCASE_INEQU
 = 313,

98 
	mEQU
 = 314,

99 
	mINEQU
 = 315,

100 
	mL_AND
 = 316,

101 
	mL_OR
 = 317,

102 
	mLESS_OR_EQU
 = 318,

103 
	mGREATER_OR_EQU
 = 319,

104 
	mRIGHT_SHIFT
 = 320,

105 
	mLEFT_SHIFT
 = 321,

106 
	mU_NAND
 = 322,

107 
	mU_NOR
 = 323,

108 
	mU_XNOR
 = 324,

109 
	mU_XNOR_ALT
 = 325,

110 
	mBIT_CONST
 = 326,

111 
	mONE_CONST
 = 327,

112 
	mZERO_CONST
 = 328,

113 
	mEDGE
 = 329,

114 
	mPATH
 = 330,

115 
	mIDENTIFIER
 = 331,

116 
	mQSTRING
 = 332,

117 
	mNUMBER
 = 333

123 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


124 
	uYYSTYPE


130 
	myÊﬂt
;

131 
	mych¨
[
I¡fNs
::
NAME_LEN
];

132 
	mI¡fNs
::
SdfDñayTy≥
 
ydñayTy≥
;

133 
	mI¡fNs
::
SdfVÆue
 
yvÆue
;

134 
	mI¡fNs
::
SdfDñayVÆue
 
ydñayVÆue
;

135 
	mI¡fNs
::
SdfDñayVÆueLi°
 
ydñayVÆueLi°
;

136 
	mI¡fNs
::
SdfDñayDef
 *
ydñayDef
;

137 
	mI¡fNs
::
SdfIoP©h
 
yioP©h
;

138 
	mI¡fNs
::
SdfP‹tS≥c
 
yp‹tS≥c
;

144 } 
	tYYSTYPE
;

145 
	#YYSTYPE_IS_TRIVIAL
 1

	)

146 
	#yy°y≥
 
YYSTYPE


	)

147 
	#YYSTYPE_IS_DECLARED
 1

	)

150 
YYSTYPE
 
sdf_fûñvÆ
;

	@interface/lib/dbg/lex_n_yacc/sdf_file.yy.cpp

5 
	#YY_INT_ALIGNED
 

	)

9 
	#yy_¸óã_buf„r
 
sdf_fûe_¸óã_buf„r


	)

10 
	#yy_dñëe_buf„r
 
sdf_fûe_dñëe_buf„r


	)

11 
	#yy_Êex_debug
 
sdf_fûe_Êex_debug


	)

12 
	#yy_öô_buf„r
 
sdf_fûe_öô_buf„r


	)

13 
	#yy_Êush_buf„r
 
sdf_fûe_Êush_buf„r


	)

14 
	#yy_lﬂd_buf„r_°©e
 
sdf_fûe_lﬂd_buf„r_°©e


	)

15 
	#yy_swôch_to_buf„r
 
sdf_fûe_swôch_to_buf„r


	)

16 
	#yyö
 
sdf_fûeö


	)

17 
	#yyÀng
 
sdf_fûñíg


	)

18 
	#yyÀx
 
sdf_fûñex


	)

19 
	#yylöío
 
sdf_fûñöío


	)

20 
	#yyout
 
sdf_fûeout


	)

21 
	#yyª°¨t
 
sdf_fûîe°¨t


	)

22 
	#yyãxt
 
sdf_fûëext


	)

23 
	#yywøp
 
sdf_fûewøp


	)

24 
	#yyÆloc
 
sdf_fûóŒoc


	)

25 
	#yyªÆloc
 
sdf_fûîóŒoc


	)

26 
	#yy‰ì
 
sdf_fûe‰ì


	)

28 
	#FLEX_SCANNER


	)

29 
	#YY_FLEX_MAJOR_VERSION
 2

	)

30 
	#YY_FLEX_MINOR_VERSION
 5

	)

31 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

32 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

33 
	#FLEX_BETA


	)

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<°dlib.h
>

48 #i‚de‡
FLEXINT_H


49 
	#FLEXINT_H


	)

53 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

58 #i‚de‡
__STDC_LIMIT_MACROS


59 
	#__STDC_LIMIT_MACROS
 1

	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	tÊex_öt8_t
;

64 
uöt8_t
 
	tÊex_uöt8_t
;

65 
öt16_t
 
	tÊex_öt16_t
;

66 
uöt16_t
 
	tÊex_uöt16_t
;

67 
öt32_t
 
	tÊex_öt32_t
;

68 
uöt32_t
 
	tÊex_uöt32_t
;

70 sig√d 
	tÊex_öt8_t
;

71 
	tÊex_öt16_t
;

72 
	tÊex_öt32_t
;

73 
	tÊex_uöt8_t
;

74 
	tÊex_uöt16_t
;

75 
	tÊex_uöt32_t
;

79 #i‚de‡
INT8_MIN


80 
	#INT8_MIN
 (-128)

	)

82 #i‚de‡
INT16_MIN


83 
	#INT16_MIN
 (-32767-1)

	)

85 #i‚de‡
INT32_MIN


86 
	#INT32_MIN
 (-2147483647-1)

	)

88 #i‚de‡
INT8_MAX


89 
	#INT8_MAX
 (127)

	)

91 #i‚de‡
INT16_MAX


92 
	#INT16_MAX
 (32767)

	)

94 #i‚de‡
INT32_MAX


95 
	#INT32_MAX
 (2147483647)

	)

97 #i‚de‡
UINT8_MAX


98 
	#UINT8_MAX
 (255U)

	)

100 #i‚de‡
UINT16_MAX


101 
	#UINT16_MAX
 (65535U)

	)

103 #i‚de‡
UINT32_MAX


104 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`sdf_fûîe°¨t
(
sdf_fûeö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 
sdf_fûñíg
;

177 
FILE
 *
sdf_fûeö
, *
sdf_fûeout
;

179 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

180 
	#EOB_ACT_END_OF_FILE
 1

	)

181 
	#EOB_ACT_LAST_MATCH
 2

	)

183 
	#YY_LESS_LINENO
(
n
)

	)

186 
	#yyÀss
(
n
) \

190 
yyÀss_ma¸o_¨g
 = (
n
); \

191 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

192 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

193 
YY_RESTORE_YY_MORE_OFFSET
 \

194 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

195 
YY_DO_BEFORE_ACTION
; \

197  0 )

	)

199 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

201 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


202 
	#YY_TYPEDEF_YY_SIZE_T


	)

203 
size_t
 
	tyy_size_t
;

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
	gyy_n_ch¨s
;

294 
	gsdf_fûñíg
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
sdf_fûîe°¨t
 (
FILE
 *
öput_fûe
 );

307 
sdf_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
sdf_fûe_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
sdf_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
sdf_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
sdf_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
sdf_fûï›_buf„r_°©e
 ();

314 
sdf_fûìnsuª_buf„r_°ack
 ();

315 
sdf_fûe_lﬂd_buf„r_°©e
 ();

316 
sdf_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`sdf_fûe_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
sdf_fûe_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
sdf_fûe_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
sdf_fûe_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

324 *
sdf_fûóŒoc
 (
yy_size_t
 );

325 *
sdf_fûîóŒoc
 (*,
yy_size_t
 );

326 
sdf_fûe‰ì
 (* );

328 
	#yy_√w_buf„r
 
sdf_fûe_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`sdf_fûìnsuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`sdf_fûe_¸óã_buf„r
(
sdf_fûeö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`sdf_fûìnsuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`sdf_fûe_¸óã_buf„r
(
sdf_fûeö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	#sdf_fûewøp
(
n
Ë1

	)

355 
	#YY_SKIP_YYWRAP


	)

357 
	tYY_CHAR
;

359 
FILE
 *
	gsdf_fûeö
 = (FILE *Ë0, *
	gsdf_fûeout
 = (FILE *) 0;

361 
	tyy_°©e_ty≥
;

363 
sdf_fûñöío
;

365 
	gsdf_fûñöío
 = 1;

367 *
sdf_fûëext
;

368 
	#yyãxt_±r
 
sdf_fûëext


	)

370 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

371 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

372 
yy_gë_√xt_buf„r
 ();

373 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

378 
	#YY_DO_BEFORE_ACTION
 \

379 (
yyãxt_±r
Ë
yy_bp
; \

380 
sdf_fûñíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

381 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

382 *
yy_˝
 = '\0'; \

383 (
yy_c_buf_p
Ë
yy_˝
;

	)

385 
	#YY_NUM_RULES
 105

	)

386 
	#YY_END_OF_BUFFER
 106

	)

389 
	syy_å™s_öfo


391 
Êex_öt32_t
 
	myy_vîify
;

392 
Êex_öt32_t
 
	myy_nxt
;

394 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[398] =

442 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

474 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[65] =

485 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[406] =

534 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[406] =

583 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[1800] =

785 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[1800] =

987 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

988 *
	gyy_œ°_ac˚±ög_˝os
;

990 
sdf_fûe_Êex_debug
;

991 
	gsdf_fûe_Êex_debug
 = 0;

996 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

997 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

998 
	#YY_MORE_ADJ
 0

	)

999 
	#YY_RESTORE_YY_MORE_OFFSET


	)

1000 *
	gsdf_fûëext
;

1010 
	~"sdf_fûe.h
"

1011 
	~"sdf_fûe.èb.hµ
"

1013 
usög
 
«me•a˚
 
	g°d
;

1015 
	gsdf_fûñöe
 = 1;

1020 
	#INITIAL
 0

	)

1021 
	#COMMENT
 1

	)

1023 #i‚de‡
YY_NO_UNISTD_H


1028 
	~<uni°d.h
>

1031 #i‚de‡
YY_EXTRA_TYPE


1032 
	#YY_EXTRA_TYPE
 *

	)

1035 
yy_öô_globÆs
 ();

1040 
sdf_fûñex_de°roy
 ();

1042 
sdf_fûegë_debug
 ();

1044 
sdf_fûe£t_debug
 (
debug_Êag
 );

1046 
YY_EXTRA_TYPE
 
sdf_fûegë_exåa
 ();

1048 
sdf_fûe£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

1050 
FILE
 *
sdf_fûegë_ö
 ();

1052 
sdf_fûe£t_ö
 (
FILE
 * 
ö_°r
 );

1054 
FILE
 *
sdf_fûegë_out
 ();

1056 
sdf_fûe£t_out
 (
FILE
 * 
out_°r
 );

1058 
sdf_fûegë_Àng
 ();

1060 *
sdf_fûegë_ãxt
 ();

1062 
sdf_fûegë_löío
 ();

1064 
sdf_fûe£t_löío
 (
löe_numbî
 );

1070 #i‚de‡
YY_SKIP_YYWRAP


1071 #ifde‡
__˝lu•lus


1072 "C" 
sdf_fûewøp
 ();

1074 
sdf_fûewøp
 ();

1078 #i‚de‡
yyãxt_±r


1079 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

1082 #ifde‡
YY_NEED_STRLEN


1083 
yy_Êex_°æí
 (
yyc⁄°
 * );

1086 #i‚de‡
YY_NO_INPUT


1088 #ifde‡
__˝lu•lus


1089 
yyöput
 ();

1091 
öput
 ();

1097 #i‚de‡
YY_READ_BUF_SIZE


1098 
	#YY_READ_BUF_SIZE
 8192

	)

1102 #i‚de‡
ECHO


1106 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
sdf_fûëext
, 
sdf_fûñíg
, 1, 
sdf_fûeout
 )Ë{} } 0)

	)

1112 #i‚de‡
YY_INPUT


1113 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

1114 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

1116 
c
 = '*'; \

1117 
n
; \

1118  
n
 = 0;Ç < 
max_size
 && \

1119 (
c
 = 
	`gëc
–
sdf_fûeö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

1120 
buf
[
n
] = (Ë
c
; \

1121 i‡–
c
 == '\n' ) \

1122 
buf
[
n
++] = (Ë
c
; \

1123 i‡–
c
 =
EOF
 && 
	`„º‹
–
sdf_fûeö
 ) ) \

1124 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1125 
ªsu…
 = 
n
; \

1129 
î∫o
=0; \

1130  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
sdf_fûeö
))==0 && 
	`„º‹
(sdf_filein)) \

1132 if–
î∫o
 !
EINTR
) \

1134 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1137 
î∫o
=0; \

1138 
	`˛óªº
(
sdf_fûeö
); \

1142 

	)

1149 #i‚de‡
yyãrmö©e


1150 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1154 #i‚de‡
YY_START_STACK_INCR


1155 
	#YY_START_STACK_INCR
 25

	)

1159 #i‚de‡
YY_FATAL_ERROR


1160 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1168 #i‚de‡
YY_DECL


1169 
	#YY_DECL_IS_OURS
 1

	)

1171 
sdf_fûñex
 ();

1173 
	#YY_DECL
 
	`sdf_fûñex
 ()

	)

1179 #i‚de‡
YY_USER_ACTION


1180 
	#YY_USER_ACTION


	)

1184 #i‚de‡
YY_BREAK


1185 
	#YY_BREAK
 ;

	)

1188 
	#YY_RULE_SETUP
 \

1189 
YY_USER_ACTION


	)

1193 
	gYY_DECL


1195 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1196 *
	gyy_˝
, *
	gyy_bp
;

1197 
	gyy_a˘
;

1204 i‡–!(
	gyy_öô
) )

1206 (
	gyy_öô
) = 1;

1208 #ifde‡
YY_USER_INIT


1209 
	gYY_USER_INIT
;

1212 i‡–! (
	gyy_°¨t
) )

1213 (
	gyy_°¨t
) = 1;

1215 i‡–! 
	gsdf_fûeö
 )

1216 
	gsdf_fûeö
 = 
°dö
;

1218 i‡–! 
	gsdf_fûeout
 )

1219 
	gsdf_fûeout
 = 
°dout
;

1221 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1222 
sdf_fûìnsuª_buf„r_°ack
 ();

1223 
	gYY_CURRENT_BUFFER_LVALUE
 =

1224 
sdf_fûe_¸óã_buf„r
(
sdf_fûeö
,
YY_BUF_SIZE
 );

1227 
sdf_fûe_lﬂd_buf„r_°©e
( );

1232 
	gyy_˝
 = (
yy_c_buf_p
);

1235 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1240 
	gyy_bp
 = 
yy_˝
;

1242 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1243 
	gyy_m©ch
:

1246 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

1247 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1249 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1250 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1252  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1254 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1255 i‡–
	gyy_cuºít_°©e
 >= 398 )

1256 
yy_c
 = 
yy_mëa
[() yy_c];

1258 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

1259 ++
	gyy_˝
;

1261  
	gyy_ba£
[
yy_cuºít_°©e
] != 1735 );

1263 
	gyy_föd_a˘i⁄
:

1264 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1265 i‡–
	gyy_a˘
 == 0 )

1267 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1268 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1269 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1272 
	gYY_DO_BEFORE_ACTION
;

1274 
	gdo_a˘i⁄
:

1276  
yy_a˘
 )

1280 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1281 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1282 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1283 
	gyy_föd_a˘i⁄
;

1286 
YY_RULE_SETUP


1289 
YY_BREAK


1291 
YY_RULE_SETUP


1293 
BEGIN
 
COMMENT
 ;

1294 
YY_BREAK


1296 
YY_RULE_SETUP


1298 
BEGIN
 
INITIAL
 ;

1299 
YY_BREAK


1302 
YY_RULE_SETUP


1304 { 
sdf_fûñöe
++; }

1305 
YY_BREAK


1307 
YY_RULE_SETUP


1310 
YY_BREAK


1312 
YY_RULE_SETUP


1314 {  
DELAYFILE
; }

1315 
YY_BREAK


1317 
YY_RULE_SETUP


1319 {  
SDFVERSION
; }

1320 
YY_BREAK


1322 
YY_RULE_SETUP


1324 {  
DESIGN
; }

1325 
YY_BREAK


1327 
YY_RULE_SETUP


1329 {  
DATE
; }

1330 
YY_BREAK


1332 
YY_RULE_SETUP


1334 {  
VENDOR
; }

1335 
YY_BREAK


1337 
YY_RULE_SETUP


1339 {  
PROGRAM
; }

1340 
YY_BREAK


1342 
YY_RULE_SETUP


1344 {  
VERSION
; }

1345 
YY_BREAK


1347 
YY_RULE_SETUP


1349 {  
DIVIDER
; }

1350 
YY_BREAK


1352 
YY_RULE_SETUP


1354 {  
VOLTAGE
; }

1355 
YY_BREAK


1357 
YY_RULE_SETUP


1359 {  
PROCESS
; }

1360 
YY_BREAK


1362 
YY_RULE_SETUP


1364 {  
TEMPERATURE
; }

1365 
YY_BREAK


1367 
YY_RULE_SETUP


1369 {  
TIMESCALE
; }

1370 
YY_BREAK


1372 
YY_RULE_SETUP


1374 {  
CELL
; }

1375 
YY_BREAK


1377 
YY_RULE_SETUP


1379 {  
CELLTYPE
; }

1380 
YY_BREAK


1382 
YY_RULE_SETUP


1384 {  
INSTANCE
; }

1385 
YY_BREAK


1387 
YY_RULE_SETUP


1389 {  
DELAY
; }

1390 
YY_BREAK


1392 
YY_RULE_SETUP


1394 {  
TIMINGCHECK
; }

1395 
YY_BREAK


1397 
YY_RULE_SETUP


1399 {  
TIMINGENV
; }

1400 
YY_BREAK


1402 
YY_RULE_SETUP


1404 {  
PATHPULSE
; }

1405 
YY_BREAK


1407 
YY_RULE_SETUP


1409 {  
PATHPULSEPERCENT
; }

1410 
YY_BREAK


1412 
YY_RULE_SETUP


1414 {  
ABSOLUTE
; }

1415 
YY_BREAK


1417 
YY_RULE_SETUP


1419 {  
INCREMENT
; }

1420 
YY_BREAK


1422 
YY_RULE_SETUP


1424 {  
IOPATH
; }

1425 
YY_BREAK


1427 
YY_RULE_SETUP


1429 {  
RETAIN
; }

1430 
YY_BREAK


1432 
YY_RULE_SETUP


1434 {  
COND
; }

1435 
YY_BREAK


1437 
YY_RULE_SETUP


1439 {  
SCOND
; }

1440 
YY_BREAK


1442 
YY_RULE_SETUP


1444 {  
CCOND
; }

1445 
YY_BREAK


1447 
YY_RULE_SETUP


1449 {  
CONDELSE
; }

1450 
YY_BREAK


1452 
YY_RULE_SETUP


1454 {  
PORT
; }

1455 
YY_BREAK


1457 
YY_RULE_SETUP


1459 {  
INTERCONNECT
; }

1460 
YY_BREAK


1462 
YY_RULE_SETUP


1464 {  
DEVICE
; }

1465 
YY_BREAK


1467 
YY_RULE_SETUP


1469 {  
SETUP
; }

1470 
YY_BREAK


1472 
YY_RULE_SETUP


1474 {  
HOLD
; }

1475 
YY_BREAK


1477 
YY_RULE_SETUP


1479 {  
SETUPHOLD
; }

1480 
YY_BREAK


1482 
YY_RULE_SETUP


1484 {  
RECOVERY
; }

1485 
YY_BREAK


1487 
YY_RULE_SETUP


1489 {  
REMOVAL
; }

1490 
YY_BREAK


1492 
YY_RULE_SETUP


1494 {  
RECREM
; }

1495 
YY_BREAK


1497 
YY_RULE_SETUP


1499 {  
SKEW
; }

1500 
YY_BREAK


1502 
YY_RULE_SETUP


1504 {  
WIDTH
; }

1505 
YY_BREAK


1507 
YY_RULE_SETUP


1509 {  
PERIOD
; }

1510 
YY_BREAK


1512 
YY_RULE_SETUP


1514 {  
NOCHANGE
; }

1515 
YY_BREAK


1517 
YY_RULE_SETUP


1519 {  
NAME
; }

1520 
YY_BREAK


1522 
YY_RULE_SETUP


1524 {  
EXCEPTION
; }

1525 
YY_BREAK


1527 
YY_RULE_SETUP


1529 {  
PATHCONSTRAINT
; }

1530 
YY_BREAK


1532 
YY_RULE_SETUP


1534 {  
PERIODCONSTRAINT
; }

1535 
YY_BREAK


1537 
YY_RULE_SETUP


1539 {  
SUM
; }

1540 
YY_BREAK


1542 
YY_RULE_SETUP


1544 {  
DIFF
; }

1545 
YY_BREAK


1547 
YY_RULE_SETUP


1549 {  
SKEWCONSTRAINT
; }

1550 
YY_BREAK


1552 
YY_RULE_SETUP


1554 {  
ARRIVAL
; }

1555 
YY_BREAK


1557 
YY_RULE_SETUP


1559 {  
DEPARTURE
; }

1560 
YY_BREAK


1562 
YY_RULE_SETUP


1564 {  
SLACK
; }

1565 
YY_BREAK


1567 
YY_RULE_SETUP


1569 {  
WAVEFORM
; }

1570 
YY_BREAK


1572 
YY_RULE_SETUP


1574 {  
POSEDGE
; }

1575 
YY_BREAK


1577 
YY_RULE_SETUP


1579 {  
NEGEDGE
; }

1580 
YY_BREAK


1583 
YY_RULE_SETUP


1586 
°r˝y
(
sdf_fûñvÆ
.
ych¨
, 
sdf_fûëext
);

1587  
	gQSTRING
;

1589 
YY_BREAK


1591 
YY_RULE_SETUP


1594 
°r˝y
(
sdf_fûñvÆ
.
ych¨
, 
sdf_fûëext
);

1595  
	gPATH
;

1597 
YY_BREAK


1599 
YY_RULE_SETUP


1602 
°r˝y
(
sdf_fûñvÆ
.
ych¨
, 
sdf_fûëext
);

1603  
	gBIT_CONST
;

1605 
YY_BREAK


1607 
YY_RULE_SETUP


1610 
°r˝y
(
sdf_fûñvÆ
.
ych¨
, 
sdf_fûëext
);

1611  
	gEDGE
;

1613 
YY_BREAK


1615 
YY_RULE_SETUP


1618 
°r˝y
(
sdf_fûñvÆ
.
ych¨
, 
sdf_fûëext
);

1619  
	gIDENTIFIER
;

1621 
YY_BREAK


1623 
YY_RULE_SETUP


1626 
sdf_fûñvÆ
.
yÊﬂt
 = 
©of
(
sdf_fûëext
);

1627  
	gNUMBER
;

1629 
YY_BREAK


1631 
YY_RULE_SETUP


1634 
sdf_fûñvÆ
.
yÊﬂt
 = 
©of
(
sdf_fûëext
);

1635  
	gNUMBER
;

1637 
YY_BREAK


1639 
YY_RULE_SETUP


1642 
sdf_fûñvÆ
.
yÊﬂt
 = 
©of
(
sdf_fûëext
);

1643  
	gNUMBER
;

1645 
YY_BREAK


1647 
YY_RULE_SETUP


1649 {  
CASE_EQU
; }

1650 
YY_BREAK


1652 
YY_RULE_SETUP


1654 {  
CASE_INEQU
; }

1655 
YY_BREAK


1657 
YY_RULE_SETUP


1659 {  
EQU
; }

1660 
YY_BREAK


1662 
YY_RULE_SETUP


1664 {  
INEQU
; }

1665 
YY_BREAK


1667 
YY_RULE_SETUP


1669 {  
L_AND
; }

1670 
YY_BREAK


1672 
YY_RULE_SETUP


1674 {  
L_OR
; }

1675 
YY_BREAK


1677 
YY_RULE_SETUP


1679 {  
LESS_OR_EQU
; }

1680 
YY_BREAK


1682 
YY_RULE_SETUP


1684 {  
GREATER_OR_EQU
; }

1685 
YY_BREAK


1687 
YY_RULE_SETUP


1689 {  
RIGHT_SHIFT
; }

1690 
YY_BREAK


1692 
YY_RULE_SETUP


1694 {  
LEFT_SHIFT
; }

1695 
YY_BREAK


1697 
YY_RULE_SETUP


1699 {  
U_NAND
; }

1700 
YY_BREAK


1702 
YY_RULE_SETUP


1704 {  
U_NOR
; }

1705 
YY_BREAK


1707 
YY_RULE_SETUP


1709 {  
U_XNOR
; }

1710 
YY_BREAK


1712 
YY_RULE_SETUP


1714 {  
U_XNOR_ALT
; }

1715 
YY_BREAK


1717 
YY_RULE_SETUP


1719 {  
sdf_fûëext
[0]; }

1720 
YY_BREAK


1722 
YY_RULE_SETUP


1724 {  
sdf_fûëext
[0]; }

1725 
YY_BREAK


1727 
YY_RULE_SETUP


1729 {  
sdf_fûëext
[0]; }

1730 
YY_BREAK


1732 
YY_RULE_SETUP


1734 {  
sdf_fûëext
[0]; }

1735 
YY_BREAK


1737 
YY_RULE_SETUP


1739 {  
sdf_fûëext
[0]; }

1740 
YY_BREAK


1742 
YY_RULE_SETUP


1744 {  
sdf_fûëext
[0]; }

1745 
YY_BREAK


1747 
YY_RULE_SETUP


1749 {  
sdf_fûëext
[0]; }

1750 
YY_BREAK


1752 
YY_RULE_SETUP


1754 {  
sdf_fûëext
[0]; }

1755 
YY_BREAK


1757 
YY_RULE_SETUP


1759 {  
sdf_fûëext
[0]; }

1760 
YY_BREAK


1762 
YY_RULE_SETUP


1764 {  
sdf_fûëext
[0]; }

1765 
YY_BREAK


1767 
YY_RULE_SETUP


1769 {  
sdf_fûëext
[0]; }

1770 
YY_BREAK


1772 
YY_RULE_SETUP


1774 {  
sdf_fûëext
[0]; }

1775 
YY_BREAK


1777 
YY_RULE_SETUP


1779 {  
sdf_fûëext
[0]; }

1780 
YY_BREAK


1782 
YY_RULE_SETUP


1784 {  
sdf_fûëext
[0]; }

1785 
YY_BREAK


1787 
YY_RULE_SETUP


1789 {  
sdf_fûëext
[0]; }

1790 
YY_BREAK


1792 
YY_RULE_SETUP


1794 {  
sdf_fûëext
[0]; }

1795 
YY_BREAK


1797 
YY_RULE_SETUP


1799 {  
sdf_fûëext
[0]; }

1800 
YY_BREAK


1802 
YY_RULE_SETUP


1804 {  
sdf_fûëext
[0]; }

1805 
YY_BREAK


1807 
YY_RULE_SETUP


1809 {  
sdf_fûëext
[0]; }

1810 
YY_BREAK


1812 
YY_RULE_SETUP


1814 {  
sdf_fûëext
[0]; }

1815 
YY_BREAK


1818 
YY_RULE_SETUP


1820 { 
sdf_fûñöe
++; }

1821 
YY_BREAK


1823 
YY_RULE_SETUP


1826 
YY_BREAK


1828 
YY_RULE_SETUP


1831 
YY_BREAK


1833 
YY_RULE_SETUP


1835 
ECHO
;

1836 
	gYY_BREAK


1838 
YY_STATE_EOF
(
INITIAL
):

1839 
YY_STATE_EOF
(
COMMENT
):

1840 
yyãrmö©e
();

1842 
	gYY_END_OF_BUFFER
:

1845 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1848 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1849 
YY_RESTORE_YY_MORE_OFFSET


1851 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1862 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1863 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
sdf_fûeö
;

1864 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1874 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1876 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1878 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1880 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1891 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1893 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1895 i‡–
	gyy_√xt_°©e
 )

1898 
	gyy_˝
 = ++(
yy_c_buf_p
);

1899 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1900 
	gyy_m©ch
;

1905 
	gyy_˝
 = (
yy_c_buf_p
);

1906 
	gyy_föd_a˘i⁄
;

1910  
yy_gë_√xt_buf„r
( ) )

1912 
	gEOB_ACT_END_OF_FILE
:

1914 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1916 i‡–
sdf_fûewøp
( ) )

1927 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1929 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1930 
	gdo_a˘i⁄
;

1935 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1936 
	gYY_NEW_FILE
;

1941 
	gEOB_ACT_CONTINUE_SCAN
:

1942 (
yy_c_buf_p
) =

1943 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1945 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1947 
	gyy_˝
 = (
yy_c_buf_p
);

1948 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1949 
	gyy_m©ch
;

1951 
	gEOB_ACT_LAST_MATCH
:

1952 (
yy_c_buf_p
) =

1953 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1955 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1957 
	gyy_˝
 = (
yy_c_buf_p
);

1958 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1959 
	gyy_föd_a˘i⁄
;

1965 
YY_FATAL_ERROR
(

1978 
	$yy_gë_√xt_buf„r
 ()

1980 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1981 *
sour˚
 = (
yyãxt_±r
);

1982 
numbî_to_move
, 
i
;

1983 
ªt_vÆ
;

1985 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1986 
	`YY_FATAL_ERROR
(

1989 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1991 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1996  
EOB_ACT_END_OF_FILE
;

2004  
EOB_ACT_LAST_MATCH
;

2011 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

2013  
i
 = 0; i < 
numbî_to_move
; ++i )

2014 *(
de°
++Ë*(
sour˚
++);

2016 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

2020 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

2024 
num_to_ªad
 =

2025 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

2027  
num_to_ªad
 <= 0 )

2031 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

2033 
yy_c_buf_p_off£t
 =

2034 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

2036 i‡–
b
->
yy_is_our_buf„r
 )

2038 
√w_size
 = 
b
->
yy_buf_size
 * 2;

2040 i‡–
√w_size
 <= 0 )

2041 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

2043 
b
->
yy_buf_size
 *= 2;

2045 
b
->
yy_ch_buf
 = (*)

2047 
	`sdf_fûîóŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

2051 
b
->
yy_ch_buf
 = 0;

2053 i‡–! 
b
->
yy_ch_buf
 )

2054 
	`YY_FATAL_ERROR
(

2057 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

2059 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

2060 
numbî_to_move
 - 1;

2064 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

2065 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

2068 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

2069 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

2071 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2074 i‡–(
yy_n_ch¨s
) == 0 )

2076 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

2078 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

2079 
	`sdf_fûîe°¨t
(
sdf_fûeö
 );

2084 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

2085 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

2086 
YY_BUFFER_EOF_PENDING
;

2091 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

2093 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

2095 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

2096 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`sdf_fûîóŒoc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

2097 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2098 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

2101 (
yy_n_ch¨s
Ë+
numbî_to_move
;

2102 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

2103 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

2105 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

2107  
ªt_vÆ
;

2108 
	}
}

2112 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

2114 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

2115 *
yy_˝
;

2117 
yy_cuºít_°©e
 = (
yy_°¨t
);

2119  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

2121 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

2122 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2124 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2125 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2127  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2129 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2130 i‡–
yy_cuºít_°©e
 >= 398 )

2131 
yy_c
 = 
yy_mëa
[() yy_c];

2133 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2136  
yy_cuºít_°©e
;

2137 
	}
}

2144 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2146 
yy_is_jam
;

2147 *
yy_˝
 = (
yy_c_buf_p
);

2149 
YY_CHAR
 
yy_c
 = 1;

2150 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2152 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2153 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2155  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2157 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2158 i‡–
yy_cuºít_°©e
 >= 398 )

2159 
yy_c
 = 
yy_mëa
[() yy_c];

2161 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

2162 
yy_is_jam
 = (
yy_cuºít_°©e
 == 397);

2164  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2165 
	}
}

2167 #i‚de‡
YY_NO_INPUT


2168 #ifde‡
__˝lu•lus


2169 
	$yyöput
 ()

2171 
	$öput
 ()

2175 
c
;

2177 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2179 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2185 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2187 *(
yy_c_buf_p
) = '\0';

2191 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

2192 ++(
yy_c_buf_p
);

2194  
	`yy_gë_√xt_buf„r
( ) )

2196 
EOB_ACT_LAST_MATCH
:

2208 
	`sdf_fûîe°¨t
(
sdf_fûeö
 );

2212 
EOB_ACT_END_OF_FILE
:

2214 i‡–
	`sdf_fûewøp
( ) )

2215  
EOF
;

2217 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2218 
YY_NEW_FILE
;

2219 #ifde‡
__˝lu•lus


2220  
	`yyöput
();

2222  
	`öput
();

2226 
EOB_ACT_CONTINUE_SCAN
:

2227 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2233 
c
 = *(*Ë(
yy_c_buf_p
);

2234 *(
yy_c_buf_p
) = '\0';

2235 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2237  
c
;

2238 
	}
}

2246 
	$sdf_fûîe°¨t
 (
FILE
 * 
öput_fûe
 )

2249 i‡–! 
YY_CURRENT_BUFFER
 ){

2250 
	`sdf_fûìnsuª_buf„r_°ack
 ();

2251 
YY_CURRENT_BUFFER_LVALUE
 =

2252 
	`sdf_fûe_¸óã_buf„r
(
sdf_fûeö
,
YY_BUF_SIZE
 );

2255 
	`sdf_fûe_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

2256 
	`sdf_fûe_lﬂd_buf„r_°©e
( );

2257 
	}
}

2263 
	$sdf_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2271 
	`sdf_fûìnsuª_buf„r_°ack
 ();

2272 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2275 i‡–
YY_CURRENT_BUFFER
 )

2278 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2279 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2280 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2283 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2284 
	`sdf_fûe_lﬂd_buf„r_°©e
( );

2291 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2292 
	}
}

2294 
	$sdf_fûe_lﬂd_buf„r_°©e
 ()

2296 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2297 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2298 
sdf_fûeö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2299 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2300 
	}
}

2308 
YY_BUFFER_STATE
 
	$sdf_fûe_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2310 
YY_BUFFER_STATE
 
b
;

2312 
b
 = (
YY_BUFFER_STATE
Ë
	`sdf_fûóŒoc
(–
yy_buf„r_°©e
 ) );

2313 i‡–! 
b
 )

2314 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_file_create_buffer()" );

2316 
b
->
yy_buf_size
 = 
size
;

2321 
b
->
yy_ch_buf
 = (*Ë
	`sdf_fûóŒoc
(b->
yy_buf_size
 + 2 );

2322 i‡–! 
b
->
yy_ch_buf
 )

2323 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_file_create_buffer()" );

2325 
b
->
yy_is_our_buf„r
 = 1;

2327 
	`sdf_fûe_öô_buf„r
(
b
,
fûe
 );

2329  
b
;

2330 
	}
}

2336 
	$sdf_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2339 i‡–! 
b
 )

2342 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2343 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2345 i‡–
b
->
yy_is_our_buf„r
 )

2346 
	`sdf_fûe‰ì
((*Ë
b
->
yy_ch_buf
 );

2348 
	`sdf_fûe‰ì
((*Ë
b
 );

2349 
	}
}

2351 #i‚de‡
__˝lu•lus


2352 
ißây
 ();

2359 
	$sdf_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2362 
€ºno
 = 
î∫o
;

2364 
	`sdf_fûe_Êush_buf„r
(
b
 );

2366 
b
->
yy_öput_fûe
 = 
fûe
;

2367 
b
->
yy_fûl_buf„r
 = 1;

2373 i‡(
b
 !
YY_CURRENT_BUFFER
){

2374 
b
->
yy_bs_löío
 = 1;

2375 
b
->
yy_bs_cﬁumn
 = 0;

2378 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2380 
î∫o
 = 
€ºno
;

2381 
	}
}

2387 
	$sdf_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2389 i‡–! 
b
 )

2392 
b
->
yy_n_ch¨s
 = 0;

2398 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2399 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2401 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2403 
b
->
yy_©_bﬁ
 = 1;

2404 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2406 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2407 
	`sdf_fûe_lﬂd_buf„r_°©e
( );

2408 
	}
}

2416 
	$sdf_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2418 i‡(
√w_buf„r
 =
NULL
)

2421 
	`sdf_fûìnsuª_buf„r_°ack
();

2424 i‡–
YY_CURRENT_BUFFER
 )

2427 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2428 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2429 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2433 i‡(
YY_CURRENT_BUFFER
)

2434 (
yy_buf„r_°ack_t›
)++;

2435 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2438 
	`sdf_fûe_lﬂd_buf„r_°©e
( );

2439 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2440 
	}
}

2446 
	$sdf_fûï›_buf„r_°©e
 ()

2448 i‡(!
YY_CURRENT_BUFFER
)

2451 
	`sdf_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2452 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2453 i‡((
yy_buf„r_°ack_t›
) > 0)

2454 --(
yy_buf„r_°ack_t›
);

2456 i‡(
YY_CURRENT_BUFFER
) {

2457 
	`sdf_fûe_lﬂd_buf„r_°©e
( );

2458 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2460 
	}
}

2465 
	$sdf_fûìnsuª_buf„r_°ack
 ()

2467 
num_to_Æloc
;

2469 i‡(!(
yy_buf„r_°ack
)) {

2475 
num_to_Æloc
 = 1;

2476 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
sdf_fûóŒoc


2477 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2479 i‡–! (
yy_buf„r_°ack
) )

2480 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_fileensure_buffer_stack()" );

2482 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2484 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2485 (
yy_buf„r_°ack_t›
) = 0;

2489 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2492 
grow_size
 = 8 ;

2494 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2495 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
sdf_fûîóŒoc


2496 ((
yy_buf„r_°ack
),

2497 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2499 i‡–! (
yy_buf„r_°ack
) )

2500 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_fileensure_buffer_stack()" );

2503 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2504 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2506 
	}
}

2514 
YY_BUFFER_STATE
 
	$sdf_fûe_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2516 
YY_BUFFER_STATE
 
b
;

2518 i‡–
size
 < 2 ||

2519 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2520 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2524 
b
 = (
YY_BUFFER_STATE
Ë
	`sdf_fûóŒoc
(–
yy_buf„r_°©e
 ) );

2525 i‡–! 
b
 )

2526 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_file_scan_buffer()" );

2528 
b
->
yy_buf_size
 = 
size
 - 2;

2529 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2530 
b
->
yy_is_our_buf„r
 = 0;

2531 
b
->
yy_öput_fûe
 = 0;

2532 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2533 
b
->
yy_is_öãø˘ive
 = 0;

2534 
b
->
yy_©_bﬁ
 = 1;

2535 
b
->
yy_fûl_buf„r
 = 0;

2536 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2538 
	`sdf_fûe_swôch_to_buf„r
(
b
 );

2540  
b
;

2541 
	}
}

2551 
YY_BUFFER_STATE
 
	$sdf_fûe_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

2554  
	`sdf_fûe_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

2555 
	}
}

2564 
YY_BUFFER_STATE
 
	$sdf_fûe_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

2566 
YY_BUFFER_STATE
 
b
;

2567 *
buf
;

2568 
yy_size_t
 
n
;

2569 
i
;

2572 
n
 = 
_yybyãs_Àn
 + 2;

2573 
buf
 = (*Ë
	`sdf_fûóŒoc
(
n
 );

2574 i‡–! 
buf
 )

2575 
	`YY_FATAL_ERROR
( "out of dynamic memory in sdf_file_scan_bytes()" );

2577  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2578 
buf
[
i
] = 
yybyãs
[i];

2580 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2582 
b
 = 
	`sdf_fûe_sˇn_buf„r
(
buf
,
n
 );

2583 i‡–! 
b
 )

2584 
	`YY_FATAL_ERROR
( "bad buffer in sdf_file_scan_bytes()" );

2589 
b
->
yy_is_our_buf„r
 = 1;

2591  
b
;

2592 
	}
}

2594 #i‚de‡
YY_EXIT_FAILURE


2595 
	#YY_EXIT_FAILURE
 2

	)

2598 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

2600 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2601 
	`exô
–
YY_EXIT_FAILURE
 );

2602 
	}
}

2606 #unde‡
yyÀss


2607 
	#yyÀss
(
n
) \

2611 
yyÀss_ma¸o_¨g
 = (
n
); \

2612 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2613 
sdf_fûëext
[
sdf_fûñíg
] = (
yy_hﬁd_ch¨
); \

2614 (
yy_c_buf_p
Ë
sdf_fûëext
 + 
yyÀss_ma¸o_¨g
; \

2615 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2616 *(
yy_c_buf_p
) = '\0'; \

2617 
sdf_fûñíg
 = 
yyÀss_ma¸o_¨g
; \

2619  0 )

	)

2626 
	$sdf_fûegë_löío
 ()

2629  
sdf_fûñöío
;

2630 
	}
}

2635 
FILE
 *
	$sdf_fûegë_ö
 ()

2637  
sdf_fûeö
;

2638 
	}
}

2643 
FILE
 *
	$sdf_fûegë_out
 ()

2645  
sdf_fûeout
;

2646 
	}
}

2651 
	$sdf_fûegë_Àng
 ()

2653  
sdf_fûñíg
;

2654 
	}
}

2660 *
	$sdf_fûegë_ãxt
 ()

2662  
sdf_fûëext
;

2663 
	}
}

2669 
	$sdf_fûe£t_löío
 (
löe_numbî
 )

2672 
sdf_fûñöío
 = 
löe_numbî
;

2673 
	}
}

2681 
	$sdf_fûe£t_ö
 (
FILE
 * 
ö_°r
 )

2683 
sdf_fûeö
 = 
ö_°r
 ;

2684 
	}
}

2686 
	$sdf_fûe£t_out
 (
FILE
 * 
out_°r
 )

2688 
sdf_fûeout
 = 
out_°r
 ;

2689 
	}
}

2691 
	$sdf_fûegë_debug
 ()

2693  
sdf_fûe_Êex_debug
;

2694 
	}
}

2696 
	$sdf_fûe£t_debug
 (
bdebug
 )

2698 
sdf_fûe_Êex_debug
 = 
bdebug
 ;

2699 
	}
}

2701 
	$yy_öô_globÆs
 ()

2707 (
yy_buf„r_°ack
) = 0;

2708 (
yy_buf„r_°ack_t›
) = 0;

2709 (
yy_buf„r_°ack_max
) = 0;

2710 (
yy_c_buf_p
) = (*) 0;

2711 (
yy_öô
) = 0;

2712 (
yy_°¨t
) = 0;

2715 #ifde‡
YY_STDINIT


2716 
sdf_fûeö
 = 
°dö
;

2717 
sdf_fûeout
 = 
°dout
;

2719 
sdf_fûeö
 = (
FILE
 *) 0;

2720 
sdf_fûeout
 = (
FILE
 *) 0;

2727 
	}
}

2730 
	$sdf_fûñex_de°roy
 ()

2734 
YY_CURRENT_BUFFER
){

2735 
	`sdf_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2736 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2737 
	`sdf_fûï›_buf„r_°©e
();

2741 
	`sdf_fûe‰ì
((
yy_buf„r_°ack
) );

2742 (
yy_buf„r_°ack
Ë
NULL
;

2746 
	`yy_öô_globÆs
( );

2749 
	}
}

2755 #i‚de‡
yyãxt_±r


2756 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2758 
i
;

2759  
i
 = 0; i < 
n
; ++i )

2760 
s1
[
i
] = 
s2
[i];

2761 
	}
}

2764 #ifde‡
YY_NEED_STRLEN


2765 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2767 
n
;

2768  
n
 = 0; 
s
[n]; ++n )

2771  
n
;

2772 
	}
}

2775 *
	$sdf_fûóŒoc
 (
yy_size_t
 
size
 )

2777  (*Ë
	`mÆloc
–
size
 );

2778 
	}
}

2780 *
	$sdf_fûîóŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

2789  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2790 
	}
}

2792 
	$sdf_fûe‰ì
 (* 
±r
 )

2794 
	`‰ì
–(*Ë
±r
 );

2795 
	}
}

2797 
	#YYTABLES_NAME
 "yyèbÀs"

	)

	@interface/lib/dbg/lex_n_yacc/vlog_file.tab.cpp

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

67 
	#yy∑r£
 
vlog_fûï¨£


	)

68 
	#yyÀx
 
vlog_fûñex


	)

69 
	#yyîr‹
 
vlog_fûìº‹


	)

70 
	#yylvÆ
 
vlog_fûñvÆ


	)

71 
	#yych¨
 
vlog_fûech¨


	)

72 
	#yydebug
 
vlog_fûedebug


	)

73 
	#yy√ºs
 
vlog_fûíîrs


	)

88 
	#YYPARSE_PARAM
 
∑øm


	)

90 
	~<c°dio
>

91 
	~<c°rög
>

93 
	~"vlog_fûe.h
"

95 
usög
 
«me•a˚
 
	g°d
;

96 
usög
 
«me•a˚
 
	gI¡fNs
;

98 *
vlog_fûëext
;

99 
vlog_fûñöe
;

100 
vlog_fûñex
();

102 
vlog_fûìº‹
(c⁄° *
msg
);

103 
vlog_fûe‰ìNames
(
VlogNames
 *
«mes
);

104 
vlog_fûe‰ìP‹tToNë
(
VlogP‹tToNë
 *
p2ns
);

106 
	gI¡fNs
::
VlogFûe
 *
vlog
;

114 #i‚de‡
YYDEBUG


115 
	#YYDEBUG
 0

	)

119 #ifde‡
YYERROR_VERBOSE


120 #unde‡
YYERROR_VERBOSE


121 
	#YYERROR_VERBOSE
 1

	)

123 
	#YYERROR_VERBOSE
 0

	)

127 #i‚de‡
YYTOKEN_TABLE


128 
	#YYTOKEN_TABLE
 0

	)

133 #i‚de‡
YYTOKENTYPE


134 
	#YYTOKENTYPE


	)

137 
	eyytokíty≥
 {

138 
	mMODULE
 = 258,

139 
	mENDMODULE
 = 259,

140 
	mPRIMITIVE
 = 260,

141 
	mENDPRIMITIVE
 = 261,

142 
	mASSIGN
 = 262,

143 
	mINPUT
 = 263,

144 
	mOUTPUT
 = 264,

145 
	mINOUT
 = 265,

146 
	mWIRE
 = 266,

147 
	mREG
 = 267,

148 
	mSUPPLY_L
 = 268,

149 
	mSUPPLY_H
 = 269,

150 
	mNAME
 = 270,

151 
	mNUMBER
 = 271,

152 
	mSTRENGTH
 = 272

158 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


159 
	uYYSTYPE


165 
	mych¨
[
I¡fNs
::
NAME_LEN
];

166 
	mI¡fNs
::
VlogNëTy≥
 
y√tTy≥
;

167 
	mI¡fNs
::
VlogNames
 *
y«mes
;

168 
	mI¡fNs
::
VlogP‹tToNë
 *
yp‹tToNë
;

174 } 
	tYYSTYPE
;

175 
	#YYSTYPE_IS_TRIVIAL
 1

	)

176 
	#yy°y≥
 
YYSTYPE


	)

177 
	#YYSTYPE_IS_DECLARED
 1

	)

191 #ifde‡
YYTYPE_UINT8


192 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

194 
	tyyty≥_uöt8
;

197 #ifde‡
YYTYPE_INT8


198 
YYTYPE_INT8
 
	tyyty≥_öt8
;

199 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

200 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

201 sig√d 
	tyyty≥_öt8
;

203 
	tyyty≥_öt8
;

206 #ifde‡
YYTYPE_UINT16


207 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

209 
	tyyty≥_uöt16
;

212 #ifde‡
YYTYPE_INT16


213 
YYTYPE_INT16
 
	tyyty≥_öt16
;

215 
	tyyty≥_öt16
;

218 #i‚de‡
YYSIZE_T


219 #ifde‡
__SIZE_TYPE__


220 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

221 #ñi‡
deföed
 
size_t


222 
	#YYSIZE_T
 
size_t


	)

223 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

224 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

225 
	~<°ddef.h
>

226 
	#YYSIZE_T
 
size_t


	)

228 
	#YYSIZE_T
 

	)

232 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

234 #i‚de‡
YY_


235 #i‡
YYENABLE_NLS


236 #i‡
ENABLE_NLS


237 
	~<liböé.h
>

238 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

241 #i‚de‡
YY_


242 
	#YY_
(
msgid
Ë
	)
msgid

247 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


248 
	#YYUSE
(
e
Ë((Ë”))

	)

250 
	#YYUSE
(
e
Ë

	)

254 #i‚de‡
löt


255 
	#YYID
(
n
Ë“)

	)

257 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

258 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

260 
	$YYID
 (
yyi
)

263 
	$YYID
 (
yyi
)

264 
yyi
;

267  
yyi
;

268 
	}
}

271 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


275 #ifde‡
YYSTACK_USE_ALLOCA


276 #i‡
YYSTACK_USE_ALLOCA


277 #ifde‡
__GNUC__


278 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

279 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


280 
	~<Æloˇ.h
>

281 #ñi‡
deföed
 
_AIX


282 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

283 #ñi‡
deföed
 
_MSC_VER


284 
	~<mÆloc.h
>

285 
	#Æloˇ
 
_Æloˇ


	)

287 
	#YYSTACK_ALLOC
 
Æloˇ


	)

288 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

289 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

290 
	~<°dlib.h
>

291 #i‚de‡
_STDLIB_H


292 
	#_STDLIB_H
 1

	)

299 #ifde‡
YYSTACK_ALLOC


301 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

302 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


307 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

310 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

311 
	#YYSTACK_FREE
 
YYFREE


	)

312 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


313 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

315 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

316 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

317 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

318 
	~<°dlib.h
>

319 #i‚de‡
_STDLIB_H


320 
	#_STDLIB_H
 1

	)

323 #i‚de‡
YYMALLOC


324 
	#YYMALLOC
 
mÆloc


	)

325 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

326 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

327 *
mÆloc
 (
YYSIZE_T
);

330 #i‚de‡
YYFREE


331 
	#YYFREE
 
‰ì


	)

332 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

333 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

334 
‰ì
 (*);

341 #i‡(! 
deföed
 
yyovîÊow
 \

342 && (! 
deföed
 
	g__˝lu•lus
 \

343 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

346 
	uyyÆloc


348 
yyty≥_öt16
 
	myyss_Æloc
;

349 
YYSTYPE
 
	myyvs_Æloc
;

353 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

357 
	#YYSTACK_BYTES
(
N
) \

358 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

359 + 
YYSTACK_GAP_MAXIMUM
)

	)

363 #i‚de‡
YYCOPY


364 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

365 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

366 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

368 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

371 
YYSIZE_T
 
yyi
; \

372 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

373 (
To
)[
yyi
] = (
From
)[yyi]; \

375 
	`YYID
 (0))

	)

384 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

387 
YYSIZE_T
 
yy√wbyãs
; \

388 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

389 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

390 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

391 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

393 
	`YYID
 (0))

	)

398 
	#YYFINAL
 3

	)

400 
	#YYLAST
 77

	)

403 
	#YYNTOKENS
 24

	)

405 
	#YYNNTS
 15

	)

407 
	#YYNRULES
 35

	)

409 
	#YYNSTATES
 78

	)

412 
	#YYUNDEFTOK
 2

	)

413 
	#YYMAXUTOK
 272

	)

415 
	#YYTRANSLATE
(
YYX
) \

416 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

419 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

451 #i‡
YYDEBUG


454 c⁄° 
yyty≥_uöt8
 
	gyy¥hs
[] =

463 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

481 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

490 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


493 c⁄° *c⁄° 
	gyyäame
[] =

504 #ifde‡
YYPRINT


507 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

516 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

525 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

536 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

549 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

557 
	#YYPACT_NINF
 -34

	)

558 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

571 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

581 
	#YYTABLE_NINF
 -1

	)

582 c⁄° 
yyty≥_uöt8
 
	gyyèbÀ
[] =

594 c⁄° 
yyty≥_uöt8
 
	gyycheck
[] =

608 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

620 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

621 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

622 
	#YYEMPTY
 (-2)

	)

623 
	#YYEOF
 0

	)

625 
	#YYACCEPT
 
yyac˚±œb


	)

626 
	#YYABORT
 
yyab‹éab


	)

627 
	#YYERROR
 
yyîr‹œb


	)

634 
	#YYFAIL
 
yyîæab


	)

636 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

638 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

640 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

642 
yych¨
 = (
Tokí
); \

643 
yylvÆ
 = (
VÆue
); \

644 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

645 
	`YYPOPSTACK
 (1); \

646 
yybackup
; \

650 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

651 
YYERROR
; \

653 
	`YYID
 (0))

	)

656 
	#YYTERROR
 1

	)

657 
	#YYERRCODE
 256

	)

664 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

665 #i‚de‡
YYLLOC_DEFAULT


666 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

668 i‡(
	`YYID
 (
N
)) \

670 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

671 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

672 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

673 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

677 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

678 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

679 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

680 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

682 
	`YYID
 (0))

	)

690 #i‚de‡
YY_LOCATION_PRINT


691 #i‡
YYLTYPE_IS_TRIVIAL


692 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

693 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

694 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

695 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

697 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

704 #ifde‡
YYLEX_PARAM


705 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

707 
	#YYLEX
 
	`yyÀx
 ()

	)

711 #i‡
YYDEBUG


713 #i‚de‡
YYFPRINTF


714 
	~<°dio.h
>

715 
	#YYFPRINTF
 
Ârötf


	)

718 
	#YYDPRINTF
(
Args
) \

720 i‡(
yydebug
) \

721 
YYFPRINTF
 
Args
; \

722 } 
	`YYID
 (0))

	)

724 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

726 i‡(
yydebug
) \

728 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

729 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

730 
Ty≥
, 
VÆue
); \

731 
	`YYFPRINTF
 (
°dîr
, "\n"); \

733 } 
	`YYID
 (0))

	)

741 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

742 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

744 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

747 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

748 
FILE
 *
yyouçut
;

749 
yyty≥
;

750 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

753 i‡(!
yyvÆuï
)

755 #ifde‡
YYPRINT


756 i‡(
yyty≥
 < 
YYNTOKENS
)

757 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

759 
	`YYUSE
 (
yyouçut
);

761 
yyty≥
)

766 
	}
}

773 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

774 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

776 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

779 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

780 
FILE
 *
yyouçut
;

781 
yyty≥
;

782 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

785 i‡(
yyty≥
 < 
YYNTOKENS
)

786 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

788 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

790 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

791 
	`YYFPRINTF
 (
yyouçut
, ")");

792 
	}
}

799 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

800 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

802 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

805 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

806 
yyty≥_öt16
 *
yybŸtom
;

807 
yyty≥_öt16
 *
yyt›
;

810 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

811 ; 
yybŸtom
 <
yyt›
; yybottom++)

813 
yybŸ
 = *
yybŸtom
;

814 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

816 
	`YYFPRINTF
 (
°dîr
, "\n");

817 
	}
}

819 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

821 i‡(
yydebug
) \

822 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

823 } 
	`YYID
 (0))

	)

830 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

831 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

833 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

836 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

837 
YYSTYPE
 *
yyv•
;

838 
yyruÀ
;

841 
yyƒhs
 = 
yyr2
[
yyruÀ
];

842 
yyi
;

843 
yy o
 = 
yyæöe
[
yyruÀ
];

844 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

845 
yyruÀ
 - 1, 
yy o
);

847 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

849 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

850 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

851 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

853 
	`YYFPRINTF
 (
°dîr
, "\n");

855 
	}
}

857 
	#YY_REDUCE_PRINT
(
RuÀ
) \

859 i‡(
yydebug
) \

860 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

861 } 
	`YYID
 (0))

	)

865 
	gyydebug
;

867 
	#YYDPRINTF
(
Args
)

	)

868 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

869 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

870 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

875 #i‚def 
YYINITDEPTH


876 
	#YYINITDEPTH
 200

	)

886 #i‚de‡
YYMAXDEPTH


887 
	#YYMAXDEPTH
 10000

	)

892 #i‡
YYERROR_VERBOSE


894 #i‚de‡
yy°æí


895 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


896 
	#yy°æí
 
°æí


	)

899 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

900 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

901 
YYSIZE_T


902 
	$yy°æí
 (c⁄° *
yy°r
)

904 
YYSIZE_T


905 
	$yy°æí
 (
yy°r
)

906 c⁄° *
yy°r
;

909 
YYSIZE_T
 
yyÀn
;

910 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

912  
yyÀn
;

913 
	}
}

917 #i‚de‡
yy°p˝y


918 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


919 
	#yy°p˝y
 
°p˝y


	)

923 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

924 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

926 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

929 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

930 *
yyde°
;

931 c⁄° *
yy§c
;

934 *
yyd
 = 
yyde°
;

935 c⁄° *
yys
 = 
yy§c
;

937 (*
yyd
++ = *
yys
++) != '\0')

940  
yyd
 - 1;

941 
	}
}

945 #i‚de‡
yyäamîr


953 
YYSIZE_T


954 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

956 i‡(*
yy°r
 == '"')

958 
YYSIZE_T
 
yyn
 = 0;

959 c⁄° *
yyp
 = 
yy°r
;

962 *++
yyp
)

966 
do_nŸ_°rù_quŸes
;

969 i‡(*++
yyp
 != '\\')

970 
do_nŸ_°rù_quŸes
;

973 i‡(
yyªs
)

974 
yyªs
[
yyn
] = *
yyp
;

975 
yyn
++;

979 i‡(
yyªs
)

980 
yyªs
[
yyn
] = '\0';

981  
yyn
;

983 
do_nŸ_°rù_quŸes
: ;

986 i‡(! 
yyªs
)

987  
	`yy°æí
 (
yy°r
);

989  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

990 
	}
}

1000 
YYSIZE_T


1001 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1003 
yyn
 = 
yy∑˘
[
yy°©e
];

1005 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1009 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1010 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1011 
YYSIZE_T
 
yysize
 = 
yysize0
;

1012 
YYSIZE_T
 
yysize1
;

1013 
yysize_ovîÊow
 = 0;

1014 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1015 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1016 
yyx
;

1021 
	`YY_
("syntaxÉrror, unexpected %s");

1022 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1023 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1024 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1025 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1027 *
yyfmt
;

1028 c⁄° *
yyf
;

1029 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1030 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1031 c⁄° 
yy‹
[] = " or %s";

1032 
yyf‹m©
[ 
yyu√x≥˘ed


1033 +  
yyex≥˘ög
 - 1

1034 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1035 * ( 
yy‹
 - 1))];

1036 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1040 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1043 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1044 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1045 
yycou¡
 = 1;

1047 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1048 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1050 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1051 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1053 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1055 
yycou¡
 = 1;

1056 
yysize
 = 
yysize0
;

1057 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1060 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1061 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1062 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1063 
yysize
 = 
yysize1
;

1064 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1065 
yy¥efix
 = 
yy‹
;

1068 
yyf
 = 
	`YY_
(
yyf‹m©
);

1069 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1070 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1071 
yysize
 = 
yysize1
;

1073 i‡(
yysize_ovîÊow
)

1074  
YYSIZE_MAXIMUM
;

1076 i‡(
yyªsu…
)

1081 *
yyp
 = 
yyªsu…
;

1082 
yyi
 = 0;

1083 (*
yyp
 = *
yyf
) != '\0')

1085 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1087 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1088 
yyf
 += 2;

1092 
yyp
++;

1093 
yyf
++;

1097  
yysize
;

1099 
	}
}

1108 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1109 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1111 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1114 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1115 c⁄° *
yymsg
;

1116 
yyty≥
;

1117 
YYSTYPE
 *
yyvÆuï
;

1120 
	`YYUSE
 (
yyvÆuï
);

1122 i‡(!
yymsg
)

1123 
yymsg
 = "Deleting";

1124 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1126 
yyty≥
)

1132 
	}
}

1135 #ifde‡
YYPARSE_PARAM


1136 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1137 
yy∑r£
 (*
YYPARSE_PARAM
);

1139 
yy∑r£
 ();

1142 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1143 
yy∑r£
 ();

1145 
yy∑r£
 ();

1151 
	gyych¨
;

1154 
YYSTYPE
 
	gyylvÆ
;

1157 
	gyy√ºs
;

1165 #ifde‡
YYPARSE_PARAM


1166 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1167 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1169 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1172 
	$yy∑r£
 (
YYPARSE_PARAM
)

1173 *
YYPARSE_PARAM
;

1176 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1177 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1179 
	$yy∑r£
 ()

1182 
	$yy∑r£
 ()

1189 
yy°©e
;

1191 
yyîr°©us
;

1201 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1202 
yyty≥_öt16
 *
yyss
;

1203 
yyty≥_öt16
 *
yys•
;

1206 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1207 
YYSTYPE
 *
yyvs
;

1208 
YYSTYPE
 *
yyv•
;

1210 
YYSIZE_T
 
yy°acksize
;

1212 
yyn
;

1213 
yyªsu…
;

1215 
yytokí
;

1218 
YYSTYPE
 
yyvÆ
;

1220 #i‡
YYERROR_VERBOSE


1222 
yymsgbuf
[128];

1223 *
yymsg
 = 
yymsgbuf
;

1224 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1227 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1231 
yyÀn
 = 0;

1233 
yytokí
 = 0;

1234 
yyss
 = 
yysß
;

1235 
yyvs
 = 
yyvß
;

1236 
yy°acksize
 = 
YYINITDEPTH
;

1238 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1240 
yy°©e
 = 0;

1241 
yyîr°©us
 = 0;

1242 
yy√ºs
 = 0;

1243 
yych¨
 = 
YYEMPTY
;

1249 
yys•
 = 
yyss
;

1250 
yyv•
 = 
yyvs
;

1252 
yy£t°©e
;

1257 
yy√w°©e
:

1260 
yys•
++;

1262 
yy£t°©e
:

1263 *
yys•
 = 
yy°©e
;

1265 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1268 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1270 #ifde‡
yyovîÊow


1275 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1276 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1282 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1283 &
yyss1
, 
yysize
 *  (*
yys•
),

1284 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1285 &
yy°acksize
);

1287 
yyss
 = 
yyss1
;

1288 
yyvs
 = 
yyvs1
;

1291 #i‚de‡
YYSTACK_RELOCATE


1292 
yyexhau°edœb
;

1295 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1296 
yyexhau°edœb
;

1297 
yy°acksize
 *= 2;

1298 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1299 
yy°acksize
 = 
YYMAXDEPTH
;

1302 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1303 
yyÆloc
 *
yy±r
 =

1304 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1305 i‡(! 
yy±r
)

1306 
yyexhau°edœb
;

1307 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1308 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1309 #unde‡
YYSTACK_RELOCATE


1310 i‡(
yyss1
 !
yysß
)

1311 
	`YYSTACK_FREE
 (
yyss1
);

1316 
yys•
 = 
yyss
 + 
yysize
 - 1;

1317 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1319 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1320 (Ë
yy°acksize
));

1322 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1323 
YYABORT
;

1326 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1328 i‡(
yy°©e
 =
YYFINAL
)

1329 
YYACCEPT
;

1331 
yybackup
;

1336 
yybackup
:

1342 
yyn
 = 
yy∑˘
[
yy°©e
];

1343 i‡(
yyn
 =
YYPACT_NINF
)

1344 
yydeÁu…
;

1349 i‡(
yych¨
 =
YYEMPTY
)

1351 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1352 
yych¨
 = 
YYLEX
;

1355 i‡(
yych¨
 <
YYEOF
)

1357 
yych¨
 = 
yytokí
 = 
YYEOF
;

1358 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1362 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1363 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1368 
yyn
 +
yytokí
;

1369 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1370 
yydeÁu…
;

1371 
yyn
 = 
yyèbÀ
[yyn];

1372 i‡(
yyn
 <= 0)

1374 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1375 
yyîæab
;

1376 
yyn
 = -yyn;

1377 
yyªdu˚
;

1382 i‡(
yyîr°©us
)

1383 
yyîr°©us
--;

1386 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1389 
yych¨
 = 
YYEMPTY
;

1391 
yy°©e
 = 
yyn
;

1392 *++
yyv•
 = 
yylvÆ
;

1394 
yy√w°©e
;

1400 
yydeÁu…
:

1401 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1402 i‡(
yyn
 == 0)

1403 
yyîæab
;

1404 
yyªdu˚
;

1410 
yyªdu˚
:

1412 
yyÀn
 = 
yyr2
[
yyn
];

1422 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1425 
	`YY_REDUCE_PRINT
 (
yyn
);

1426 
yyn
)

1432 { 
vlog
 = (
VlogFûe
 *)(
∑øm
); ;}

1439 { 
vlog
->
	`addModuÀ
((
yyv•
[(1Ë- (1)].
ych¨
)); ;}

1446 { 
vlog
->
	`addP‹ts
((
yyv•
[(2Ë- (4)].
y«mes
)->
hód
);

1447 
	`vlog_fûe‰ìNames
((
yyv•
[(2Ë- (4)].
y«mes
)->
hód
); ;}

1455 (
yyv•
[(1Ë- (3)].
y√tTy≥
)) {

1456 
VLOG_NET_INPUT
:

1457 
vlog
->
	`£tI≈utNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1459 
VLOG_NET_OUTPUT
:

1460 
vlog
->
	`£tOuçutNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1462 
VLOG_NET_INOUT
:

1463 
vlog
->
	`£tInoutNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1465 
VLOG_NET_WIRE
:

1466 
vlog
->
	`£tWúeNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1468 
VLOG_NET_REG
:

1469 
vlog
->
	`£tRegNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1471 
VLOG_NET_SUPPLY_L
:

1472 
vlog
->
	`£tSuµlyLNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1474 
VLOG_NET_SUPPLY_H
:

1475 
vlog
->
	`£tSuµlyHNës
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1478 
	`vlog_fûe‰ìNames
((
yyv•
[(2Ë- (3)].
y«mes
)->
hód
);

1486 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_INPUT
; ;}

1493 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_OUTPUT
; ;}

1500 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_INOUT
; ;}

1507 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_WIRE
; ;}

1514 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_REG
; ;}

1521 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_SUPPLY_L
; ;}

1528 { (
yyvÆ
.
y√tTy≥
Ë
VLOG_NET_SUPPLY_H
; ;}

1535 { 
vlog
->
	`addAssign
((
yyv•
[(2Ë- (5)].
ych¨
), (yyvsp[(4) - (5)].ychar)); ;}

1543 
vlog
->
	`addCñl
((
yyv•
[(1Ë- (6)].
ych¨
), (yyv•[(2Ë- (6)].ych¨), (yyv•[(4Ë- (6)].
y«mes
)->
hód
);

1544 
	`vlog_fûe‰ìNames
((
yyv•
[(4Ë- (6)].
y«mes
)->
hód
);

1553 
vlog
->
	`addCñl
((
yyv•
[(1Ë- (5)].
ych¨
), "", (yyv•[(3Ë- (5)].
y«mes
)->
hód
);

1554 
	`vlog_fûe‰ìNames
((
yyv•
[(3Ë- (5)].
y«mes
)->
hód
);

1563 
vlog
->
	`addCñl
((
yyv•
[(1Ë- (6)].
ych¨
), (yyv•[(2Ë- (6)].ych¨), (yyv•[(4Ë- (6)].
yp‹tToNë
)->
hód
);

1564 
	`vlog_fûe‰ìP‹tToNë
((
yyv•
[(4Ë- (6)].
yp‹tToNë
)->
hód
);

1573 
vlog
->
	`addCñl
((
yyv•
[(1Ë- (9)].
ych¨
), (yyv•[(3Ë- (9)].
y«mes
)->
hód
, (yyvsp[(5) - (9)].ychar), (yyvsp[(7) - (9)].ynames)->head);

1574 
	`vlog_fûe‰ìNames
((
yyv•
[(3Ë- (9)].
y«mes
)->
hód
);

1575 
	`vlog_fûe‰ìNames
((
yyv•
[(7Ë- (9)].
y«mes
)->
hód
);

1583 { (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1584 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(3Ë- (3)].
ych¨
));

1585 (
yyv•
[(1Ë- (3)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1586 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (3)].ynames)->head;

1587 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1594 { (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1595 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, "");

1596 (
yyv•
[(1Ë- (2)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1597 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (2)].ynames)->head;

1598 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1605 { (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1606 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(1Ë- (1)].
ych¨
));

1607 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1608 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1615 { (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1616 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, "");

1617 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1618 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
; ;}

1626 (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1627 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(3Ë- (3)].
ych¨
));

1628 (
yyv•
[(1Ë- (3)].
y«mes
)->
√xt
 = (
yyvÆ
.ynames);

1629 (
yyvÆ
.
y«mes
)->
hód
 = (
yyv•
[(1) - (3)].ynames)->head;

1630 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
;

1639 (
yyvÆ
.
y«mes
Ë
√w
 
VlogNames
;

1640 
	`°r˝y
((
yyvÆ
.
y«mes
)->
«me
, (
yyv•
[(1Ë- (1)].
ych¨
));

1641 (
yyvÆ
.
y«mes
)->
hód
 = (yyval.ynames);

1642 (
yyvÆ
.
y«mes
)->
√xt
 = 
NULL
;

1651 (
yyvÆ
.
yp‹tToNë
Ë
√w
 
VlogP‹tToNë
;

1652 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
p‹t
, (
yyv•
[(4Ë- (7)].
ych¨
));

1653 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
√t
, (
yyv•
[(6Ë- (7)].
ych¨
));

1654 (
yyv•
[(1Ë- (7)].
yp‹tToNë
)->
√xt
 = (
yyvÆ
.yportToNet);

1655 (
yyvÆ
.
yp‹tToNë
)->
hód
 = (
yyv•
[(1) - (7)].yportToNet)->head;

1656 (
yyvÆ
.
yp‹tToNë
)->
√xt
 = 
NULL
;

1665 (
yyvÆ
.
yp‹tToNë
Ë
√w
 
VlogP‹tToNë
;

1666 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
p‹t
, (
yyv•
[(2Ë- (5)].
ych¨
));

1667 
	`°r˝y
((
yyvÆ
.
yp‹tToNë
)->
√t
, (
yyv•
[(4Ë- (5)].
ych¨
));

1668 (
yyvÆ
.
yp‹tToNë
)->
hód
 = (yyval.yportToNet);

1669 (
yyvÆ
.
yp‹tToNë
)->
√xt
 = 
NULL
;

1679 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1681 
	`YYPOPSTACK
 (
yyÀn
);

1682 
yyÀn
 = 0;

1683 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1685 *++
yyv•
 = 
yyvÆ
;

1691 
yyn
 = 
yyr1
[yyn];

1693 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

1694 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

1695 
yy°©e
 = 
yyèbÀ
[yystate];

1697 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

1699 
yy√w°©e
;

1705 
yyîæab
:

1707 i‡(!
yyîr°©us
)

1709 ++
yy√ºs
;

1710 #i‡! 
YYERROR_VERBOSE


1711 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1714 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

1715 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

1717 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

1718 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

1719 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1720 i‡(
yymsg
 !
yymsgbuf
)

1721 
	`YYSTACK_FREE
 (
yymsg
);

1722 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

1723 i‡(
yymsg
)

1724 
yymsg_Æloc
 = 
yyÆloc
;

1727 
yymsg
 = 
yymsgbuf
;

1728 
yymsg_Æloc
 =  
yymsgbuf
;

1732 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

1734 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

1735 
	`yyîr‹
 (
yymsg
);

1739 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1740 i‡(
yysize
 != 0)

1741 
yyexhau°edœb
;

1749 i‡(
yyîr°©us
 == 3)

1754 i‡(
yych¨
 <
YYEOF
)

1757 i‡(
yych¨
 =
YYEOF
)

1758 
YYABORT
;

1762 
	`yyde°ru˘
 ("Error: discarding",

1763 
yytokí
, &
yylvÆ
);

1764 
yych¨
 = 
YYEMPTY
;

1770 
yyîæab1
;

1776 
yyîr‹œb
:

1782 
yyîr‹œb
;

1786 
	`YYPOPSTACK
 (
yyÀn
);

1787 
yyÀn
 = 0;

1788 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1789 
yy°©e
 = *
yys•
;

1790 
yyîæab1
;

1796 
yyîæab1
:

1797 
yyîr°©us
 = 3;

1801 
yyn
 = 
yy∑˘
[
yy°©e
];

1802 i‡(
yyn
 !
YYPACT_NINF
)

1804 
yyn
 +
YYTERROR
;

1805 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

1807 
yyn
 = 
yyèbÀ
[yyn];

1808 i‡(0 < 
yyn
)

1814 i‡(
yys•
 =
yyss
)

1815 
YYABORT
;

1818 
	`yyde°ru˘
 ("Error:Öopping",

1819 
yy°os
[
yy°©e
], 
yyv•
);

1820 
	`YYPOPSTACK
 (1);

1821 
yy°©e
 = *
yys•
;

1822 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1825 *++
yyv•
 = 
yylvÆ
;

1829 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

1831 
yy°©e
 = 
yyn
;

1832 
yy√w°©e
;

1838 
yyac˚±œb
:

1839 
yyªsu…
 = 0;

1840 
yyªtu∫
;

1845 
yyab‹éab
:

1846 
yyªsu…
 = 1;

1847 
yyªtu∫
;

1849 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


1853 
yyexhau°edœb
:

1854 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1855 
yyªsu…
 = 2;

1859 
yyªtu∫
:

1860 i‡(
yych¨
 !
YYEMPTY
)

1861 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1862 
yytokí
, &
yylvÆ
);

1865 
	`YYPOPSTACK
 (
yyÀn
);

1866 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1867 
yys•
 !
yyss
)

1869 
	`yyde°ru˘
 ("Cleanup:Öopping",

1870 
yy°os
[*
yys•
], 
yyv•
);

1871 
	`YYPOPSTACK
 (1);

1873 #i‚de‡
yyovîÊow


1874 i‡(
yyss
 !
yysß
)

1875 
	`YYSTACK_FREE
 (
yyss
);

1877 #i‡
YYERROR_VERBOSE


1878 i‡(
yymsg
 !
yymsgbuf
)

1879 
	`YYSTACK_FREE
 (
yymsg
);

1882  
	`YYID
 (
yyªsu…
);

1883 
	}
}

1891 
	$vlog_fûìº‹
(c⁄° *
msg
) {

1892 
	`Ârötf
(
°dîr
, "**ERROR vlog_fileerror(): ");

1893 
	`Ârötf
(
°dîr
, "Aàlöê%d. Nó∏`%s'. ", 
vlog_fûñöe
, 
vlog_fûëext
);

1894 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

1895 
	}
}

1897 
	$vlog_fûe‰ìNames
(
VlogNames
 *
«mes
) {

1898 
VlogNames
 *
«me
 = 
«mes
->
hód
;

1899 
«me
) {

1900 
VlogNames
 *
¥ev
 = 
«me
;

1901 
«me
 =Çame->
√xt
;

1902 
dñëe
 
¥ev
;

1904 
	}
}

1906 
	$vlog_fûe‰ìP‹tToNë
(
VlogP‹tToNë
 *
p2ns
) {

1907 
VlogP‹tToNë
 *
p2n
 = 
p2ns
->
hód
;

1908 
p2n
) {

1909 
VlogP‹tToNë
 *
¥ev
 = 
p2n
;

1910 
p2n
 =Ö2n->
√xt
;

1911 
dñëe
 
¥ev
;

1913 
	}
}

	@interface/lib/dbg/lex_n_yacc/vlog_file.tab.hpp

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mMODULE
 = 258,

43 
	mENDMODULE
 = 259,

44 
	mPRIMITIVE
 = 260,

45 
	mENDPRIMITIVE
 = 261,

46 
	mASSIGN
 = 262,

47 
	mINPUT
 = 263,

48 
	mOUTPUT
 = 264,

49 
	mINOUT
 = 265,

50 
	mWIRE
 = 266,

51 
	mREG
 = 267,

52 
	mSUPPLY_L
 = 268,

53 
	mSUPPLY_H
 = 269,

54 
	mNAME
 = 270,

55 
	mNUMBER
 = 271,

56 
	mSTRENGTH
 = 272

62 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


63 
	uYYSTYPE


69 
	mych¨
[
I¡fNs
::
NAME_LEN
];

70 
	mI¡fNs
::
VlogNëTy≥
 
y√tTy≥
;

71 
	mI¡fNs
::
VlogNames
 *
y«mes
;

72 
	mI¡fNs
::
VlogP‹tToNë
 *
yp‹tToNë
;

78 } 
	tYYSTYPE
;

79 
	#YYSTYPE_IS_TRIVIAL
 1

	)

80 
	#yy°y≥
 
YYSTYPE


	)

81 
	#YYSTYPE_IS_DECLARED
 1

	)

84 
YYSTYPE
 
vlog_fûñvÆ
;

	@interface/lib/dbg/lex_n_yacc/vlog_file.yy.cpp

5 
	#YY_INT_ALIGNED
 

	)

9 
	#yy_¸óã_buf„r
 
vlog_fûe_¸óã_buf„r


	)

10 
	#yy_dñëe_buf„r
 
vlog_fûe_dñëe_buf„r


	)

11 
	#yy_Êex_debug
 
vlog_fûe_Êex_debug


	)

12 
	#yy_öô_buf„r
 
vlog_fûe_öô_buf„r


	)

13 
	#yy_Êush_buf„r
 
vlog_fûe_Êush_buf„r


	)

14 
	#yy_lﬂd_buf„r_°©e
 
vlog_fûe_lﬂd_buf„r_°©e


	)

15 
	#yy_swôch_to_buf„r
 
vlog_fûe_swôch_to_buf„r


	)

16 
	#yyö
 
vlog_fûeö


	)

17 
	#yyÀng
 
vlog_fûñíg


	)

18 
	#yyÀx
 
vlog_fûñex


	)

19 
	#yylöío
 
vlog_fûñöío


	)

20 
	#yyout
 
vlog_fûeout


	)

21 
	#yyª°¨t
 
vlog_fûîe°¨t


	)

22 
	#yyãxt
 
vlog_fûëext


	)

23 
	#yywøp
 
vlog_fûewøp


	)

24 
	#yyÆloc
 
vlog_fûóŒoc


	)

25 
	#yyªÆloc
 
vlog_fûîóŒoc


	)

26 
	#yy‰ì
 
vlog_fûe‰ì


	)

28 
	#FLEX_SCANNER


	)

29 
	#YY_FLEX_MAJOR_VERSION
 2

	)

30 
	#YY_FLEX_MINOR_VERSION
 5

	)

31 
	#YY_FLEX_SUBMINOR_VERSION
 35

	)

32 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

33 
	#FLEX_BETA


	)

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 
	~<î∫o.h
>

42 
	~<°dlib.h
>

48 #i‚de‡
FLEXINT_H


49 
	#FLEXINT_H


	)

53 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

58 #i‚de‡
__STDC_LIMIT_MACROS


59 
	#__STDC_LIMIT_MACROS
 1

	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	tÊex_öt8_t
;

64 
uöt8_t
 
	tÊex_uöt8_t
;

65 
öt16_t
 
	tÊex_öt16_t
;

66 
uöt16_t
 
	tÊex_uöt16_t
;

67 
öt32_t
 
	tÊex_öt32_t
;

68 
uöt32_t
 
	tÊex_uöt32_t
;

70 sig√d 
	tÊex_öt8_t
;

71 
	tÊex_öt16_t
;

72 
	tÊex_öt32_t
;

73 
	tÊex_uöt8_t
;

74 
	tÊex_uöt16_t
;

75 
	tÊex_uöt32_t
;

79 #i‚de‡
INT8_MIN


80 
	#INT8_MIN
 (-128)

	)

82 #i‚de‡
INT16_MIN


83 
	#INT16_MIN
 (-32767-1)

	)

85 #i‚de‡
INT32_MIN


86 
	#INT32_MIN
 (-2147483647-1)

	)

88 #i‚de‡
INT8_MAX


89 
	#INT8_MAX
 (127)

	)

91 #i‚de‡
INT16_MAX


92 
	#INT16_MAX
 (32767)

	)

94 #i‚de‡
INT32_MAX


95 
	#INT32_MAX
 (2147483647)

	)

97 #i‚de‡
UINT8_MAX


98 
	#UINT8_MAX
 (255U)

	)

100 #i‚de‡
UINT16_MAX


101 
	#UINT16_MAX
 (65535U)

	)

103 #i‚de‡
UINT32_MAX


104 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`vlog_fûîe°¨t
(
vlog_fûeö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 
vlog_fûñíg
;

177 
FILE
 *
vlog_fûeö
, *
vlog_fûeout
;

179 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

180 
	#EOB_ACT_END_OF_FILE
 1

	)

181 
	#EOB_ACT_LAST_MATCH
 2

	)

183 
	#YY_LESS_LINENO
(
n
)

	)

186 
	#yyÀss
(
n
) \

190 
yyÀss_ma¸o_¨g
 = (
n
); \

191 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

192 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

193 
YY_RESTORE_YY_MORE_OFFSET
 \

194 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

195 
YY_DO_BEFORE_ACTION
; \

197  0 )

	)

199 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

201 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


202 
	#YY_TYPEDEF_YY_SIZE_T


	)

203 
size_t
 
	tyy_size_t
;

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
	gyy_n_ch¨s
;

294 
	gvlog_fûñíg
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
vlog_fûîe°¨t
 (
FILE
 *
öput_fûe
 );

307 
vlog_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
vlog_fûe_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
vlog_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
vlog_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
vlog_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
vlog_fûï›_buf„r_°©e
 ();

314 
vlog_fûìnsuª_buf„r_°ack
 ();

315 
vlog_fûe_lﬂd_buf„r_°©e
 ();

316 
vlog_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`vlog_fûe_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
vlog_fûe_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
vlog_fûe_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
vlog_fûe_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
Àn
 );

324 *
vlog_fûóŒoc
 (
yy_size_t
 );

325 *
vlog_fûîóŒoc
 (*,
yy_size_t
 );

326 
vlog_fûe‰ì
 (* );

328 
	#yy_√w_buf„r
 
vlog_fûe_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`vlog_fûìnsuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`vlog_fûe_¸óã_buf„r
(
vlog_fûeö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`vlog_fûìnsuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`vlog_fûe_¸óã_buf„r
(
vlog_fûeö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	#vlog_fûewøp
(
n
Ë1

	)

355 
	#YY_SKIP_YYWRAP


	)

357 
	tYY_CHAR
;

359 
FILE
 *
	gvlog_fûeö
 = (FILE *Ë0, *
	gvlog_fûeout
 = (FILE *) 0;

361 
	tyy_°©e_ty≥
;

363 
vlog_fûñöío
;

365 
	gvlog_fûñöío
 = 1;

367 *
vlog_fûëext
;

368 
	#yyãxt_±r
 
vlog_fûëext


	)

370 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

371 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

372 
yy_gë_√xt_buf„r
 ();

373 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

378 
	#YY_DO_BEFORE_ACTION
 \

379 (
yyãxt_±r
Ë
yy_bp
; \

380 
vlog_fûñíg
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

381 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

382 *
yy_˝
 = '\0'; \

383 (
yy_c_buf_p
Ë
yy_˝
;

	)

385 
	#YY_NUM_RULES
 44

	)

386 
	#YY_END_OF_BUFFER
 45

	)

389 
	syy_å™s_öfo


391 
Êex_öt32_t
 
	myy_vîify
;

392 
Êex_öt32_t
 
	myy_nxt
;

394 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[192] =

420 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

452 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[48] =

461 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[201] =

487 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[201] =

513 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[510] =

573 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[510] =

633 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

634 *
	gyy_œ°_ac˚±ög_˝os
;

636 
vlog_fûe_Êex_debug
;

637 
	gvlog_fûe_Êex_debug
 = 0;

642 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

643 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

644 
	#YY_MORE_ADJ
 0

	)

645 
	#YY_RESTORE_YY_MORE_OFFSET


	)

646 *
	gvlog_fûëext
;

656 
	~"vlog_fûe.h
"

657 
	~"vlog_fûe.èb.hµ
"

659 
usög
 
«me•a˚
 
	g°d
;

661 
	gvlog_fûñöe
 = 1;

662 
boﬁ
 
	gvlog_fûew¨nög
 = 1;

664 
vlog_fûeskùS≥cify
();

665 
vlog_fûeskùTabÀ
();

666 
vlog_fûeskùTimeSˇÀ
();

667 
vlog_fûeskùCñlDef
();

668 
vlog_fûeskùEndCñlDef
();

675 
	#INITIAL
 0

	)

676 
	#COMMENT
 1

	)

677 
	#SPECIFY
 2

	)

678 
	#TABLE
 3

	)

680 #i‚de‡
YY_NO_UNISTD_H


685 
	~<uni°d.h
>

688 #i‚de‡
YY_EXTRA_TYPE


689 
	#YY_EXTRA_TYPE
 *

	)

692 
yy_öô_globÆs
 ();

697 
vlog_fûñex_de°roy
 ();

699 
vlog_fûegë_debug
 ();

701 
vlog_fûe£t_debug
 (
debug_Êag
 );

703 
YY_EXTRA_TYPE
 
vlog_fûegë_exåa
 ();

705 
vlog_fûe£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

707 
FILE
 *
vlog_fûegë_ö
 ();

709 
vlog_fûe£t_ö
 (
FILE
 * 
ö_°r
 );

711 
FILE
 *
vlog_fûegë_out
 ();

713 
vlog_fûe£t_out
 (
FILE
 * 
out_°r
 );

715 
vlog_fûegë_Àng
 ();

717 *
vlog_fûegë_ãxt
 ();

719 
vlog_fûegë_löío
 ();

721 
vlog_fûe£t_löío
 (
löe_numbî
 );

727 #i‚de‡
YY_SKIP_YYWRAP


728 #ifde‡
__˝lu•lus


729 "C" 
vlog_fûewøp
 ();

731 
vlog_fûewøp
 ();

735 #i‚de‡
yyãxt_±r


736 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

739 #ifde‡
YY_NEED_STRLEN


740 
yy_Êex_°æí
 (
yyc⁄°
 * );

743 #i‚de‡
YY_NO_INPUT


745 #ifde‡
__˝lu•lus


746 
yyöput
 ();

748 
öput
 ();

754 #i‚de‡
YY_READ_BUF_SIZE


755 
	#YY_READ_BUF_SIZE
 8192

	)

759 #i‚de‡
ECHO


763 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
vlog_fûëext
, 
vlog_fûñíg
, 1, 
vlog_fûeout
 )Ë{} } 0)

	)

769 #i‚de‡
YY_INPUT


770 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

771 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

773 
c
 = '*'; \

774 
n
; \

775  
n
 = 0;Ç < 
max_size
 && \

776 (
c
 = 
	`gëc
–
vlog_fûeö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

777 
buf
[
n
] = (Ë
c
; \

778 i‡–
c
 == '\n' ) \

779 
buf
[
n
++] = (Ë
c
; \

780 i‡–
c
 =
EOF
 && 
	`„º‹
–
vlog_fûeö
 ) ) \

781 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

782 
ªsu…
 = 
n
; \

786 
î∫o
=0; \

787  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
vlog_fûeö
))==0 && 
	`„º‹
(vlog_filein)) \

789 if–
î∫o
 !
EINTR
) \

791 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

794 
î∫o
=0; \

795 
	`˛óªº
(
vlog_fûeö
); \

799 

	)

806 #i‚de‡
yyãrmö©e


807 
	#yyãrmö©e
(Ë 
YY_NULL


	)

811 #i‚de‡
YY_START_STACK_INCR


812 
	#YY_START_STACK_INCR
 25

	)

816 #i‚de‡
YY_FATAL_ERROR


817 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

825 #i‚de‡
YY_DECL


826 
	#YY_DECL_IS_OURS
 1

	)

828 
vlog_fûñex
 ();

830 
	#YY_DECL
 
	`vlog_fûñex
 ()

	)

836 #i‚de‡
YY_USER_ACTION


837 
	#YY_USER_ACTION


	)

841 #i‚de‡
YY_BREAK


842 
	#YY_BREAK
 ;

	)

845 
	#YY_RULE_SETUP
 \

846 
YY_USER_ACTION


	)

850 
	gYY_DECL


852 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

853 *
	gyy_˝
, *
	gyy_bp
;

854 
	gyy_a˘
;

862 i‡–!(
	gyy_öô
) )

864 (
	gyy_öô
) = 1;

866 #ifde‡
YY_USER_INIT


867 
	gYY_USER_INIT
;

870 i‡–! (
	gyy_°¨t
) )

871 (
	gyy_°¨t
) = 1;

873 i‡–! 
	gvlog_fûeö
 )

874 
	gvlog_fûeö
 = 
°dö
;

876 i‡–! 
	gvlog_fûeout
 )

877 
	gvlog_fûeout
 = 
°dout
;

879 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

880 
vlog_fûìnsuª_buf„r_°ack
 ();

881 
	gYY_CURRENT_BUFFER_LVALUE
 =

882 
vlog_fûe_¸óã_buf„r
(
vlog_fûeö
,
YY_BUF_SIZE
 );

885 
vlog_fûe_lﬂd_buf„r_°©e
( );

890 
	gyy_˝
 = (
yy_c_buf_p
);

893 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

898 
	gyy_bp
 = 
yy_˝
;

900 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

901 
	gyy_m©ch
:

904 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

905 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

907 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

908 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

910  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

912 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

913 i‡–
	gyy_cuºít_°©e
 >= 192 )

914 
yy_c
 = 
yy_mëa
[() yy_c];

916 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

917 ++
	gyy_˝
;

919  
	gyy_ba£
[
yy_cuºít_°©e
] != 462 );

921 
	gyy_föd_a˘i⁄
:

922 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

923 i‡–
	gyy_a˘
 == 0 )

925 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

926 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

927 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

930 
	gYY_DO_BEFORE_ACTION
;

932 
	gdo_a˘i⁄
:

934  
yy_a˘
 )

938 *
yy_˝
 = (
yy_hﬁd_ch¨
);

939 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

940 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

941 
	gyy_föd_a˘i⁄
;

944 
YY_RULE_SETUP


947 
YY_BREAK


949 
YY_RULE_SETUP


951 
BEGIN
 
COMMENT
 ;

952 
YY_BREAK


954 
YY_RULE_SETUP


956 
BEGIN
 
INITIAL
 ;

957 
YY_BREAK


960 
YY_RULE_SETUP


962 { 
vlog_fûñöe
++; }

963 
YY_BREAK


965 
YY_RULE_SETUP


968 
YY_BREAK


970 
YY_RULE_SETUP


972 
BEGIN
 
SPECIFY
 ;

973 
YY_BREAK


975 
YY_RULE_SETUP


977 { 
vlog_fûeskùS≥cify
();

978 
BEGIN
(
INITIAL
); }

979 
YY_BREAK


982 
YY_RULE_SETUP


984 { 
vlog_fûñöe
++; }

985 
YY_BREAK


987 
YY_RULE_SETUP


990 
YY_BREAK


992 
YY_RULE_SETUP


994 
BEGIN
 
TABLE
 ;

995 
YY_BREAK


997 
YY_RULE_SETUP


999 { 
vlog_fûeskùTabÀ
();

1000 
BEGIN
(
INITIAL
); }

1001 
YY_BREAK


1004 
YY_RULE_SETUP


1006 { 
vlog_fûñöe
++; }

1007 
YY_BREAK


1009 
YY_RULE_SETUP


1012 
YY_BREAK


1014 
YY_RULE_SETUP


1016 { 
vlog_fûeskùTimeSˇÀ
(); }

1017 
YY_BREAK


1019 
YY_RULE_SETUP


1021 { 
vlog_fûeskùCñlDef
(); }

1022 
YY_BREAK


1024 
YY_RULE_SETUP


1026 { 
vlog_fûeskùEndCñlDef
(); }

1027 
YY_BREAK


1029 
YY_RULE_SETUP


1031 {  
MODULE
; }

1032 
YY_BREAK


1034 
YY_RULE_SETUP


1036 {  
ENDMODULE
; }

1037 
YY_BREAK


1039 
YY_RULE_SETUP


1041 {  
PRIMITIVE
; }

1042 
YY_BREAK


1044 
YY_RULE_SETUP


1046 {  
ENDPRIMITIVE
; }

1047 
YY_BREAK


1049 
YY_RULE_SETUP


1051 {  
INPUT
; }

1052 
YY_BREAK


1054 
YY_RULE_SETUP


1056 {  
OUTPUT
; }

1057 
YY_BREAK


1059 
YY_RULE_SETUP


1061 {  
INOUT
; }

1062 
YY_BREAK


1064 
YY_RULE_SETUP


1066 {  
ASSIGN
; }

1067 
YY_BREAK


1069 
YY_RULE_SETUP


1071 {  
WIRE
; }

1072 
YY_BREAK


1074 
YY_RULE_SETUP


1076 {  
REG
; }

1077 
YY_BREAK


1079 
YY_RULE_SETUP


1081 {  
SUPPLY_L
; }

1082 
YY_BREAK


1084 
YY_RULE_SETUP


1086 {  
SUPPLY_H
; }

1087 
YY_BREAK


1089 
YY_RULE_SETUP


1092 
°r˝y
(
vlog_fûñvÆ
.
ych¨
, 
vlog_fûëext
);

1093  
	gSTRENGTH
;

1095 
YY_BREAK


1097 
YY_RULE_SETUP


1100 
°r˝y
(
vlog_fûñvÆ
.
ych¨
, 
vlog_fûëext
);

1101  
	gNUMBER
;

1103 
YY_BREAK


1105 
YY_RULE_SETUP


1108 
°r˝y
(
vlog_fûñvÆ
.
ych¨
, 
vlog_fûëext
);

1109  
	gNAME
;

1111 
YY_BREAK


1113 
YY_RULE_SETUP


1115 {  
vlog_fûëext
[0]; }

1116 
YY_BREAK


1118 
YY_RULE_SETUP


1120 {  
vlog_fûëext
[0]; }

1121 
YY_BREAK


1123 
YY_RULE_SETUP


1125 {  
vlog_fûëext
[0]; }

1126 
YY_BREAK


1128 
YY_RULE_SETUP


1130 {  
vlog_fûëext
[0]; }

1131 
YY_BREAK


1133 
YY_RULE_SETUP


1135 {  
vlog_fûëext
[0]; }

1136 
YY_BREAK


1138 
YY_RULE_SETUP


1140 {  
vlog_fûëext
[0]; }

1141 
YY_BREAK


1143 
YY_RULE_SETUP


1145 {  
vlog_fûëext
[0]; }

1146 
YY_BREAK


1148 
YY_RULE_SETUP


1150 {  
vlog_fûëext
[0]; }

1151 
YY_BREAK


1153 
YY_RULE_SETUP


1155 {  
vlog_fûëext
[0]; }

1156 
YY_BREAK


1159 
YY_RULE_SETUP


1161 { 
vlog_fûñöe
++; }

1162 
YY_BREAK


1164 
YY_RULE_SETUP


1167 
YY_BREAK


1169 
YY_RULE_SETUP


1172 
YY_BREAK


1174 
YY_RULE_SETUP


1176 
ECHO
;

1177 
	gYY_BREAK


1179 
YY_STATE_EOF
(
INITIAL
):

1180 
YY_STATE_EOF
(
COMMENT
):

1181 
YY_STATE_EOF
(
SPECIFY
):

1182 
YY_STATE_EOF
(
TABLE
):

1183 
yyãrmö©e
();

1185 
	gYY_END_OF_BUFFER
:

1188 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1191 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1192 
YY_RESTORE_YY_MORE_OFFSET


1194 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1205 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1206 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
vlog_fûeö
;

1207 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1217 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1219 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1221 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1223 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1234 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1236 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1238 i‡–
	gyy_√xt_°©e
 )

1241 
	gyy_˝
 = ++(
yy_c_buf_p
);

1242 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1243 
	gyy_m©ch
;

1248 
	gyy_˝
 = (
yy_c_buf_p
);

1249 
	gyy_föd_a˘i⁄
;

1253  
yy_gë_√xt_buf„r
( ) )

1255 
	gEOB_ACT_END_OF_FILE
:

1257 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1259 i‡–
vlog_fûewøp
( ) )

1270 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1272 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1273 
	gdo_a˘i⁄
;

1278 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1279 
	gYY_NEW_FILE
;

1284 
	gEOB_ACT_CONTINUE_SCAN
:

1285 (
yy_c_buf_p
) =

1286 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1288 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1290 
	gyy_˝
 = (
yy_c_buf_p
);

1291 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1292 
	gyy_m©ch
;

1294 
	gEOB_ACT_LAST_MATCH
:

1295 (
yy_c_buf_p
) =

1296 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1298 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1300 
	gyy_˝
 = (
yy_c_buf_p
);

1301 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1302 
	gyy_föd_a˘i⁄
;

1308 
YY_FATAL_ERROR
(

1321 
	$yy_gë_√xt_buf„r
 ()

1323 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1324 *
sour˚
 = (
yyãxt_±r
);

1325 
numbî_to_move
, 
i
;

1326 
ªt_vÆ
;

1328 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1329 
	`YY_FATAL_ERROR
(

1332 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1334 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1339  
EOB_ACT_END_OF_FILE
;

1347  
EOB_ACT_LAST_MATCH
;

1354 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1356  
i
 = 0; i < 
numbî_to_move
; ++i )

1357 *(
de°
++Ë*(
sour˚
++);

1359 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1363 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1367 
num_to_ªad
 =

1368 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1370  
num_to_ªad
 <= 0 )

1374 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER
;

1376 
yy_c_buf_p_off£t
 =

1377 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1379 i‡–
b
->
yy_is_our_buf„r
 )

1381 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1383 i‡–
√w_size
 <= 0 )

1384 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1386 
b
->
yy_buf_size
 *= 2;

1388 
b
->
yy_ch_buf
 = (*)

1390 
	`vlog_fûîóŒoc
((*Ë
b
->
yy_ch_buf
,b->
yy_buf_size
 + 2 );

1394 
b
->
yy_ch_buf
 = 0;

1396 i‡–! 
b
->
yy_ch_buf
 )

1397 
	`YY_FATAL_ERROR
(

1400 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1402 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1403 
numbî_to_move
 - 1;

1407 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1408 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1411 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1412 (
yy_n_ch¨s
), (
size_t
Ë
num_to_ªad
 );

1414 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1417 i‡–(
yy_n_ch¨s
) == 0 )

1419 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1421 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1422 
	`vlog_fûîe°¨t
(
vlog_fûeö
 );

1427 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1428 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1429 
YY_BUFFER_EOF_PENDING
;

1434 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1436 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1438 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1439 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`vlog_fûîóŒoc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1440 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1441 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1444 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1445 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1446 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1448 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1450  
ªt_vÆ
;

1451 
	}
}

1455 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1457 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1458 *
yy_˝
;

1460 
yy_cuºít_°©e
 = (
yy_°¨t
);

1462  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1464 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1465 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1467 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1468 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1470  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1472 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1473 i‡–
yy_cuºít_°©e
 >= 192 )

1474 
yy_c
 = 
yy_mëa
[() yy_c];

1476 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1479  
yy_cuºít_°©e
;

1480 
	}
}

1487 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1489 
yy_is_jam
;

1490 *
yy_˝
 = (
yy_c_buf_p
);

1492 
YY_CHAR
 
yy_c
 = 1;

1493 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1495 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1496 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1498  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1500 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1501 i‡–
yy_cuºít_°©e
 >= 192 )

1502 
yy_c
 = 
yy_mëa
[() yy_c];

1504 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1505 
yy_is_jam
 = (
yy_cuºít_°©e
 == 191);

1507  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1508 
	}
}

1510 #i‚de‡
YY_NO_INPUT


1511 #ifde‡
__˝lu•lus


1512 
	$yyöput
 ()

1514 
	$öput
 ()

1518 
c
;

1520 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1522 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1528 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1530 *(
yy_c_buf_p
) = '\0';

1534 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1535 ++(
yy_c_buf_p
);

1537  
	`yy_gë_√xt_buf„r
( ) )

1539 
EOB_ACT_LAST_MATCH
:

1551 
	`vlog_fûîe°¨t
(
vlog_fûeö
 );

1555 
EOB_ACT_END_OF_FILE
:

1557 i‡–
	`vlog_fûewøp
( ) )

1558  
EOF
;

1560 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1561 
YY_NEW_FILE
;

1562 #ifde‡
__˝lu•lus


1563  
	`yyöput
();

1565  
	`öput
();

1569 
EOB_ACT_CONTINUE_SCAN
:

1570 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1576 
c
 = *(*Ë(
yy_c_buf_p
);

1577 *(
yy_c_buf_p
) = '\0';

1578 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1580  
c
;

1581 
	}
}

1589 
	$vlog_fûîe°¨t
 (
FILE
 * 
öput_fûe
 )

1592 i‡–! 
YY_CURRENT_BUFFER
 ){

1593 
	`vlog_fûìnsuª_buf„r_°ack
 ();

1594 
YY_CURRENT_BUFFER_LVALUE
 =

1595 
	`vlog_fûe_¸óã_buf„r
(
vlog_fûeö
,
YY_BUF_SIZE
 );

1598 
	`vlog_fûe_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1599 
	`vlog_fûe_lﬂd_buf„r_°©e
( );

1600 
	}
}

1606 
	$vlog_fûe_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1614 
	`vlog_fûìnsuª_buf„r_°ack
 ();

1615 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1618 i‡–
YY_CURRENT_BUFFER
 )

1621 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1622 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1623 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1626 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1627 
	`vlog_fûe_lﬂd_buf„r_°©e
( );

1634 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1635 
	}
}

1637 
	$vlog_fûe_lﬂd_buf„r_°©e
 ()

1639 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1640 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1641 
vlog_fûeö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1642 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1643 
	}
}

1651 
YY_BUFFER_STATE
 
	$vlog_fûe_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1653 
YY_BUFFER_STATE
 
b
;

1655 
b
 = (
YY_BUFFER_STATE
Ë
	`vlog_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1656 i‡–! 
b
 )

1657 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_file_create_buffer()" );

1659 
b
->
yy_buf_size
 = 
size
;

1664 
b
->
yy_ch_buf
 = (*Ë
	`vlog_fûóŒoc
(b->
yy_buf_size
 + 2 );

1665 i‡–! 
b
->
yy_ch_buf
 )

1666 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_file_create_buffer()" );

1668 
b
->
yy_is_our_buf„r
 = 1;

1670 
	`vlog_fûe_öô_buf„r
(
b
,
fûe
 );

1672  
b
;

1673 
	}
}

1679 
	$vlog_fûe_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1682 i‡–! 
b
 )

1685 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1686 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1688 i‡–
b
->
yy_is_our_buf„r
 )

1689 
	`vlog_fûe‰ì
((*Ë
b
->
yy_ch_buf
 );

1691 
	`vlog_fûe‰ì
((*Ë
b
 );

1692 
	}
}

1694 #i‚de‡
__˝lu•lus


1695 
ißây
 ();

1702 
	$vlog_fûe_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1705 
€ºno
 = 
î∫o
;

1707 
	`vlog_fûe_Êush_buf„r
(
b
 );

1709 
b
->
yy_öput_fûe
 = 
fûe
;

1710 
b
->
yy_fûl_buf„r
 = 1;

1716 i‡(
b
 !
YY_CURRENT_BUFFER
){

1717 
b
->
yy_bs_löío
 = 1;

1718 
b
->
yy_bs_cﬁumn
 = 0;

1721 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1723 
î∫o
 = 
€ºno
;

1724 
	}
}

1730 
	$vlog_fûe_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1732 i‡–! 
b
 )

1735 
b
->
yy_n_ch¨s
 = 0;

1741 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1742 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1744 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1746 
b
->
yy_©_bﬁ
 = 1;

1747 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1749 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1750 
	`vlog_fûe_lﬂd_buf„r_°©e
( );

1751 
	}
}

1759 
	$vlog_fûïush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1761 i‡(
√w_buf„r
 =
NULL
)

1764 
	`vlog_fûìnsuª_buf„r_°ack
();

1767 i‡–
YY_CURRENT_BUFFER
 )

1770 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1771 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1772 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1776 i‡(
YY_CURRENT_BUFFER
)

1777 (
yy_buf„r_°ack_t›
)++;

1778 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1781 
	`vlog_fûe_lﬂd_buf„r_°©e
( );

1782 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1783 
	}
}

1789 
	$vlog_fûï›_buf„r_°©e
 ()

1791 i‡(!
YY_CURRENT_BUFFER
)

1794 
	`vlog_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1795 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1796 i‡((
yy_buf„r_°ack_t›
) > 0)

1797 --(
yy_buf„r_°ack_t›
);

1799 i‡(
YY_CURRENT_BUFFER
) {

1800 
	`vlog_fûe_lﬂd_buf„r_°©e
( );

1801 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1803 
	}
}

1808 
	$vlog_fûìnsuª_buf„r_°ack
 ()

1810 
num_to_Æloc
;

1812 i‡(!(
yy_buf„r_°ack
)) {

1818 
num_to_Æloc
 = 1;

1819 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
vlog_fûóŒoc


1820 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1822 i‡–! (
yy_buf„r_°ack
) )

1823 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_fileensure_buffer_stack()" );

1825 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1827 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1828 (
yy_buf„r_°ack_t›
) = 0;

1832 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1835 
grow_size
 = 8 ;

1837 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1838 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
vlog_fûîóŒoc


1839 ((
yy_buf„r_°ack
),

1840 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1842 i‡–! (
yy_buf„r_°ack
) )

1843 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_fileensure_buffer_stack()" );

1846 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1847 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1849 
	}
}

1857 
YY_BUFFER_STATE
 
	$vlog_fûe_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1859 
YY_BUFFER_STATE
 
b
;

1861 i‡–
size
 < 2 ||

1862 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1863 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1867 
b
 = (
YY_BUFFER_STATE
Ë
	`vlog_fûóŒoc
(–
yy_buf„r_°©e
 ) );

1868 i‡–! 
b
 )

1869 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_file_scan_buffer()" );

1871 
b
->
yy_buf_size
 = 
size
 - 2;

1872 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1873 
b
->
yy_is_our_buf„r
 = 0;

1874 
b
->
yy_öput_fûe
 = 0;

1875 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1876 
b
->
yy_is_öãø˘ive
 = 0;

1877 
b
->
yy_©_bﬁ
 = 1;

1878 
b
->
yy_fûl_buf„r
 = 0;

1879 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1881 
	`vlog_fûe_swôch_to_buf„r
(
b
 );

1883  
b
;

1884 
	}
}

1894 
YY_BUFFER_STATE
 
	$vlog_fûe_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1897  
	`vlog_fûe_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1898 
	}
}

1907 
YY_BUFFER_STATE
 
	$vlog_fûe_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
_yybyãs_Àn
 )

1909 
YY_BUFFER_STATE
 
b
;

1910 *
buf
;

1911 
yy_size_t
 
n
;

1912 
i
;

1915 
n
 = 
_yybyãs_Àn
 + 2;

1916 
buf
 = (*Ë
	`vlog_fûóŒoc
(
n
 );

1917 i‡–! 
buf
 )

1918 
	`YY_FATAL_ERROR
( "out of dynamic memory in vlog_file_scan_bytes()" );

1920  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1921 
buf
[
i
] = 
yybyãs
[i];

1923 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1925 
b
 = 
	`vlog_fûe_sˇn_buf„r
(
buf
,
n
 );

1926 i‡–! 
b
 )

1927 
	`YY_FATAL_ERROR
( "bad buffer in vlog_file_scan_bytes()" );

1932 
b
->
yy_is_our_buf„r
 = 1;

1934  
b
;

1935 
	}
}

1937 #i‚de‡
YY_EXIT_FAILURE


1938 
	#YY_EXIT_FAILURE
 2

	)

1941 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1943 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1944 
	`exô
–
YY_EXIT_FAILURE
 );

1945 
	}
}

1949 #unde‡
yyÀss


1950 
	#yyÀss
(
n
) \

1954 
yyÀss_ma¸o_¨g
 = (
n
); \

1955 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1956 
vlog_fûëext
[
vlog_fûñíg
] = (
yy_hﬁd_ch¨
); \

1957 (
yy_c_buf_p
Ë
vlog_fûëext
 + 
yyÀss_ma¸o_¨g
; \

1958 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1959 *(
yy_c_buf_p
) = '\0'; \

1960 
vlog_fûñíg
 = 
yyÀss_ma¸o_¨g
; \

1962  0 )

	)

1969 
	$vlog_fûegë_löío
 ()

1972  
vlog_fûñöío
;

1973 
	}
}

1978 
FILE
 *
	$vlog_fûegë_ö
 ()

1980  
vlog_fûeö
;

1981 
	}
}

1986 
FILE
 *
	$vlog_fûegë_out
 ()

1988  
vlog_fûeout
;

1989 
	}
}

1994 
	$vlog_fûegë_Àng
 ()

1996  
vlog_fûñíg
;

1997 
	}
}

2003 *
	$vlog_fûegë_ãxt
 ()

2005  
vlog_fûëext
;

2006 
	}
}

2012 
	$vlog_fûe£t_löío
 (
löe_numbî
 )

2015 
vlog_fûñöío
 = 
löe_numbî
;

2016 
	}
}

2024 
	$vlog_fûe£t_ö
 (
FILE
 * 
ö_°r
 )

2026 
vlog_fûeö
 = 
ö_°r
 ;

2027 
	}
}

2029 
	$vlog_fûe£t_out
 (
FILE
 * 
out_°r
 )

2031 
vlog_fûeout
 = 
out_°r
 ;

2032 
	}
}

2034 
	$vlog_fûegë_debug
 ()

2036  
vlog_fûe_Êex_debug
;

2037 
	}
}

2039 
	$vlog_fûe£t_debug
 (
bdebug
 )

2041 
vlog_fûe_Êex_debug
 = 
bdebug
 ;

2042 
	}
}

2044 
	$yy_öô_globÆs
 ()

2050 (
yy_buf„r_°ack
) = 0;

2051 (
yy_buf„r_°ack_t›
) = 0;

2052 (
yy_buf„r_°ack_max
) = 0;

2053 (
yy_c_buf_p
) = (*) 0;

2054 (
yy_öô
) = 0;

2055 (
yy_°¨t
) = 0;

2058 #ifde‡
YY_STDINIT


2059 
vlog_fûeö
 = 
°dö
;

2060 
vlog_fûeout
 = 
°dout
;

2062 
vlog_fûeö
 = (
FILE
 *) 0;

2063 
vlog_fûeout
 = (
FILE
 *) 0;

2070 
	}
}

2073 
	$vlog_fûñex_de°roy
 ()

2077 
YY_CURRENT_BUFFER
){

2078 
	`vlog_fûe_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2079 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2080 
	`vlog_fûï›_buf„r_°©e
();

2084 
	`vlog_fûe‰ì
((
yy_buf„r_°ack
) );

2085 (
yy_buf„r_°ack
Ë
NULL
;

2089 
	`yy_öô_globÆs
( );

2092 
	}
}

2098 #i‚de‡
yyãxt_±r


2099 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

2101 
i
;

2102  
i
 = 0; i < 
n
; ++i )

2103 
s1
[
i
] = 
s2
[i];

2104 
	}
}

2107 #ifde‡
YY_NEED_STRLEN


2108 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

2110 
n
;

2111  
n
 = 0; 
s
[n]; ++n )

2114  
n
;

2115 
	}
}

2118 *
	$vlog_fûóŒoc
 (
yy_size_t
 
size
 )

2120  (*Ë
	`mÆloc
–
size
 );

2121 
	}
}

2123 *
	$vlog_fûîóŒoc
 (* 
±r
, 
yy_size_t
 
size
 )

2132  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2133 
	}
}

2135 
	$vlog_fûe‰ì
 (* 
±r
 )

2137 
	`‰ì
–(*Ë
±r
 );

2138 
	}
}

2140 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2146 
	$vlog_fûeskùS≥cify
(Ë{ 
	}
}

2148 
	$vlog_fûeskùTabÀ
(Ë{ 
	}
}

2150 
	$vlog_fûeskùTimeSˇÀ
(Ë{ 
	}
}

2152 
	$vlog_fûeskùCñlDef
(Ë{ 
	}
}

2154 
	$vlog_fûeskùEndCñlDef
(Ë{ 
	}
}

	@interface/src/cell.cpp

8 
	~<queue
>

10 
	~"˚Œ.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

16 
CñlSë
 
	gCñl
::
	$gëF™out
(c⁄° 
size_t
 &
i
) const {

17 
CñlSë
 
fo
;

18 i‡(
i
 >
˚Œs_
.
	`size
())

19  
fo
;

20 
Cñl
 *
c
 = 
˚Œs_
[
i
];

21 
NëSë
 
eqvs
;

22 
size_t
 
i
 = 0; i < 
c
->
	`gëNP‹t
(); ++i) {

23 i‡(
c
->
	`gëP‹t
(
i
)->
ty≥_
 !
P‹t
::
OUTPUT
 || !c->gëP‹t(i)->
exNë_
)

25 
NëSë
 
eqv
 = 
	`gëEqvNës
(
c
->
	`gëP‹t
(
i
)->
exNë_
->
id_
);

26 
eqvs
.
	`ö£π
(
eqv
.
	`begö
(),Éqv.
	`íd
());

28 
NëSë
::
ôî©‹
 
ô
 = 
eqvs
.
	`begö
();

29  ; 
ô
 !
eqvs
.
	`íd
(); ++it) {

30 
Në
 *
n
 = *
ô
;

31 
size_t
 
j
 = 0; j < 
n
->
	`gëNP‹t
(); ++j) {

32 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(
j
);

33 i‡(
p
->
t›_
 !
this
 &&Ö->
ty≥_
 =
P‹t
::
INPUT
)

34 
fo
.
	`ö£π
(
p
->
t›_
);

37  
fo
;

38 
	}
}

40 
CñlSë
 
	gCñl
::
	$gëF™out
(c⁄° * c⁄° 
«me
) const {

41 
Cñl
 *
c
 = 
	`gëCñl
(
«me
);

42 i‡(!
c
) {

43 
CñlSë
 
fo
;

44  
fo
;

46  (
	`gëF™out
(
c
->
id_
));

47 
	}
}

49 
CñlSë
 
	gCñl
::
	$gëF™ö
(c⁄° 
size_t
 &
i
) const {

50 
CñlSë
 
fi
;

51 i‡(
i
 >
˚Œs_
.
	`size
())

52  
fi
;

53 
Cñl
 *
c
 = 
˚Œs_
[
i
];

54 
NëSë
 
eqvs
;

55 
size_t
 
i
 = 0; i < 
c
->
	`gëNP‹t
(); ++i) {

56 i‡(
c
->
	`gëP‹t
(
i
)->
ty≥_
 !
P‹t
::
INPUT
 || !c->gëP‹t(i)->
exNë_
)

58 
NëSë
 
eqv
 = 
	`gëEqvNës
(
c
->
	`gëP‹t
(
i
)->
exNë_
->
id_
);

59 
eqvs
.
	`ö£π
(
eqv
.
	`begö
(),Éqv.
	`íd
());

61 
NëSë
::
ôî©‹
 
ô
 = 
eqvs
.
	`begö
();

62  ; 
ô
 !
eqvs
.
	`íd
(); ++it) {

63 
Në
 *
n
 = *
ô
;

64 
size_t
 
j
 = 0; j < 
n
->
	`gëNP‹t
(); ++j) {

65 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(
j
);

66 i‡(
p
->
t›_
 !
this
 &&Ö->
ty≥_
 =
P‹t
::
OUTPUT
)

67 
fi
.
	`ö£π
(
p
->
t›_
);

70  
fi
;

71 
	}
}

73 
CñlSë
 
	gCñl
::
	$gëF™ö
(c⁄° * c⁄° 
«me
) const {

74 
Cñl
 *
c
 = 
	`gëCñl
(
«me
);

75 i‡(!
c
) {

76 
CñlSë
 
fi
;

77  
fi
;

79  (
	`gëF™ö
(
c
->
id_
));

80 
	}
}

83 
NëSë
 
	gCñl
::
	$gëEqvNës
(c⁄° 
size_t
 &
i
) const {

84 
NëSë
 
eqvs
;

85 i‡(
i
 >
√ts_
.
	`size
())

86  
eqvs
;

87 
eqvs
.
	`ö£π
(
√ts_
[
i
]);

88 
queue
<
Në
 *> 
nQue
;

89 
nQue
.
	`push
(
√ts_
[
i
]);

90 !
nQue
.
	`em±y
()) {

91 
Në
 *
n
 = 
nQue
.
	`‰⁄t
();

92 
nQue
.
	`p›
();

93 
size_t
 
idx
 = 0; idx < 
n
->
	`gëNEqv
(); ++idx) {

94 
Në
 *
eqv
 = 
n
->
	`gëEqv
(
idx
);

95 i‡(
eqvs
.
	`cou¡
(
eqv
) == 0) {

96 
eqvs
.
	`ö£π
(
eqv
);

97 
nQue
.
	`push
(
eqv
);

101  
eqvs
;

102 
	}
}

104 
NëSë
 
	gCñl
::
	$gëEqvNës
(c⁄° *c⁄° 
«me
) const {

105 
Në
 *
n
 = 
	`gëNë
(
«me
);

106 i‡(!
n
) {

107 
NëSë
 
eqvs
;

108  
eqvs
;

110  (
	`gëEqvNës
(
n
->
id_
));

111 
	}
}

114 
P‹tSë
 
	gCñl
::
	$gëNëP‹ts
(c⁄° 
size_t
 &
i
) const {

115 
P‹tSë
 
p‹ts
;

116 i‡(
i
 >
√ts_
.
	`size
())

117  
p‹ts
;

118 
NëSë
 
eqv
 = 
	`gëEqvNës
(
i
);

119 
NëSë
::
ôî©‹
 
ô
 = 
eqv
.
	`begö
(); ià!eqv.
	`íd
(); ++it)

120 
size_t
 
i
 = 0; i < (*
ô
)->
	`gëNP‹t
(); ++i)

121 
p‹ts
.
	`ö£π
((*
ô
)->
	`gëP‹t
(
i
));

122  
p‹ts
;

123 
	}
}

126 
P‹tSë
 
	gCñl
::
	$gëNëP‹ts
(c⁄° * c⁄° 
«me
) const {

127 
Në
 *
n
 = 
	`gëNë
(
«me
);

128 i‡(!
n
) {

129 
P‹tSë
 
p‹ts
;

130  
p‹ts
;

132  (
	`gëNëP‹ts
(
n
->
id_
));

133 
	}
}

136 
CñlSë
 
	gCñl
::
	$gëNëCñls
(c⁄° 
size_t
 &
i
) const {

137 
CñlSë
 
˚Œs
;

138 i‡(
i
 >
√ts_
.
	`size
())

139  
˚Œs
;

140 
NëSë
 
eqv
 = 
	`gëEqvNës
(
i
);

141 
NëSë
::
ôî©‹
 
ô
 = 
eqv
.
	`begö
(); ià!eqv.
	`íd
(); ++it)

142 
size_t
 
i
 = 0; i < (*
ô
)->
	`gëNP‹t
(); ++i)

143 i‡((*
ô
)->
	`gëP‹t
(
i
)->
t›_
 !
this
)

144 
˚Œs
.
	`ö£π
((*
ô
)->
	`gëP‹t
(
i
)->
t›_
);

145  
˚Œs
;

146 
	}
}

148 
CñlSë
 
	gCñl
::
	$gëNëCñls
(c⁄° * c⁄° 
«me
) const {

149 
Në
 *
n
 = 
	`gëNë
(
«me
);

150 i‡(!
n
) {

151 
CñlSë
 
˚Œs
;

152  
˚Œs
;

154  (
	`gëNëCñls
(
n
->
id_
));

155 
	}
}

157 
CñlSë
 
	gCñl
::
	$gëNëCñls
(c⁄° 
size_t
 &
i
, c⁄° 
boﬁ
 &
öput
) const {

158 
CñlSë
 
˚Œs
;

159 i‡(
i
 >
√ts_
.
	`size
())

160  
˚Œs
;

161 
NëSë
 
eqv
 = 
	`gëEqvNës
(
i
);

162 
NëSë
::
ôî©‹
 
ô
 = 
eqv
.
	`begö
(); ià!eqv.
	`íd
(); ++it) {

163 
size_t
 
i
 = 0; i < (*
ô
)->
	`gëNP‹t
(); ++i) {

164 
P‹t
 *
p
 = (*
ô
)->
	`gëP‹t
(
i
);

165 i‡(
p
->
t›_
 !
this
 && 
öput
 &&Ö->
ty≥_
 =
P‹t
::
INPUT
)

166 
˚Œs
.
	`ö£π
(
p
->
t›_
);

167 i‡(
p
->
t›_
 !
this
 && !
öput
 &&Ö->
ty≥_
 =
P‹t
::
OUTPUT
)

168 
˚Œs
.
	`ö£π
(
p
->
t›_
);

171  
˚Œs
;

172 
	}
}

174 
CñlSë
 
	gCñl
::
	$gëNëCñls
(c⁄° * c⁄° 
«me
, c⁄° 
boﬁ
 &
öput
) const {

175 
Në
 *
n
 = 
	`gëNë
(
«me
);

176 i‡(!
n
) {

177 
CñlSë
 
˚Œs
;

178  
˚Œs
;

180  (
	`gëNëCñls
(
n
->
id_
, 
öput
));

181 
	}
}

184 
CñlSë
 
	gCñl
::
	$gëP‹tCñls
(c⁄° 
size_t
 &
i
) const {

185 
CñlSë
 
˚Œs
;

186 i‡(
i
 >
p‹ts_
.
	`size
())

187  
˚Œs
;

188 
Në
 *
n
 = 
p‹ts_
[
i
]->
öNë_
;

189 i‡(!
n
)

190  
˚Œs
;

191 
NëSë
 
eqv
 = 
	`gëEqvNës
(
n
->
id_
);

192 
NëSë
::
ôî©‹
 
ô
 = 
eqv
.
	`begö
(Ë; ià!eqv.
	`íd
(); ++it) {

193 
Në
 *
n
 = *
ô
;

194 
size_t
 
i
 = 0; i < 
n
->
	`gëNP‹t
(); ++i) {

195 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(
i
);

196 i‡(
p
->
t›_
 !
this
)

197 
˚Œs
.
	`ö£π
(
p
->
t›_
);

200  
˚Œs
;

201 
	}
}

203 
CñlSë
 
	gCñl
::
	$gëP‹tCñls
(c⁄° * c⁄° 
«me
) const {

204 
P‹t
 *
p
 = 
	`gëP‹t
(
«me
);

205 i‡(!
p
) {

206 
CñlSë
 
˚Œs
;

207  
˚Œs
;

209  (
	`gëP‹tCñls
(
p
->
id_
));

210 
	}
}

	@interface/src/cell.h

8 #i‚de‡
_INTF_CELL_H_


9 
	#_INTF_CELL_H_


	)

11 
	~<£t
>

12 
	~<ve˘‹
>

13 
	~<m≠
>

15 
	~"globÆ.h
"

17 
«me•a˚
 
	gI¡fNs
 {

19 
˛ass
 
	gCñl
;

20 
˛ass
 
	gP‹t
;

21 
˛ass
 
	gNë
;

23 
	g°d
::
	tve˘‹
<
	tCñl
 *> 
	tCñlVec
;

24 
	g°d
::
	t£t
<
	tCñl
 *> 
	tCñlSë
;

25 
	g°d
::
	tm≠
<
	tNameKey
, 
	tCñl
 *> 
	tCñlM≠
;

27 
	g°d
::
	tve˘‹
<
	tP‹t
 *> 
	tP‹tVec
;

28 
	g°d
::
	t£t
<
	tP‹t
 *> 
	tP‹tSë
;

29 
	g°d
::
	tm≠
<
	tNameKey
, 
	tP‹t
 *> 
	tP‹tM≠
;

31 
	g°d
::
	tve˘‹
<
	tNë
 *> 
	tNëVec
;

32 
	g°d
::
	t£t
<
	tNë
 *> 
	tNëSë
;

33 
	g°d
::
	tm≠
<
	tNameKey
, 
	tNë
 *> 
	tNëM≠
;

36 ˛as†
	cP‹t
 {

37 
	gpublic
:

39 
P‹t
(c⁄° * c⁄° 
«me
);

40 ~
P‹t
();

42 
	eTy≥
 { 
	gNA
 = -1, 
	gINPUT
, 
	gOUTPUT
, 
	gINOUT
 };

44 
	g«me_
[
NAME_LEN
];

45 
Ty≥
 
	gty≥_
;

46 
	gid_
;

47 
Cñl
 *
	gt›_
;

48 
Në
 *
	göNë_
;

49 
Në
 *
	gexNë_
;

53 ˛as†
	cNë
 {

54 
	gpublic
:

55 
Në
(c⁄° * c⁄° 
«me
);

56 ~
Në
();

58 
size_t
 
gëNP‹t
() const;

59 
P‹t
 *
gëP‹t
(c⁄° 
size_t
 &
i
) const;

60 
boﬁ
 
addP‹t
(
P‹t
 * c⁄° 
p
);

61 
boﬁ
 
ªmoveP‹t
(c⁄° 
size_t
 &
i
);

62 
boﬁ
 
ªmoveP‹t
(
P‹t
 * c⁄° 
p
);

63 
˛órP‹ts
();

65 
size_t
 
gëNEqv
() const;

66 
Në
 *
gëEqv
(c⁄° 
size_t
 &
i
) const;

67 
boﬁ
 
addEqv
(
Në
 * c⁄° 
n
);

68 
boﬁ
 
isEqv
(
Në
 * c⁄° 
n
) const;

70 
	g«me_
[
NAME_LEN
];

71 
	gid_
;

72 
Cñl
 *
	gt›_
;

74 
	g¥Ÿe˘ed
:

75 
NëVec
 
eqvs_
;

76 
P‹tVec
 
	gp‹ts_
;

80 ˛as†
	cCñl
 {

81 
	gpublic
:

82 
Cñl
(c⁄° * c⁄° 
«me
);

83 
	gvútuÆ
 ~
Cñl
();

86 
CñlVec
 *
gëCñls
();

87 
size_t
 
gëNCñl
() const;

88 
Cñl
 *
gëCñl
(c⁄° 
size_t
 &
i
) const;

89 
Cñl
 *
gëCñl
(c⁄° * c⁄° 
«me
) const;

90 
boﬁ
 
addCñl
(
Cñl
 * c⁄° 
c
);

91 
CñlSë
 
gëF™out
(c⁄° 
size_t
 &
i
) const;

92 
CñlSë
 
gëF™out
(c⁄° * c⁄° 
«me
) const;

93 
CñlSë
 
gëF™ö
(c⁄° 
size_t
 &
i
) const;

94 
CñlSë
 
gëF™ö
(c⁄° * c⁄° 
«me
) const;

97 
size_t
 
gëNNë
() const;

98 
Në
 *
gëNë
(c⁄° 
size_t
 &
i
) const;

99 
Në
 *
gëNë
(c⁄° * c⁄° 
«me
) const;

100 
boﬁ
 
addNë
(
Në
 * c⁄° 
n
);

101 
boﬁ
 
ªmoveNë
(c⁄° 
size_t
 &
i
);

102 
boﬁ
 
ªmoveNë
(c⁄° * c⁄° 
«me
);

103 
NëSë
 
gëEqvNës
(c⁄° 
size_t
 &
i
) const;

104 
NëSë
 
gëEqvNës
(c⁄° * c⁄° 
«me
) const;

105 
P‹tSë
 
gëNëP‹ts
(c⁄° 
size_t
 &
i
) const;

106 
P‹tSë
 
gëNëP‹ts
(c⁄° * c⁄° 
«me
) const;

107 
CñlSë
 
gëNëCñls
(c⁄° 
size_t
 &
i
) const;

108 
CñlSë
 
gëNëCñls
(c⁄° * c⁄° 
«me
) const;

109 
CñlSë
 
gëNëCñls
(c⁄° 
size_t
 &
i
,

110 c⁄° 
boﬁ
 &
öput
) const;

111 
CñlSë
 
gëNëCñls
(c⁄° * c⁄° 
«me
,

112 c⁄° 
boﬁ
 &
öput
) const;

115 
size_t
 
gëNP‹t
() const;

116 
P‹t
 *
gëP‹t
(c⁄° 
size_t
 &
i
) const;

117 
P‹t
 *
gëP‹t
(c⁄° * c⁄° 
«me
) const;

118 
boﬁ
 
addP‹t
(
P‹t
 * c⁄° 
p
);

119 
˛órP‹ts
();

120 
CñlSë
 
gëP‹tCñls
(c⁄° 
size_t
 &
i
) const;

121 
CñlSë
 
gëP‹tCñls
(c⁄° * c⁄° 
«me
) const;

123 
	g«me_
[
NAME_LEN
];

124 
	gty≥Name_
[
NAME_LEN
];

125 
	gid_
;

126 
	glvl_
;

127 
Cñl
 *
	gt›_
;

128 
Cñl
 *
	glibc_
;

129 
boﬁ
 
	gisPmt_
;

130 
boﬁ
 
	göLib_
;

132 
	g¥Ÿe˘ed
:

133 
CñlVec
 
˚Œs_
;

134 
CñlM≠
 
	g«meToCñl_
;

135 
NëVec
 
	g√ts_
;

136 
NëM≠
 
	g«meToNë_
;

137 
P‹tVec
 
	gp‹ts_
;

138 
P‹tM≠
 
	g«meToP‹t_
;

144 
ölöe
 
	gP‹t
::
	$P‹t
(c⁄° * c⁄° 
«me
) {

145 
	`°r˝y
(
«me_
, 
«me
);

146 
id_
 = -1;

147 
ty≥_
 = 
NA
;

148 
t›_
 = 
NULL
;

149 
öNë_
 = 
NULL
;

150 
exNë_
 = 
NULL
;

151 
	}
}

153 
ölöe
 
	gP‹t
::~
	$P‹t
(Ë{
	}
}

156 
ölöe
 
Në
::
	$Në
(c⁄° * c⁄° 
«me
) {

157 
	`°r˝y
(
«me_
, 
«me
);

158 
id_
 = -1;

159 
t›_
 = 
NULL
;

160 
	}
}

162 
ölöe
 
	gNë
::~
	$Në
(Ë{
	}
}

164 
ölöe
 
size_t
 
Në
::
	$gëNP‹t
() const {

165  
p‹ts_
.
	`size
();

166 
	}
}

168 
ölöe
 
P‹t
 *
	gNë
::
	$gëP‹t
(c⁄° 
size_t
 &
i
) const {

169  
i
 < 
p‹ts_
.
	`size
(Ë?Ö‹ts_[i] : 
NULL
;

170 
	}
}

172 
ölöe
 
boﬁ
 
	gNë
::
	$addP‹t
(
P‹t
 * c⁄° 
p
) {

173 
size_t
 
i
 = 0; i < 
p‹ts_
.
	`size
(); ++i)

174 i‡(
p
 =
p‹ts_
[
i
])

175  
Ál£
;

176 
p‹ts_
.
	`push_back
(
p
);

177  
åue
;

178 
	}
}

180 
ölöe
 
boﬁ
 
	gNë
::
	$ªmoveP‹t
(c⁄° 
size_t
 &
i
) {

181 i‡(
i
 >
p‹ts_
.
	`size
())

182  
Ál£
;

183 
p‹ts_
.
	`îa£
’‹ts_.
	`begö
(Ë+ 
i
);

184  
åue
;

185 
	}
}

187 
ölöe
 
boﬁ
 
	gNë
::
	$ªmoveP‹t
(
P‹t
 * c⁄° 
p
) {

188 
size_t
 
i
 = 0; i < 
p‹ts_
.
	`size
(); ++i) {

189 i‡(
p
 =
p‹ts_
[
i
]) {

190 
p‹ts_
.
	`îa£
’‹ts_.
	`begö
(Ë+ 
i
);

191  
åue
;

194  
Ál£
;

195 
	}
}

197 
ölöe
 
	gNë
::
	$˛órP‹ts
() {

198 
p‹ts_
.
	`˛ór
();

199 
	}
}

201 
ölöe
 
size_t
 
	gNë
::
	$gëNEqv
() const {

202  
eqvs_
.
	`size
();

203 
	}
}

205 
ölöe
 
Në
 *
	gNë
::
	$gëEqv
(c⁄° 
size_t
 &
i
) const {

206  
i
 < 
eqvs_
.
	`size
(Ë?Éqvs_[i] : 
NULL
;

207 
	}
}

209 
ölöe
 
boﬁ
 
	gNë
::
	$isEqv
(
Në
 * c⁄° 
n
) const {

210 
size_t
 
i
 = 0; i < 
eqvs_
.
	`size
(); ++i)

211 i‡(
eqvs_
[
i
] =
this
)

212  
åue
;

213  
Ál£
;

214 
	}
}

216 
ölöe
 
boﬁ
 
	gNë
::
	$addEqv
(
Në
 * c⁄° 
n
) {

217 
size_t
 
i
 = 0; i < 
eqvs_
.
	`size
(); ++i)

218 i‡(
n
 =
eqvs_
[
i
])

219  
Ál£
;

220 
eqvs_
.
	`push_back
(
n
);

221  
åue
;

222 
	}
}

225 
ölöe
 
	gCñl
::
	$Cñl
(c⁄° * c⁄° 
«me
) {

226 
	`°r˝y
(
«me_
, 
«me
);

227 
ty≥Name_
[0] = '\0';

228 
id_
 = -1;

229 
lvl_
 = -1;

230 
t›_
 = 
NULL
;

231 
libc_
 = 
NULL
;

232 
isPmt_
 = 
Ál£
;

233 
öLib_
 = 
åue
;

234 
	}
}

236 
ölöe
 
	gCñl
::~
	$Cñl
(Ë{
	}
}

238 
ölöe
 
CñlVec
 *
Cñl
::
	$gëCñls
() {

239  &
˚Œs_
;

240 
	}
}

242 
ölöe
 
size_t
 
	gCñl
::
	$gëNCñl
() const {

243  
˚Œs_
.
	`size
();

244 
	}
}

246 
ölöe
 
Cñl
 *
	gCñl
::
	$gëCñl
(c⁄° * c⁄° 
«me
) const {

247 
CñlM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToCñl_
.
	`föd
(
«me
);

248  
ô
 =
«meToCñl_
.
	`íd
(Ë? 
NULL
 : it->
£c⁄d
;

249 
	}
}

251 
ölöe
 
Cñl
 *
	gCñl
::
	$gëCñl
(c⁄° 
size_t
 &
i
) const {

252  
i
 < 
˚Œs_
.
	`size
(Ë? cñls_[i] : 
NULL
;

253 
	}
}

255 
ölöe
 
boﬁ
 
	gCñl
::
	$addCñl
(
Cñl
 * c⁄° 
c
) {

256 
CñlM≠
::
ôî©‹
 
ô
 = 
«meToCñl_
.
	`föd
(
c
->
«me_
);

257 i‡(
ô
 !
«meToCñl_
.
	`íd
())

258  
Ál£
;

259 
˚Œs_
.
	`push_back
(
c
);

260 
«meToCñl_
[
c
->
«me_
] = c;

261 
c
->
id_
 = 
˚Œs_
.
	`size
() - 1;

262 
c
->
t›_
 = 
this
;

263  
åue
;

264 
	}
}

266 
ölöe
 
size_t
 
	gCñl
::
	$gëNNë
() const {

267  
√ts_
.
	`size
();

268 
	}
}

270 
ölöe
 
Në
 *
	gCñl
::
	$gëNë
(c⁄° 
size_t
 &
i
) const {

271  
i
 < 
√ts_
.
	`size
(Ë?Çës_[i] : 
NULL
;

272 
	}
}

274 
ölöe
 
Në
 *
	gCñl
::
	$gëNë
(c⁄° * c⁄° 
«me
) const {

275 
NëM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToNë_
.
	`föd
(
«me
);

276  
ô
 =
«meToNë_
.
	`íd
(Ë? 
NULL
 : it->
£c⁄d
;

277 
	}
}

279 
ölöe
 
boﬁ
 
	gCñl
::
	$addNë
(
Në
 * c⁄° 
n
) {

280 
NëM≠
::
ôî©‹
 
ô
 = 
«meToNë_
.
	`föd
(
n
->
«me_
);

281 i‡(
ô
 !
«meToNë_
.
	`íd
())

282  
Ál£
;

283 
√ts_
.
	`push_back
(
n
);

284 
«meToNë_
[
n
->
«me_
] =Ç;

285 
n
->
id_
 = 
√ts_
.
	`size
() - 1;

286 
n
->
t›_
 = 
this
;

287  
åue
;

288 
	}
}

290 
ölöe
 
boﬁ
 
	gCñl
::
	$ªmoveNë
(c⁄° 
size_t
 &
i
) {

291 i‡(
i
 >
√ts_
.
	`size
())

292  
Ál£
;

293 
«meToNë_
.
	`îa£
(
√ts_
[
i
]->
«me_
);

294 
√ts_
.
	`îa£
“ës_.
	`begö
(Ë+ 
i
);

295 
size_t
 
idx
 = 
i
; idx < 
√ts_
.
	`size
(); ++idx)

296 
√ts_
[
idx
]->
id_
--;

297  
åue
;

298 
	}
}

300 
ölöe
 
boﬁ
 
	gCñl
::
	$ªmoveNë
(c⁄° * c⁄° 
«me
) {

301 
°d
::
m≠
<
NameKey
, 
Në
 *>::
ôî©‹
 
ô
 = 
«meToNë_
.
	`föd
(
«me
);

302 i‡(
ô
 =
«meToNë_
.
	`íd
())

303  
Ál£
;

304  
	`ªmoveNë
(
ô
->
£c⁄d
->
id_
);

305 
	}
}

307 
ölöe
 
size_t
 
	gCñl
::
	$gëNP‹t
() const {

308  
p‹ts_
.
	`size
();

309 
	}
}

311 
ölöe
 
P‹t
 *
	gCñl
::
	$gëP‹t
(c⁄° 
size_t
 &
i
) const {

312  
i
 < 
p‹ts_
.
	`size
(Ë?Ö‹ts_[i] : 
NULL
;

313 
	}
}

315 
ölöe
 
P‹t
 *
	gCñl
::
	$gëP‹t
(c⁄° * c⁄° 
«me
) const {

316 
P‹tM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToP‹t_
.
	`föd
(
«me
);

317  
ô
 =
«meToP‹t_
.
	`íd
(Ë? 
NULL
 : it->
£c⁄d
;

318 
	}
}

320 
ölöe
 
boﬁ
 
	gCñl
::
	$addP‹t
(
P‹t
 * c⁄° 
p
) {

321 
P‹tM≠
::
ôî©‹
 
ô
 = 
«meToP‹t_
.
	`föd
(
p
->
«me_
);

322 i‡(
ô
 !
«meToP‹t_
.
	`íd
())

323  
Ál£
;

324 
p‹ts_
.
	`push_back
(
p
);

325 
«meToP‹t_
[
p
->
«me_
] =Ö;

326 
p
->
id_
 = 
p‹ts_
.
	`size
() - 1;

327 
p
->
t›_
 = 
this
;

328  
åue
;

329 
	}
}

331 
ölöe
 
	gCñl
::
	$˛órP‹ts
() {

332 
p‹ts_
.
	`˛ór
();

333 
«meToP‹t_
.
	`˛ór
();

334 
	}
}

338 
ölöe
 
boﬁ
 
	$cmpCñlLvl
(c⁄° 
Cñl
 * c⁄° 
i
, c⁄° Cñ»* c⁄° 
j
) {

339  
i
->
lvl_
 < 
j
->lvl_;

340 
	}
}

	@interface/src/global.h

8 #i‚de‡
_INTF_GLOBAL_H_


9 
	#_INTF_GLOBAL_H_


	)

11 
	~<c°rög
>

13 
«me•a˚
 
	gI¡fNs
 {

15 c⁄° 
	gNAME_LEN
 = 256;

17 
	sNameKey
 {

18 
NameKey
(c⁄° NameKey &
key
);

19 
NameKey
(c⁄° * c⁄° 
vÆ
);

20 
boﬁ
 
	g›î©‹
<(c⁄° 
	gNameKey
 &
	gkey
) const;

21 
	gvÆ_
[
NAME_LEN
];

24 
ölöe
 
	gNameKey
::
NameKey
(c⁄° NameKey &
key
) {

25 
°d
::
memmove
(
vÆ_
, 
key
.vÆ_, 
NAME_LEN
);

28 
ölöe
 
	gNameKey
::
NameKey
(c⁄° * c⁄° 
vÆ
) {

29 
°d
::
mem£t
(
vÆ_
, '\0', 
NAME_LEN
);

30 i‡(
	gvÆ
)

31 
°∫˝y
(
vÆ_
, 
vÆ
, 
NAME_LEN
 - 1);

34 
ölöe
 
boﬁ
 
	gNameKey
::
›î©‹
<(c⁄° 
NameKey
 &
key
) const {

35  
°rcmp
(
vÆ_
, 
key
.val_) < 0;

	@interface/src/lht_pat_file.cpp

8 
	~<c°dio
>

10 
	~"lht_∑t_fûe.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
boﬁ
 
	gLhtP©Fûe
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

16 
	`lht_∑t_fûï¨£
(*);

17 
FILE
 *
lht_∑t_fûeö
;

19 
vîbo£_
 = 
vîbo£
;

20 
lht_∑t_fûeö
 = 
	`f›í
(
‚ame
, "r");

21 i‡(!
lht_∑t_fûeö
) {

22 
	`Ârötf
(
°dîr
, "**ERROR LhtPatFile::read(): cannot openÖattern ");

23 
	`Ârötf
(
°dîr
, "fûê`%s'\n", 
‚ame
);

24  
Ál£
;

27 
suc˚ss_
 = 
åue
;

28 
ªs
 = 
	`lht_∑t_fûï¨£
(
this
);

29 i‡(
ªs
 != 0) {

30 
	`Ârötf
(
°dîr
, "**ERROR LhtPatFile::read(): wrong input format\n");

31  
Ál£
;

33 
	`f˛o£
(
lht_∑t_fûeö
);

35  
suc˚ss_
;

36 
	}
}

38 
	gLhtP©Fûe
::
	$£tP©ã∫Ty≥
(c⁄° 
P©Ty≥
 &
ty≥
) {

39 i‡(
vîbo£_
) {

40 
	`¥ötf
("setÖatternÅype: ");

41 
ty≥
) {

42 
BASIC_SCAN
:

43 
	`¥ötf
("BASIC_SCAN\n");

45 
LAUNCH_CAPTURE
:

46 
	`¥ötf
("LAUNCH_CAPTURE\n");

48 
LAUNCH_SHIFT
:

49 
	`¥ötf
("LAUNCH_SHIFT\n");

53 
	}
}

55 
	gLhtP©Fûe
::
	$addP©ã∫
(c⁄° * c⁄° 
pi1
, c⁄° * c⁄° 
pi2
,

56 c⁄° * c⁄° 
µi
, c⁄° * c⁄° 
si
,

57 c⁄° * c⁄° 
po1
, c⁄° * c⁄° 
po2
,

58 c⁄° * c⁄° 
µo
) {

59 i‡(
vîbo£_
) {

60 c⁄° *
˝i1
 = 
pi1
 ?Öi1 : "\0";

61 c⁄° *
˝i2
 = 
pi2
 ?Öi2 : "\0";

62 c⁄° *
˝pi
 = 
µi
 ?Öpi : "\0";

63 c⁄° *
csi
 = 
si
 ? si : "\0";

64 c⁄° *
˝o1
 = 
po1
 ?Öo1 : "\0";

65 c⁄° *
˝o2
 = 
po2
 ?Öo2 : "\0";

66 c⁄° *
˝po
 = 
µo
 ?Öpo : "\0";

67 
	`¥ötf
("addÖ©ã∫: %†| %†| %†| %†| ", 
˝i1
, 
˝i2
, 
˝pi
, 
csi
);

68 
	`¥ötf
("%†| %†| %s\n", 
˝o1
, 
˝o2
, 
˝po
);

70 
	}
}

	@interface/src/lht_pat_file.h

8 #i‚de‡
_INTF_LHT_PAT_FILE_H_


9 
	#_INTF_LHT_PAT_FILE_H_


	)

11 
	~"∑t_fûe.h
"

13 
«me•a˚
 
	gI¡fNs
 {

15 ˛as†
	cLhtP©Fûe
 {

16 
	gpublic
:

17 
LhtP©Fûe
();

18 
	gvútuÆ
 ~
LhtP©Fûe
();

20 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

21 
vútuÆ
 
£tP©ã∫Ty≥
(c⁄° 
P©Ty≥
 &
ty≥
);

22 
vútuÆ
 
addP©ã∫
(c⁄° * c⁄° 
pi1
, c⁄° * c⁄° 
pi2
,

23 c⁄° * c⁄° 
µi
, c⁄° * c⁄° 
si
,

24 c⁄° * c⁄° 
po1
, c⁄° * c⁄° 
po2
,

25 c⁄° * c⁄° 
µo
);

27 
	g¥Ÿe˘ed
:

28 
boﬁ
 
suc˚ss_
;

29 
boﬁ
 
	gvîbo£_
;

32 
ölöe
 
	gLhtP©Fûe
::
	$LhtP©Fûe
() {

33 
suc˚ss_
 = 
åue
;

34 
vîbo£_
 = 
Ál£
;

35 
	}
}

36 
ölöe
 
	gLhtP©Fûe
::~
	$LhtP©Fûe
(Ë{
	}
}

	@interface/src/lht_pat_test.cpp

9 
	~<c°dio
>

10 
	~<c°dlib
>

12 
	~"lht_∑t_fûe.h
"

14 
usög
 
«me•a˚
 
	g°d
;

15 
usög
 
«me•a˚
 
	gI¡fNs
;

18 
	$maö
(
¨gc
, **
¨gv
) {

19 i‡(
¨gc
 < 2) {

20 
	`Ârötf
(
°dîr
, "**ERROR main():ÖleaseÖrovide inputÖattern\n");

21 
	`exô
(0);

24 
LhtP©Fûe
 *
∑t
 = 
√w
 LhtPatFile;

25 i‡(!
∑t
->
	`ªad
(
¨gv
[1], 
åue
)) {

26 
	`Ârötf
(
°dîr
, "**ERROR main():ÖatternÖarser failed\n");

27 
	`exô
(0);

30 
dñëe
 
∑t
;

33 
	}
}

	@interface/src/mdt_file.cpp

8 
	~<c°dio
>

10 
	~"mdt_fûe.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
boﬁ
 
	gMdtFûe
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

16 
	`mdt_fûï¨£
(*);

17 
mdt_fûew¨nög
;

18 
FILE
 *
mdt_fûeö
;

20 
vîbo£_
 = 
vîbo£
;

22 i‡(
vîbo£_
)

23 
mdt_fûew¨nög
 = 1;

25 
mdt_fûew¨nög
 = 0;

27 
mdt_fûeö
 = 
	`f›í
(
‚ame
, "r");

28 i‡(!
mdt_fûeö
) {

29 
	`Ârötf
(
°dîr
, "**ERROR MdtFile::read(): cannot openÇetlist file");

30 
	`Ârötf
(
°dîr
, "`%s'\n", 
‚ame
);

31  
Ál£
;

34 
suc˚ss_
 = 
åue
;

35 
ªs
 = 
	`mdt_fûï¨£
(
this
);

36 i‡(
ªs
 != 0) {

37 
	`Ârötf
(
°dîr
, "**ERROR MdtFile::read(): wrong input format\n");

38  
Ál£
;

40 
	`f˛o£
(
mdt_fûeö
);

42  
suc˚ss_
;

43 
	}
}

46 
	gMdtFûe
::
	$addModñ
(c⁄° * c⁄° 
«me
) {

47 i‡(
vîbo£_
)

48 
	`¥ötf
("add modñ: %s\n", 
«me
);

49 
	}
}

51 
	gMdtFûe
::
	$addP‹ts
(
MdtNames
 * c⁄° 
p‹ts
) {

52 i‡(
vîbo£_
) {

53 
	`¥ötf
("addÖorts: ");

54 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

55 
p‹t
) {

56 
	`¥ötf
("%s", 
p‹t
->
«me
);

57 
p‹t
 =Ö‹t->
√xt
;

58 i‡(
p‹t
)

59 
	`¥ötf
(", ");

62 
	`¥ötf
("\n");

64 
	}
}

66 
	gMdtFûe
::
	$£tI≈utNës
(
MdtNames
 * c⁄° 
√ts
) {

67 i‡(
vîbo£_
) {

68 
	`¥ötf
("set inputÇets: ");

69 
MdtNames
 *
√t
 = 
√ts
->
hód
;

70 
√t
) {

71 
	`¥ötf
("%s", 
√t
->
«me
);

72 
√t
 =Çë->
√xt
;

73 i‡(
√t
)

74 
	`¥ötf
(", ");

76 
	`¥ötf
("\n");

78 
	}
}

80 
	gMdtFûe
::
	$£tOuçutNës
(
MdtNames
 * c⁄° 
√ts
) {

81 i‡(
vîbo£_
) {

82 
	`¥ötf
("set outputÇets: ");

83 
MdtNames
 *
√t
 = 
√ts
->
hód
;

84 
√t
) {

85 
	`¥ötf
("%s", 
√t
->
«me
);

86 
√t
 =Çë->
√xt
;

87 i‡(
√t
)

88 
	`¥ötf
(", ");

90 
	`¥ötf
("\n");

92 
	}
}

94 
	gMdtFûe
::
	$£tInoutNës
(
MdtNames
 * c⁄° 
√ts
) {

95 i‡(
vîbo£_
) {

96 
	`¥ötf
("set inoutÇets: ");

97 
MdtNames
 *
√t
 = 
√ts
->
hód
;

98 
√t
) {

99 
	`¥ötf
("%s", 
√t
->
«me
);

100 
√t
 =Çë->
√xt
;

101 i‡(
√t
)

102 
	`¥ötf
(", ");

104 
	`¥ötf
("\n");

106 
	}
}

108 
	gMdtFûe
::
	$£tI¡înNës
(
MdtNames
 * c⁄° 
√ts
) {

109 i‡(
vîbo£_
) {

110 
	`¥ötf
("set internÇets: ");

111 
MdtNames
 *
√t
 = 
√ts
->
hód
;

112 
√t
) {

113 
	`¥ötf
("%s", 
√t
->
«me
);

114 
√t
 =Çë->
√xt
;

115 i‡(
√t
)

116 
	`¥ötf
(", ");

118 
	`¥ötf
("\n");

120 
	}
}

122 
	gMdtFûe
::
	$addPrimôive
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

123 
MdtNames
 * c⁄° 
p‹ts
) {

124 i‡(
vîbo£_
) {

125 
	`¥ötf
("addÖrimôive: %†%†(", 
ty≥
, 
«me
);

126 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

127 
p‹t
) {

128 
	`¥ötf
("%s", 
p‹t
->
«me
);

129 
p‹t
 =Ö‹t->
√xt
;

130 i‡(
p‹t
)

131 
	`¥ötf
(", ");

133 
	`¥ötf
(")\n");

135 
	}
}

137 
	gMdtFûe
::
	$addIn°™˚
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

138 
MdtNames
 * c⁄° 
p‹ts
) {

139 i‡(
vîbo£_
) {

140 
	`¥ötf
("add in°™˚: %†%†(", 
ty≥
, 
«me
);

141 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

142 
p‹t
) {

143 
	`¥ötf
("%s", 
p‹t
->
«me
);

144 
p‹t
 =Ö‹t->
√xt
;

145 i‡(
p‹t
)

146 
	`¥ötf
(", ");

148 
	`¥ötf
(")\n");

150 
	}
}

152 
	gMdtFûe
::
	$addIn°™˚
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

153 
MdtP‹tToNë
 * c⁄° 
p‹tToNë
) {

154 i‡(
vîbo£_
) {

155 
	`¥ötf
("add in°™˚: %†%†(", 
ty≥
, 
«me
);

156 
MdtP‹tToNë
 *
p2n
 = 
p‹tToNë
->
hód
;

157 
p2n
) {

158 
	`¥ötf
(".%s(%s)", 
p2n
->
p‹t
,Ö2n->
√t
);

159 
p2n
 =Ö2n->
√xt
;

160 i‡(
p2n
)

161 
	`¥ötf
(", ");

163 
	`¥ötf
(")\n");

165 
	}
}

	@interface/src/mdt_file.h

8 #i‚de‡
_INTF_MDT_FILE_H_


9 
	#_INTF_MDT_FILE_H_


	)

11 
	~"globÆ.h
"

13 
«me•a˚
 
	gI¡fNs
 {

15 
	eMdtP‹tTy≥
 { 
	gMDT_PORT_INPUT
, 
	gMDT_PORT_OUTPUT
, 
	gMDT_PORT_INOUT
,

16 
	gMDT_PORT_INTERN
 };

18 
	sMdtNames
 {

19 
	g«me
[
NAME_LEN
];

20 
MdtNames
 *
	g√xt
;

21 
MdtNames
 *
	ghód
;

24 
	sMdtP‹tToNë
 {

25 
	gp‹t
[
NAME_LEN
];

26 
	g√t
[
NAME_LEN
];

27 
MdtP‹tToNë
 *
	g√xt
;

28 
MdtP‹tToNë
 *
	ghód
;

31 ˛as†
	cMdtFûe
 {

32 
	gpublic
:

33 
MdtFûe
();

34 
	gvútuÆ
 ~
MdtFûe
();

36 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

38 
vútuÆ
 
addModñ
(c⁄° * c⁄° 
«me
);

39 
vútuÆ
 
addP‹ts
(
MdtNames
 * c⁄° 
p‹ts
);

40 
vútuÆ
 
£tI≈utNës
(
MdtNames
 * c⁄° 
√ts
);

41 
vútuÆ
 
£tOuçutNës
(
MdtNames
 * c⁄° 
√ts
);

42 
vútuÆ
 
£tInoutNës
(
MdtNames
 * c⁄° 
√ts
);

43 
vútuÆ
 
£tI¡înNës
(
MdtNames
 * c⁄° 
√ts
);

44 
vútuÆ
 
addPrimôive
(c⁄° * c⁄° 
ty≥
,

45 c⁄° * c⁄° 
«me
,

46 
MdtNames
 * c⁄° 
p‹ts
);

47 
vútuÆ
 
addIn°™˚
(c⁄° * c⁄° 
ty≥
,

48 c⁄° * c⁄° 
«me
,

49 
MdtNames
 * c⁄° 
p‹ts
);

50 
vútuÆ
 
addIn°™˚
(c⁄° * c⁄° 
ty≥
,

51 c⁄° * c⁄° 
«me
,

52 
MdtP‹tToNë
 * c⁄° 
p‹tToNë
);

54 
	g¥Ÿe˘ed
:

55 
boﬁ
 
suc˚ss_
;

56 
boﬁ
 
	gvîbo£_
;

59 
ölöe
 
	gMdtFûe
::
	$MdtFûe
() {

60 
suc˚ss_
 = 
åue
;

61 
vîbo£_
 = 
Ál£
;

62 
	}
}

63 
ölöe
 
	gMdtFûe
::~
	$MdtFûe
(Ë{
	}
}

	@interface/src/mdt_test.cpp

8 
	~<c°dlib
>

9 
	~<io°ªam
>

11 
	~"mdt_fûe.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
	$maö
(
¨gc
, **
¨gv
) {

18 
mdt_fûew¨nög
;

19 
mdt_fûew¨nög
 = 1;

20 i‡(
¨gc
 < 2) {

21 
˚º
 << "**ERROR maö():ÖÀa£Örovidêmít‹ mdàlib" << 
ídl
;

22 
	`exô
(0);

25 
MdtFûe
 *
mdt
 = 
√w
 MdtFile;

26 i‡(!
mdt
->
	`ªad
(
¨gv
[1], 
åue
)) {

27 
˚º
 << "**ERROR maö(): mdàlibÖ¨£ faûed" << 
ídl
;

28 
	`exô
(0);

31 
dñëe
 
mdt
;

34 
	}
}

	@interface/src/netlist.cpp

8 
	~<Æg‹ôhm
>

10 
	~"√éi°.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
boﬁ
 
	gNëli°
::
	$check
(c⁄° 
boﬁ
 &
vîbo£
) const {

18 i‡(!
t›_
) {

19 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Åop moduleÇot set\n");

20  
Ál£
;

23 
boﬁ
 
ªs
 = 
åue
;

25 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNP‹t
(); ++i) {

26 
P‹t
 *
p
 = 
t›_
->
	`gëP‹t
(
i
);

27 i‡(
p
->
ty≥_
 =
P‹t
::
NA
) {

28 i‡(
vîbo£
) {

29 
	`Ârötf
(
°dîr
, "**WARN Netlist::check(): ");

30 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
t›_
->
«me_
, 
p
->name_);

31 
	`Ârötf
(
°dîr
, "hasÇoÅype\n");

34 i‡(
p
->
t›_
 !=Åop_) {

35 
ªs
 = 
Ál£
;

36 i‡(
vîbo£
) {

37 i‡(!
p
->
t›_
) {

38 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): ");

39 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
t›_
->
«me_
, 
p
->name_);

40 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

43 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): ");

44 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
t›_
->
«me_
, 
p
->name_);

45 
	`Ârötf
(
°dîr
, "has invalicÅop cell ");

46 
	`Ârötf
(
°dîr
, "`%s'\n", 
p
->
t›_
->
«me_
);

50 
Në
 *
n
 = 
p
->
öNë_
;

51 i‡(!
n
) {

52 i‡(
vîbo£
) {

53 
	`Ârötf
(
°dîr
, "**WARN Netlist::check(): ");

54 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
t›_
->
«me_
, 
p
->name_);

55 
	`Ârötf
(
°dîr
, "unconnected\n");

58 i‡(!
t›_
->
	`gëNë
(
n
->
«me_
)) {

59 
ªs
 = 
Ál£
;

60 i‡(
vîbo£
) {

61 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): ");

62 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
t›_
->
«me_
, 
p
->name_);

63 
	`Ârötf
(
°dîr
, "c⁄√˘edÅÿövÆidÇë `%s'\n", 
n
->
«me_
);

68 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNNë
(); ++i) {

69 
Në
 *
n
 = 
t›_
->
	`gëNë
(
i
);

70 i‡(
n
->
	`gëNP‹t
() == 0) {

71 
ªs
 = 
Ál£
;

72 i‡(
vîbo£
) {

73 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

74 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

75 
	`Ârötf
(
°dîr
, "is unconnected\n");

78 i‡(
n
->
	`gëNP‹t
(Ë=1 &&Ç->
	`gëNEqv
() == 0) {

79 i‡(
vîbo£
) {

80 
	`Ârötf
(
°dîr
, "**WARN Netlist::check():Çet ");

81 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

82 
	`Ârötf
(
°dîr
, "is floating\n");

85 i‡(
n
->
t›_
 !=Åop_) {

86 
ªs
 = 
Ál£
;

87 i‡(
vîbo£
) {

88 i‡(!
n
->
t›_
) {

89 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

90 
	`Ârötf
(
°dîr
, "`%s/%s' ",
t›_
->
«me_
, 
n
->name_);

91 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

94 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

95 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

96 
	`Ârötf
(
°dîr
, "has invalidÅop cell ");

97 
	`Ârötf
(
°dîr
, "`%s'\n", 
n
->
t›_
->
«me_
);

101 
boﬁ
 
hasIn
 = 
Ál£
;

102 
boﬁ
 
hasOut
 = 
Ál£
;

103 
NëSë
 
eqvs
 = 
n
->
t›_
->
	`gëEqvNës
“->
id_
);

104 
NëSë
::
ôî©‹
 
ô
 = 
eqvs
.
	`begö
();

105  ; 
ô
 !
eqvs
.
	`íd
(); ++it) {

106 
Në
 *
eqv
 = (*
ô
);

107 
size_t
 
k
 = 0; k < 
eqv
->
	`gëNP‹t
(); ++k) {

108 
P‹t
 *
p
 = 
eqv
->
	`gëP‹t
(
k
);

109 i‡((
p
->
t›_
 !t›_ &&Ö->
ty≥_
 =
P‹t
::
OUTPUT
)

110 || (
p
->
t›_
 =t›_ &&Ö->
ty≥_
 =
P‹t
::
INPUT
))

111 
hasIn
 = 
åue
;

112 i‡((
p
->
t›_
 !t›_ &&Ö->
ty≥_
 =
P‹t
::
INPUT
)

113 || (
p
->
t›_
 =t›_ &&Ö->
ty≥_
 =
P‹t
::
OUTPUT
))

114 
hasOut
 = 
åue
;

115 i‡((
p
->
t›_
 !
eqv
->t›_ &&Ö->
exNë_
 !=Éqv)

116 || (
p
->
t›_
 =
eqv
->t›_ &&Ö->
öNë_
 !=Éqv)) {

117 
ªs
 = 
Ál£
;

118 i‡(
vîbo£
) {

119 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

120 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

121 
	`Ârötf
(
°dîr
, "not connectedÅoÖort ");

122 
	`Ârötf
(
°dîr
, "`%s/%s'\n", 
t›_
->
«me_
, 
p
->name_);

127 i‡(!
hasIn
) {

128 
ªs
 = 
Ál£
;

129 i‡(
vîbo£
) {

130 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

131 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

132 
	`Ârötf
(
°dîr
, "hasÇo driver\n");

135 i‡(!
hasOut
) {

136 
ªs
 = 
Ál£
;

137 i‡(
vîbo£
) {

138 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check():Çet ");

139 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
n
->name_);

140 
	`Ârötf
(
°dîr
, "drivesÇo cell\n");

145 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNCñl
(); ++i) {

146 
Cñl
 *
c
 = 
t›_
->
	`gëCñl
(
i
);

147 i‡(!
c
->
libc_
 && 
vîbo£
) {

148 
	`Ârötf
(
°dîr
, "**WARN Netlist::check(): cell ");

149 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

150 
	`Ârötf
(
°dîr
, "isÅreatedás blackbox\n");

152 i‡(
c
->
libc_
) {

153 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TSL
)

154 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TSLI
)

155 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TSH
)

156 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TSHI
)) {

157 
ªs
 = 
Ál£
;

158 i‡(
vîbo£
) {

159 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

160 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

161 
	`Ârötf
(
°dîr
, "containsÅristateÖrimitives\n");

164 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
DELAY
)) {

165 
ªs
 = 
Ál£
;

166 i‡(
vîbo£
) {

167 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

168 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

169 
	`Ârötf
(
°dîr
, "contains delayÖrimitives\n");

172 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
WIRE
)) {

173 
ªs
 = 
Ál£
;

174 i‡(
vîbo£
) {

175 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

176 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

177 
	`Ârötf
(
°dîr
, "contains wireÖrimitives\n");

180 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
PULL
)) {

181 
ªs
 = 
Ál£
;

182 i‡(
vîbo£
) {

183 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

184 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

185 
	`Ârötf
(
°dîr
, "containsÖullÖrimitives\n");

188 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
UNDEF
)) {

189 
ªs
 = 
Ál£
;

190 i‡(
vîbo£
) {

191 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

192 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

193 
	`Ârötf
(
°dîr
, "contains undefinedÖrimitives\n");

196 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
NMOS
)

197 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
PMOS
)

198 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
RNMOS
)

199 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
RPMOS
)

200 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
NMOSF
)

201 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
PMOSF
)

202 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
CMOS1
)

203 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
CMOS2
)

204 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
RCMOS1
)

205 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
RCMOS2
)

206 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
CMOS1F
)

207 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
CMOS2F
)) {

208 
ªs
 = 
Ál£
;

209 i‡(
vîbo£
) {

210 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

211 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

212 
	`Ârötf
(
°dîr
, "contains MOSÖrimitives\n");

215 i‡(
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TIE1
)

216 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TIE0
)

217 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TIEX
)

218 || 
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
TIEZ
)) {

219 i‡(
vîbo£
) {

220 
	`Ârötf
(
°dîr
, "**WARN Netlist::check(): cell ");

221 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

222 
	`Ârötf
(
°dîr
, "containsÅie cellÖrimitives\n");

226 i‡(
c
->
t›_
 !=Åop_) {

227 
ªs
 = 
Ál£
;

228 i‡(
vîbo£
) {

229 i‡(!
c
->
t›_
) {

230 
	`Ârötf
(
°dîr
, "**ERROR Netlist::check(): cell ");

231 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

232 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

235 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check(): cell ");

236 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
t›_
->
«me_
, 
c
->name_);

237 
	`Ârötf
(
°dîr
, "has invalidÅop cell ");

238 
	`Ârötf
(
°dîr
, "`%s'\n", 
c
->
t›_
->
«me_
);

242 
size_t
 
j
 = 0; j < 
c
->
	`gëNP‹t
(); ++j) {

243 
P‹t
 *
p
 = 
c
->
	`gëP‹t
(
j
);

244 i‡(!
p
->
exNë_
) {

245 i‡(
vîbo£
) {

246 
	`Ârötf
(
°dîr
, "**WARN Techlib::check():Öort ");

247 
	`Ârötf
(
°dîr
, "`%s/", 
t›_
->
«me_
);

248 
	`Ârötf
(
°dîr
, "%s/%s' ", 
c
->
«me_
, 
p
->name_);

249 
	`Ârötf
(
°dîr
, "unconnected\n");

252 i‡(
p
->
exNë_
->
t›_
 !=Åop_) {

253 
ªs
 = 
Ál£
;

254 i‡(
vîbo£
) {

255 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Öort ");

256 
	`Ârötf
(
°dîr
, "`%s/", 
t›_
->
«me_
);

257 
	`Ârötf
(
°dîr
, "%s/%s' ", 
c
->
«me_
, 
p
->name_);

258 
	`Ârötf
(
°dîr
, "connectedÅo invalidÇet ");

259 
	`Ârötf
(
°dîr
, "`%s'\n", 
p
->
exNë_
->
«me_
);

266  
ªs
;

267 
	}
}

271 
boﬁ
 
	gNëli°
::
	$ªmoveFlﬂtögNës
() {

272 i‡(!
t›_
) {

273 
	`Ârötf
(
°dîr
, "**ERROR Netlist::removeFloatingNets(): ");

274 
	`Ârötf
(
°dîr
, "top moduleÇot set\n");

275  
Ál£
;

278 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNNë
(); ++i) {

279 
Në
 *
n
 = 
t›_
->
	`gëNë
(
i
);

280 i‡(
n
->
	`gëNP‹t
(Ë< 2 &&Ç->
	`gëNEqv
() == 0) {

281 i‡(
n
->
	`gëNP‹t
() == 1) {

282 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(0);

283 i‡(
p
->
t›_
 ==Åop_)

284 
p
->
öNë_
 = 
NULL
;

286 
p
->
exNë_
 = 
NULL
;

288 
t›_
->
	`ªmoveNë
(
i
);

289 
dñëe
 
n
;

290 
i
--;

293  
åue
;

294 
	}
}

296 
boﬁ
 
	gNëli°
::
	$Àvñize
() {

297 i‡(!
t›_
) {

298 
	`Ârötf
(
°dîr
, "**ERROR Netlist::levelize():Åop moduleÇot set\n");

299  
Ál£
;

301 i‡(!
lib_
) {

302 
	`Ârötf
(
°dîr
, "**ERROR Netlist::levelize():ÅechnologyÜibrary ");

303 
	`Ârötf
(
°dîr
, "not set\n");

304  
Ál£
;

307 
boﬁ
 
¥o˚s£d
[
t›_
->
	`gëNCñl
()];

308 
boﬁ
 
Àvñized
[
t›_
->
	`gëNCñl
()];

309 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNCñl
(); ++i) {

310 
¥o˚s£d
[
i
] = 
Ál£
;

311 
Àvñized
[
i
] = 
Ál£
;

314 
queue
<
Cñl
 *> 
cque
;

317 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNCñl
(); ++i) {

318 
Cñl
 *
c
 = 
t›_
->
	`gëCñl
(
i
);

319 i‡(!
lib_
->
	`hasPmt
(
c
->
libc_
->
id_
, 
Pmt
::
DFF
))

321 
c
->
lvl_
 = 0;

322 
¥o˚s£d
[
i
] = 
åue
;

323 
Àvñized
[
i
] = 
åue
;

324 
CñlSë
 
˚Œs
 = 
t›_
->
	`gëF™out
(
i
);

325 
CñlSë
::
ôî©‹
 
ô
 = 
˚Œs
.
	`begö
(); ià!˚Œs.
	`íd
(); ++it) {

326 i‡(
¥o˚s£d
[(*
ô
)->
id_
]

327 || 
lib_
->
	`hasPmt
((*
ô
)->
libc_
->
id_
, 
Pmt
::
DFF
))

329 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

330 
cque
.
	`push
((*
ô
));

335 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNCñl
(); ++i) {

336 
Cñl
 *
c
 = 
t›_
->
	`gëCñl
(
i
);

337 
boﬁ
 
hasI≈ut
 = 
Ál£
;

338 
size_t
 
j
 = 0; j < 
c
->
	`gëNP‹t
(); ++j) {

339 i‡(
c
->
	`gëP‹t
(
j
)->
ty≥_
 =
P‹t
::
INPUT
) {

340 
hasI≈ut
 = 
åue
;

344 i‡(
hasI≈ut
)

346 
c
->
lvl_
 = 0;

347 
¥o˚s£d
[
i
] = 
åue
;

348 
Àvñized
[
i
] = 
åue
;

349 
CñlSë
 
˚Œs
 = 
t›_
->
	`gëF™out
(
i
);

350 
CñlSë
::
ôî©‹
 
ô
 = 
˚Œs
.
	`begö
(); ià!˚Œs.
	`íd
(); ++it) {

351 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

353 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

354 
cque
.
	`push
((*
ô
));

359 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNP‹t
(); ++i) {

360 
P‹t
 *
p
 = 
t›_
->
	`gëP‹t
(
i
);

361 i‡(
p
->
ty≥_
 !
P‹t
::
INPUT
)

363 
CñlSë
 
˚Œs
 = 
t›_
->
	`gëP‹tCñls
(
i
);

364 
CñlSë
::
ôî©‹
 
ô
 = 
˚Œs
.
	`begö
(); ià!˚Œs.
	`íd
(); ++it) {

365 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

367 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

368 
cque
.
	`push
((*
ô
));

372 !
cque
.
	`em±y
()) {

373 
Cñl
 *
c
 = 
cque
.
	`‰⁄t
();

374 
cque
.
	`p›
();

377 
maxLvl
 = 0;

378 
boﬁ
 
ªady
 = 
åue
;

379 
CñlSë
 
fis
 = 
t›_
->
	`gëF™ö
(
c
->
id_
);

380 
CñlSë
::
ôî©‹
 
ô
 = 
fis
.
	`begö
(); ià!fis.
	`íd
(); ++it) {

381 i‡(!
Àvñized
[(*
ô
)->
id_
]) {

382 
ªady
 = 
Ál£
;

385 i‡((*
ô
)->
lvl_
 > 
maxLvl
)

386 
maxLvl
 = (*
ô
)->
lvl_
;

388 i‡(!
ªady
) {

389 
cque
.
	`push
(
c
);

394 
c
->
lvl_
 = 
maxLvl
 + 1;

395 
Àvñized
[
c
->
id_
] = 
åue
;

398 
CñlSë
 
fos
 = 
t›_
->
	`gëF™out
(
c
->
id_
);

399 
CñlSë
::
ôî©‹
 
ô
 = 
fos
.
	`begö
(); ià!fos.
	`íd
(); ++it) {

400 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

402 
cque
.
	`push
((*
ô
));

403 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

408 
	`°abÀ_s‹t
(
t›_
->
	`gëCñls
()->
	`begö
(),Å›_->gëCñls()->
	`íd
(),

409 
cmpCñlLvl
);

412 
size_t
 
i
 = 0; i < 
t›_
->
	`gëNCñl
(); ++i)

413 
t›_
->
	`gëCñl
(
i
)->
id_
 = i;

415  
åue
;

416 
	}
}

	@interface/src/netlist.h

8 #i‚de‡
_INTF_NETLIST_H_


9 
	#_INTF_NETLIST_H_


	)

11 
	~"˚Œ.h
"

12 
	~"ãchlib.h
"

14 
«me•a˚
 
	gI¡fNs
 {

16 ˛as†
	cNëli°
 {

17 
	gpublic
:

19 
Nëli°
();

20 ~
Nëli°
();

23 
boﬁ
 
check
(c⁄° boﬁ &
vîbo£
 = 
Ál£
) const;

24 
boﬁ
 
£tTechlib
(
Techlib
 * c⁄° 
lib
);

25 
Techlib
 *
gëTechlib
() const;

28 
Cñl
 *
gëT›
() const;

29 
boﬁ
 
£tT›
(c⁄° 
size_t
 &
i
);

30 
boﬁ
 
£tT›
(c⁄° * c⁄° 
«me
);

33 
boﬁ
 
addModuÀ
(
Cñl
 *
m
);

34 
size_t
 
gëNModuÀ
() const;

35 
Cñl
 *
gëModuÀ
(c⁄° * c⁄° 
«me
) const;

36 
Cñl
 *
gëModuÀ
(c⁄° 
size_t
 &
i
) const;

39 
boﬁ
 
ªmoveFlﬂtögNës
();

40 
boﬁ
 
Àvñize
();

42 
	g¥iv©e
:

43 
Cñl
 *
t›_
;

44 
CñlVec
 
	gmoduÀs_
;

45 
CñlM≠
 
	g«meToModuÀ_
;

46 
Techlib
 *
	glib_
;

47 
	glvl_
;

52 
ölöe
 
	gNëli°
::
	$Nëli°
() {

53 
t›_
 = 
NULL
;

54 
lib_
 = 
NULL
;

55 
lvl_
 = -1;

56 
	}
}

58 
ölöe
 
	gNëli°
::~
	$Nëli°
() {

59 
	}
}

61 
ölöe
 
boﬁ
 
Nëli°
::
	$£tTechlib
(
Techlib
 * c⁄° 
lib
) {

62 
lib_
 = 
lib
;

63  
åue
;

64 
	}
}

66 
ölöe
 
Techlib
 *
	gNëli°
::
	$gëTechlib
() const {

67  
lib_
;

68 
	}
}

70 
ölöe
 
Cñl
 *
	gNëli°
::
	$gëT›
() const {

71  
t›_
;

72 
	}
}

74 
ölöe
 
boﬁ
 
	gNëli°
::
	$£tT›
(c⁄° * c⁄° 
«me
) {

75 
CñlM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToModuÀ_
.
	`föd
(
«me
);

76 i‡(
ô
 !
«meToModuÀ_
.
	`íd
()) {

77 
t›_
 = 
ô
->
£c⁄d
;

78 
lvl_
 = -1;

80  
ô
 !
«meToModuÀ_
.
	`íd
();

81 
	}
}

83 
ölöe
 
boﬁ
 
	gNëli°
::
	$£tT›
(c⁄° 
size_t
 &
i
) {

84 i‡(
i
 < 
moduÀs_
.
	`size
()) {

85 
t›_
 = 
moduÀs_
[
i
];

86 
lvl_
 = -1;

88  
i
 < 
moduÀs_
.
	`size
();

89 
	}
}

91 
ölöe
 
boﬁ
 
	gNëli°
::
	$addModuÀ
(
Cñl
 *
m
) {

92 
CñlM≠
::
ôî©‹
 
ô
 = 
«meToModuÀ_
.
	`föd
(
m
->
«me_
);

93 i‡(
ô
 !
«meToModuÀ_
.
	`íd
())

94  
Ál£
;

95 
moduÀs_
.
	`push_back
(
m
);

96 
«meToModuÀ_
[
m
->
«me_
] = m;

97  
åue
;

98 
	}
}

100 
ölöe
 
size_t
 
	gNëli°
::
	$gëNModuÀ
() const {

101  
moduÀs_
.
	`size
();

102 
	}
}

104 
ölöe
 
Cñl
 *
	gNëli°
::
	$gëModuÀ
(c⁄° * c⁄° 
«me
) const {

105 
CñlM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToModuÀ_
.
	`föd
(
«me
);

106  
ô
 =
«meToModuÀ_
.
	`íd
(Ë? 
NULL
 : it->
£c⁄d
;

107 
	}
}

109 
ölöe
 
Cñl
 *
	gNëli°
::
	$gëModuÀ
(c⁄° 
size_t
 &
i
) const {

110  
i
 < 
moduÀs_
.
	`size
(Ë? moduÀs_[i] : 
NULL
;

111 
	}
}

	@interface/src/netlist_builder.cpp

8 
	~<c°dio
>

10 
	~"√éi°_buûdî.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
	gVlogNlBuûdî
::
	$addModuÀ
(c⁄° * c⁄° 
«me
) {

16 i‡(!
suc˚ss_
)

18 i‡(!
∆_
->
	`gëTechlib
()) {

19 i‡(
vîbo£_
) {

20 
	`Ârötf
(
°dîr
, "**ERROR VlogNlBuilder::addModule(): ");

21 
	`Ârötf
(
°dîr
, "technologyÜibraryÇot set\n");

23 
suc˚ss_
 = 
Ál£
;

26 i‡(
∆_
->
	`gëModuÀ
(
«me
)) {

27 i‡(
vîbo£_
) {

28 
	`Ârötf
(
°dîr
, "**ERROR VlogNlBuilder::addModule(): ");

29 
	`Ârötf
(
°dîr
, "moduÀ `%s'áÃódyÉxi°s\n", 
«me
);

31 
suc˚ss_
 = 
Ál£
;

34 
curModuÀ_
 = 
√w
 
	`Cñl
(
«me
);

35 
∆_
->
	`addModuÀ
(
curModuÀ_
);

36 
∆_
->
	`£tT›
(
«me
);

37 
	}
}

39 
	gVlogNlBuûdî
::
	$addP‹ts
(
VlogNames
 * c⁄° 
p‹ts
) {

40 i‡(!
suc˚ss_
)

42 
VlogNames
 *
p‹t
 = 
p‹ts
->
hód
;

43 
p‹t
) {

44 i‡(
curModuÀ_
->
	`gëP‹t
(
p‹t
->
«me
)) {

45 i‡(
vîbo£_
) {

46 
	`Ârötf
(
°dîr
, "**ERROR VlogNlBuilder::addPorts():Öort ");

47 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curModuÀ_
->
«me_
, 
p‹t
->
«me
);

48 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

50 
suc˚ss_
 = 
Ál£
;

53 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
p‹t
->
«me
);

54 
p
->
t›_
 = 
curModuÀ_
;

55 
curModuÀ_
->
	`addP‹t
(
p
);

56 
p‹t
 =Ö‹t->
√xt
;

58 
	}
}

60 
	gVlogNlBuûdî
::
	$£tI≈utNës
(
VlogNames
 * c⁄° 
√ts
) {

61 i‡(!
suc˚ss_
)

63 i‡(!
	`addP‹tNës
(
√ts
->
hód
)) {

64 
suc˚ss_
 = 
Ál£
;

67 
VlogNames
 *
√t
 = 
√ts
->
hód
;

68 
√t
) {

69 
P‹t
 *
p
 = 
curModuÀ_
->
	`gëP‹t
(
√t
->
«me
);

70 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

71 
√t
 =Çë->
√xt
;

73 
	}
}

75 
	gVlogNlBuûdî
::
	$£tOuçutNës
(
VlogNames
 * c⁄° 
√ts
) {

76 i‡(!
suc˚ss_
)

78 i‡(!
	`addP‹tNës
(
√ts
->
hód
)) {

79 
suc˚ss_
 = 
Ál£
;

82 
VlogNames
 *
√t
 = 
√ts
->
hód
;

83 
√t
) {

84 
P‹t
 *
p
 = 
curModuÀ_
->
	`gëP‹t
(
√t
->
«me
);

85 
p
->
ty≥_
 = 
P‹t
::
OUTPUT
;

86 
√t
 =Çë->
√xt
;

88 
	}
}

90 
	gVlogNlBuûdî
::
	$£tInoutNës
(
VlogNames
 * c⁄° 
√ts
) {

91 i‡(!
suc˚ss_
)

93 i‡(!
	`addP‹tNës
(
√ts
->
hód
)) {

94 
suc˚ss_
 = 
Ál£
;

97 
VlogNames
 *
√t
 = 
√ts
->
hód
;

98 
√t
) {

99 
P‹t
 *
p
 = 
curModuÀ_
->
	`gëP‹t
(
√t
->
«me
);

100 
p
->
ty≥_
 = 
P‹t
::
INOUT
;

101 
√t
 =Çë->
√xt
;

103 
	}
}

105 
	gVlogNlBuûdî
::
	$£tWúeNës
(
VlogNames
 * c⁄° 
√ts
) {

106 i‡(!
suc˚ss_
)

108 
VlogNames
 *
√t
 = 
√ts
->
hód
;

109 
√t
) {

110 i‡(!
curModuÀ_
->
	`gëNë
(
√t
->
«me
)) {

111 
Në
 *
n
 = 
√w
 
	`Në
(
√t
->
«me
);

112 
curModuÀ_
->
	`addNë
(
n
);

114 
√t
 =Çë->
√xt
;

116 
	}
}

118 
	gVlogNlBuûdî
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

119 
VlogP‹tToNë
 * c⁄° 
p‹tToNë
) {

120 i‡(!
suc˚ss_
)

122 
˙ame
[
NAME_LEN
];

123 i‡(!
	`°rcmp
(
«me
, ""))

124 
	`•rötf
(
˙ame
, "LOO%d", ()
curModuÀ_
->
	`gëNCñl
());

126 
	`°r˝y
(
˙ame
, 
«me
);

127 i‡(
curModuÀ_
->
	`gëCñl
(
˙ame
)) {

128 i‡(
vîbo£_
) {

129 
	`Ârötf
(
°dîr
, "**ERROR VlogNlBuilder::addCell(): cell ");

130 
	`Ârötf
(
°dîr
, "`%s/%s'\n", 
curModuÀ_
->
«me_
, 
˙ame
);

132 
suc˚ss_
 = 
Ál£
;

135 
Cñl
 *
c
 = 
√w
 
	`Cñl
(
˙ame
);

136 
c
->
t›_
 = 
curModuÀ_
;

137 
	`°r˝y
(
c
->
ty≥Name_
, 
ty≥
);

138 
boﬁ
 
hasLib
 = 
∆_
->
	`gëTechlib
(Ë&&Çl_->gëTechlib()->
	`gëCñl
(
ty≥
);

139 i‡(
hasLib
) {

140 
Cñl
 *
libCñl
 = 
∆_
->
	`gëTechlib
()->
	`gëCñl
(
ty≥
);

141 
c
->
libc_
 = 
libCñl
;

142 
size_t
 
i
 = 0; i < 
libCñl
->
	`gëNP‹t
(); ++i) {

143 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
libCñl
->
	`gëP‹t
(
i
)->
«me_
);

144 
p
->
t›_
 = 
c
;

145 
p
->
ty≥_
 = 
libCñl
->
	`gëP‹t
(
i
)->type_;

146 
c
->
	`addP‹t
(
p
);

150 i‡(
vîbo£_
) {

151 
	`Ârötf
(
°dîr
, "**WARN VlogNlBuilder::addCell(): cell ");

152 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curModuÀ_
->
«me_
, 
˙ame
);

153 
	`Ârötf
(
°dîr
, "setás black box\n");

156 
VlogP‹tToNë
 *
p2n
 = 
p‹tToNë
->
hód
;

157 
p2n
) {

158 
Në
 *
n
 = 
curModuÀ_
->
	`gëNë
(
p2n
->
√t
);

159 i‡(!
n
) {

160 i‡(
vîbo£_
) {

161 
	`Ârötf
(
°dîr
, "**WARN VlogNlBuilder::addCell():Çet ");

162 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curModuÀ_
->
«me_
, 
p2n
->
√t
);

163 
	`Ârötf
(
°dîr
, "setás wire\n");

165 
n
 = 
√w
 
	`Në
(
p2n
->
√t
);

166 
n
->
t›_
 = 
curModuÀ_
;

167 
curModuÀ_
->
	`addNë
(
n
);

169 
P‹t
 *
p
;

170 i‡(
hasLib
) {

171 
p
 = 
c
->
	`gëP‹t
(
p2n
->
p‹t
);

172 i‡(!
p
) {

173 i‡(
vîbo£_
) {

174 
	`Ârötf
(
°dîr
, "**ERROR VlogNlBuilder::addCell():Öort");

175 
	`Ârötf
(
°dîr
, " `%s/ ", 
curModuÀ_
->
«me_
);

176 
	`Ârötf
(
°dîr
, "%s' ", 
p2n
->
p‹t
);

177 
	`Ârötf
(
°dîr
, "doesÇot matchÜibrary cell\n");

179 
suc˚ss_
 = 
Ál£
;

184 
p
 = 
√w
 
	`P‹t
(
p2n
->
p‹t
);

185 
p
->
t›_
 = 
c
;

186 
c
->
	`addP‹t
(
p
);

188 
p
->
exNë_
 = 
n
;

189 
n
->
	`addP‹t
(
p
);

191 
p2n
 =Ö2n->
√xt
;

194 
curModuÀ_
->
	`addCñl
(
c
);

195 
	}
}

198 
	gVlogNlBuûdî
::
	$addAssign
(c⁄° * c⁄° 
n1
, c⁄° * c⁄° 
n2
) {

199 i‡(!
suc˚ss_
)

201 
Në
 *
√t1
 = 
curModuÀ_
->
	`gëNë
(
n1
);

202 i‡(!
√t1
) {

203 i‡(
vîbo£_
) {

204 
	`Ârötf
(
°dîr
, "**WARN VlogNlBuilder::addAssign():Çet ");

205 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curModuÀ_
->
«me_
, 
n1
);

206 
	`Ârötf
(
°dîr
, "setás wire\n");

208 
√t1
 = 
√w
 
	`Në
(
n1
);

209 
√t1
->
t›_
 = 
curModuÀ_
;

210 
curModuÀ_
->
	`addNë
(
√t1
);

212 
Në
 *
√t2
 = 
curModuÀ_
->
	`gëNë
(
n2
);

213 i‡(!
√t2
) {

214 i‡(
vîbo£_
) {

215 
	`Ârötf
(
°dîr
, "**WARN VlogNlBuilder::addAssign():Çet ");

216 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curModuÀ_
->
«me_
, 
n2
);

217 
	`Ârötf
(
°dîr
, "setás wire\n");

219 
√t2
 = 
√w
 
	`Në
(
n2
);

220 
√t2
->
t›_
 = 
curModuÀ_
;

221 
curModuÀ_
->
	`addNë
(
√t2
);

223 
√t1
->
	`addEqv
(
√t2
);

224 
√t2
->
	`addEqv
(
√t1
);

225 
	}
}

227 
boﬁ
 
	gVlogNlBuûdî
::
	$addP‹tNës
(
VlogNames
 * c⁄° 
√ts
) {

228 
VlogNames
 *
√t
 = 
√ts
->
hód
;

229 
√t
) {

230 
P‹t
 *
p
 = 
curModuÀ_
->
	`gëP‹t
(
√t
->
«me
);

231 i‡(!
p
) {

232 i‡(
vîbo£_
) {

233 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPortNets():Öort");

234 
	`Ârötf
(
°dîr
, " `%s/%s' ", 
curModuÀ_
->
«me_
, 
√t
->
«me
);

235 
	`Ârötf
(
°dîr
, "doesÇotÉxist\n");

237  
Ál£
;

239 
Në
 *
n
 = 
curModuÀ_
->
	`gëNë
(
√t
->
«me
);

240 i‡(!
n
) {

241 
n
 = 
√w
 
	`Në
(
√t
->
«me
);

242 
n
->
t›_
 = 
curModuÀ_
;

243 
curModuÀ_
->
	`addNë
(
n
);

245 
n
->
	`addP‹t
(
p
);

246 
p
->
öNë_
 = 
n
;

247 
√t
 =Çë->
√xt
;

249  
åue
;

250 
	}
}

252 
	gVlogNlBuûdî
::
	$£tRegNës
(
VlogNames
 * c⁄° 
√ts
Ë{
	}
}

253 
VlogNlBuûdî
::
	$£tSuµlyLNës
(
VlogNames
 * c⁄° 
√ts
Ë{
	}
}

254 
VlogNlBuûdî
::
	$£tSuµlyHNës
(
VlogNames
 * c⁄° 
√ts
Ë{
	}
}

255 
VlogNlBuûdî
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

256 
VlogNames
 * c⁄° 
p‹ts
Ë{
	}
}

257 
	gVlogNlBuûdî
::
	$addCñl
(c⁄° * c⁄° 
ty≥
,

258 
VlogNames
 * c⁄° 
°ªngths
,

259 c⁄° * c⁄° 
«me
,

260 
VlogNames
 * c⁄° 
p‹ts
Ë{
	}
}

	@interface/src/netlist_builder.h

8 #i‚de‡
_INTF_NETLIST_BUILDER_H_


9 
	#_INTF_NETLIST_BUILDER_H_


	)

11 
	~"vlog_fûe.h
"

12 
	~"√éi°.h
"

14 
«me•a˚
 
	gI¡fNs
 {

16 ˛as†
	cVlogNlBuûdî
 : 
public
 
VlogFûe
 {

17 
public
:

18 
VlogNlBuûdî
(
Nëli°
 * c⁄° 
∆
);

19 
	gvútuÆ
 ~
VlogNlBuûdî
();

21 
vútuÆ
 
addModuÀ
(c⁄° * c⁄° 
«me
);

22 
vútuÆ
 
addP‹ts
(
VlogNames
 * c⁄° 
p‹ts
);

23 
vútuÆ
 
£tI≈utNës
(
VlogNames
 * c⁄° 
√ts
);

24 
vútuÆ
 
£tOuçutNës
(
VlogNames
 * c⁄° 
√ts
);

25 
vútuÆ
 
£tInoutNës
(
VlogNames
 * c⁄° 
√ts
);

26 
vútuÆ
 
£tWúeNës
(
VlogNames
 * c⁄° 
√ts
);

27 
vútuÆ
 
£tRegNës
(
VlogNames
 * c⁄° 
√ts
);

28 
vútuÆ
 
£tSuµlyLNës
(
VlogNames
 * c⁄° 
√ts
);

29 
vútuÆ
 
£tSuµlyHNës
(
VlogNames
 * c⁄° 
√ts
);

30 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

31 
VlogNames
 * c⁄° 
p‹ts
);

32 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

33 
VlogP‹tToNë
 * c⁄° 
p‹tToNë
);

34 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
,

35 
VlogNames
 * c⁄° 
°ªngths
,

36 c⁄° * c⁄° 
«me
,

37 
VlogNames
 * c⁄° 
p‹ts
);

38 
vútuÆ
 
addAssign
(c⁄° * c⁄° 
n1
, c⁄° * c⁄° 
n2
);

40 
	g¥Ÿe˘ed
:

41 
boﬁ
 
addP‹tNës
(
VlogNames
 * c⁄° 
√ts
);

42 
Nëli°
 *
	g∆_
;

43 
Cñl
 *
	gcurModuÀ_
;

47 
ölöe
 
	gVlogNlBuûdî
::
	$VlogNlBuûdî
(
Nëli°
 *
∆
) {

48 
∆_
 = 
∆
;

49 
curModuÀ_
 = 
NULL
;

50 
	}
}

52 
ölöe
 
	gVlogNlBuûdî
::~
	$VlogNlBuûdî
(Ë{
	}
}

	@interface/src/pat_file.cpp

8 
	~<c°dio
>

10 
	~"∑t_fûe.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
boﬁ
 
	gP©Fûe
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

16 
	`∑t_fûï¨£
(*);

17 
FILE
 *
∑t_fûeö
;

19 
vîbo£_
 = 
vîbo£
;

20 
∑t_fûeö
 = 
	`f›í
(
‚ame
, "r");

21 i‡(!
∑t_fûeö
) {

22 
	`Ârötf
(
°dîr
, "**ERROR PatFile::read(): cannot openÖattern file ");

23 
	`Ârötf
(
°dîr
, "`%s'\n", 
‚ame
);

24  
Ál£
;

27 
suc˚ss_
 = 
åue
;

28 
ªs
 = 
	`∑t_fûï¨£
(
this
);

29 i‡(
ªs
 != 0) {

30 
	`Ârötf
(
°dîr
, "**ERROR PatFile::read(): wrong input format\n");

31  
Ál£
;

33 
	`f˛o£
(
∑t_fûeö
);

35  
suc˚ss_
;

36 
	}
}

38 
	gP©Fûe
::
	$£tPiOrdî
(c⁄° 
P©Names
 * c⁄° 
pis
) {

39 i‡(
vîbo£_
) {

40 
	`¥ötf
("set PI order: ");

41 
P©Names
 *
pi
 = 
pis
->
hód
;

42 
pi
) {

43 
	`¥ötf
("%s", 
pi
->
«me
);

44 
pi
 =Öi->
√xt
;

45 i‡(
pi
)

46 
	`¥ötf
(", ");

48 
	`¥ötf
("\n");

50 
	}
}

52 
	gP©Fûe
::
	$£tPpiOrdî
(c⁄° 
P©Names
 * c⁄° 
µis
) {

53 i‡(
vîbo£_
) {

54 
	`¥ötf
("set PPI order: ");

55 
P©Names
 *
µi
 = 
µis
->
hód
;

56 
µi
) {

57 
	`¥ötf
("%s", 
µi
->
«me
);

58 
µi
 =Öpi->
√xt
;

59 i‡(
µi
)

60 
	`¥ötf
(", ");

62 
	`¥ötf
("\n");

64 
	}
}

66 
	gP©Fûe
::
	$£tPoOrdî
(c⁄° 
P©Names
 * c⁄° 
pos
) {

67 i‡(
vîbo£_
) {

68 
	`¥ötf
("set PO order: ");

69 
P©Names
 *
po
 = 
pos
->
hód
;

70 
po
) {

71 
	`¥ötf
("%s", 
po
->
«me
);

72 
po
 =Öo->
√xt
;

73 i‡(
po
)

74 
	`¥ötf
(", ");

76 
	`¥ötf
("\n");

78 
	}
}

80 
	gP©Fûe
::
	$£tP©ã∫Ty≥
(c⁄° 
P©Ty≥
 &
ty≥
) {

81 i‡(
vîbo£_
) {

82 
	`¥ötf
("setÖatternÅype: ");

83 
ty≥
) {

84 
BASIC_SCAN
:

85 
	`¥ötf
("BASIC_SCAN\n");

87 
LAUNCH_CAPTURE
:

88 
	`¥ötf
("LAUNCH_CAPTURE\n");

90 
LAUNCH_SHIFT
:

91 
	`¥ötf
("LAUNCH_SHIFT\n");

95 
	}
}

97 
	gP©Fûe
::
	$£tP©ã∫Num
(c⁄° &
num
) {

98 i‡(
vîbo£_
)

99 
	`¥ötf
("£à∑âî¿num: %d\n", 
num
);

100 
	}
}

102 
	gP©Fûe
::
	$addP©ã∫
(c⁄° * c⁄° 
pi1
, c⁄° * c⁄° 
pi2
,

103 c⁄° * c⁄° 
µi
, c⁄° * c⁄° 
si
,

104 c⁄° * c⁄° 
po1
, c⁄° * c⁄° 
po2
,

105 c⁄° * c⁄° 
µo
) {

106 i‡(
vîbo£_
) {

107 c⁄° *
˝i1
 = 
pi1
 ?Öi1 : "\0";

108 c⁄° *
˝i2
 = 
pi2
 ?Öi2 : "\0";

109 c⁄° *
˝pi
 = 
µi
 ?Öpi : "\0";

110 c⁄° *
csi
 = 
si
 ? si : "\0";

111 c⁄° *
˝o1
 = 
po1
 ?Öo1 : "\0";

112 c⁄° *
˝o2
 = 
po2
 ?Öo2 : "\0";

113 c⁄° *
˝po
 = 
µo
 ?Öpo : "\0";

114 
	`¥ötf
("addÖ©ã∫: %†| %†| %†| %†| ", 
˝i1
, 
˝i2
, 
˝pi
, 
csi
);

115 
	`¥ötf
("%†| %†| %s\n", 
˝o1
, 
˝o2
, 
˝po
);

117 
	}
}

	@interface/src/pat_file.h

8 #i‚de‡
_INTF_PAT_FILE_H_


9 
	#_INTF_PAT_FILE_H_


	)

11 
	~"globÆ.h
"

13 
«me•a˚
 
	gI¡fNs
 {

15 
	eP©Ty≥
 { 
	gBASIC_SCAN
, 
	gLAUNCH_CAPTURE
, 
	gLAUNCH_SHIFT
 };

17 
	sP©Names
 {

18 
	g«me
[
NAME_LEN
];

19 
P©Names
 *
	g√xt
;

20 
P©Names
 *
	ghód
;

23 ˛as†
	cP©Fûe
 {

24 
	gpublic
:

25 
P©Fûe
();

26 
	gvútuÆ
 ~
P©Fûe
();

28 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

29 
vútuÆ
 
£tPiOrdî
(c⁄° 
P©Names
 * c⁄° 
pis
);

30 
vútuÆ
 
£tPpiOrdî
(c⁄° 
P©Names
 * c⁄° 
µis
);

31 
vútuÆ
 
£tPoOrdî
(c⁄° 
P©Names
 * c⁄° 
pos
);

32 
vútuÆ
 
£tP©ã∫Ty≥
(c⁄° 
P©Ty≥
 &
ty≥
);

33 
vútuÆ
 
£tP©ã∫Num
(c⁄° &
num
);

34 
vútuÆ
 
addP©ã∫
(c⁄° * c⁄° 
pi1
, c⁄° * c⁄° 
pi2
,

35 c⁄° * c⁄° 
µi
, c⁄° * c⁄° 
si
,

36 c⁄° * c⁄° 
po1
, c⁄° * c⁄° 
po2
,

37 c⁄° * c⁄° 
µo
);

39 
	g¥Ÿe˘ed
:

40 
boﬁ
 
suc˚ss_
;

41 
boﬁ
 
	gvîbo£_
;

44 
ölöe
 
	gP©Fûe
::
	$P©Fûe
() {

45 
suc˚ss_
 = 
åue
;

46 
vîbo£_
 = 
Ál£
;

47 
	}
}

48 
ölöe
 
	gP©Fûe
::~
	$P©Fûe
(Ë{
	}
}

	@interface/src/pat_test.cpp

8 
	~<c°dio
>

9 
	~<c°dlib
>

11 
	~"∑t_fûe.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
	$maö
(
¨gc
, **
¨gv
) {

18 i‡(
¨gc
 < 2) {

19 
	`Ârötf
(
°dîr
, "**ERROR main():ÖleaseÖrovide inputÖattern\n");

20 
	`exô
(0);

23 
P©Fûe
 *
∑t
 = 
√w
 PatFile;

24 i‡(!
∑t
->
	`ªad
(
¨gv
[1], 
åue
)) {

25 
	`Ârötf
(
°dîr
, "**ERROR main():ÖatternÖarser failed\n");

26 
	`exô
(0);

29 
dñëe
 
∑t
;

32 
	}
}

	@interface/src/primitive.cpp

8 
	~"¥imôive.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gI¡fNs
;

	@interface/src/primitive.h

8 #i‚de‡
_INTF_PRIMITIVE_H_


9 
	#_INTF_PRIMITIVE_H_


	)

11 
	~<c°dio
>

12 
	~"˚Œ.h
"

14 
«me•a˚
 
	gI¡fNs
 {

17 ˛as†
	cPmt
 : 
public
 
Cñl
 {

18 
public
:

19 
Pmt
(c⁄° * c⁄° 
«me
);

20 ~
Pmt
();

22 
	eTy≥
 { 
	gNA
,

23 
	gAND
, 
	gNAND
, 
	gOR
, 
	gNOR
, 
	gINV
, 
	gBUF
, 
	gBUFZ
, 
	gXOR
, 
	gXNOR
,

24 
	gTSL
, 
	gTSLI
, 
	gTSH
, 
	gTSHI
,

25 
	gMUX
, 
	gDFF
, 
	gDLAT
, 
	gDELAY
, 
	gINVF
, 
	gWIRE
, 
	gPULL
,

26 
	gTIE1
, 
	gTIE0
, 
	gTIEX
, 
	gTIEZ
, 
	gUNDEF
,

27 
	gNMOS
, 
	gPMOS
, 
	gRNMOS
, 
	gRPMOS
, 
	gNMOSF
, 
	gPMOSF
,

28 
	gCMOS1
, 
	gCMOS2
, 
	gRCMOS1
, 
	gRCMOS2
, 
	gCMOS1F
, 
	gCMOS2F


31 
Ty≥
 
	gty≥_
;

35 ˛as†
	cPmtAnd
 : 
public
 
Pmt
 {

36 
public
:

37 
PmtAnd
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

38 ~
PmtAnd
();

41 ˛as†
	cPmtN™d
 : 
public
 
Pmt
 {

42 
public
:

43 
PmtN™d
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

44 ~
PmtN™d
();

47 ˛as†
	cPmtOr
 : 
public
 
Pmt
 {

48 
public
:

49 
PmtOr
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

50 ~
PmtOr
();

53 ˛as†
	cPmtN‹
 : 
public
 
Pmt
 {

54 
public
:

55 
PmtN‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

56 ~
PmtN‹
();

59 ˛as†
	cPmtInv
 : 
public
 
Pmt
 {

60 
public
:

61 
PmtInv
(c⁄° * c⁄° 
«me
);

62 ~
PmtInv
();

65 ˛as†
	cPmtBuf
 : 
public
 
Pmt
 {

66 
public
:

67 
PmtBuf
(c⁄° * c⁄° 
«me
);

68 ~
PmtBuf
();

71 ˛as†
	cPmtBufz
 : 
public
 
Pmt
 {

72 
public
:

73 
PmtBufz
(c⁄° * c⁄° 
«me
);

74 ~
PmtBufz
();

77 ˛as†
	cPmtX‹
 : 
public
 
Pmt
 {

78 
public
:

79 
PmtX‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

80 ~
PmtX‹
();

83 ˛as†
	cPmtXn‹
 : 
public
 
Pmt
 {

84 
public
:

85 
PmtXn‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

86 ~
PmtXn‹
();

89 ˛as†
	cPmtT¶
 : 
public
 
Pmt
 {

90 
public
:

91 
PmtT¶
(c⁄° * c⁄° 
«me
);

92 ~
PmtT¶
();

95 ˛as†
	cPmtT¶i
 : 
public
 
Pmt
 {

96 
public
:

97 
PmtT¶i
(c⁄° * c⁄° 
«me
);

98 ~
PmtT¶i
();

101 ˛as†
	cPmtTsh
 : 
public
 
Pmt
 {

102 
public
:

103 
PmtTsh
(c⁄° * c⁄° 
«me
);

104 ~
PmtTsh
();

107 ˛as†
	cPmtTshi
 : 
public
 
Pmt
 {

108 
public
:

109 
PmtTshi
(c⁄° * c⁄° 
«me
);

110 ~
PmtTshi
();

113 ˛as†
	cPmtMux
 : 
public
 
Pmt
 {

114 
public
:

115 
PmtMux
(c⁄° * c⁄° 
«me
);

116 ~
PmtMux
();

119 ˛as†
	cPmtDff
 : 
public
 
Pmt
 {

120 
public
:

121 
PmtDff
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nClk
 = 1);

122 ~
PmtDff
();

125 ˛as†
	cPmtDœt
 : 
public
 
Pmt
 {

126 
public
:

127 
PmtDœt
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nClk
 = 1);

128 ~
PmtDœt
();

131 ˛as†
	cPmtDñay
 : 
public
 
Pmt
 {

132 
public
:

133 
PmtDñay
(c⁄° * c⁄° 
«me
);

134 ~
PmtDñay
();

137 ˛as†
	cPmtInvf
 : 
public
 
Pmt
 {

138 
public
:

139 
PmtInvf
(c⁄° * c⁄° 
«me
);

140 ~
PmtInvf
();

143 ˛as†
	cPmtWúe
 : 
public
 
Pmt
 {

144 
public
:

145 
PmtWúe
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

146 ~
PmtWúe
();

149 ˛as†
	cPmtPuŒ
 : 
public
 
Pmt
 {

150 
public
:

151 
PmtPuŒ
(c⁄° * c⁄° 
«me
);

152 ~
PmtPuŒ
();

155 ˛as†
	cPmtTõ1
 : 
public
 
Pmt
 {

156 
public
:

157 
PmtTõ1
(c⁄° * c⁄° 
«me
);

158 ~
PmtTõ1
();

161 ˛as†
	cPmtTõ0
 : 
public
 
Pmt
 {

162 
public
:

163 
PmtTõ0
(c⁄° * c⁄° 
«me
);

164 ~
PmtTõ0
();

167 ˛as†
	cPmtTõX
 : 
public
 
Pmt
 {

168 
public
:

169 
PmtTõX
(c⁄° * c⁄° 
«me
);

170 ~
PmtTõX
();

173 ˛as†
	cPmtTõZ
 : 
public
 
Pmt
 {

174 
public
:

175 
PmtTõZ
(c⁄° * c⁄° 
«me
);

176 ~
PmtTõZ
();

179 ˛as†
	cPmtUndeföed
 : 
public
 
Pmt
 {

180 
public
:

181 
PmtUndeföed
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
);

182 ~
PmtUndeföed
();

185 ˛as†
	cPmtNmos
 : 
public
 
Pmt
 {

186 
public
:

187 
PmtNmos
(c⁄° * c⁄° 
«me
);

188 ~
PmtNmos
();

191 ˛as†
	cPmtPmos
 : 
public
 
Pmt
 {

192 
public
:

193 
PmtPmos
(c⁄° * c⁄° 
«me
);

194 ~
PmtPmos
();

197 ˛as†
	cPmtRnmos
 : 
public
 
Pmt
 {

198 
public
:

199 
PmtRnmos
(c⁄° * c⁄° 
«me
);

200 ~
PmtRnmos
();

203 ˛as†
	cPmtRpmos
 : 
public
 
Pmt
 {

204 
public
:

205 
PmtRpmos
(c⁄° * c⁄° 
«me
);

206 ~
PmtRpmos
();

209 ˛as†
	cPmtNmosf
 : 
public
 
Pmt
 {

210 
public
:

211 
PmtNmosf
(c⁄° * c⁄° 
«me
);

212 ~
PmtNmosf
();

215 ˛as†
	cPmtPmosf
 : 
public
 
Pmt
 {

216 
public
:

217 
PmtPmosf
(c⁄° * c⁄° 
«me
);

218 ~
PmtPmosf
();

221 ˛as†
	cPmtCmos1
 : 
public
 
Pmt
 {

222 
public
:

223 
PmtCmos1
(c⁄° * c⁄° 
«me
);

224 ~
PmtCmos1
();

227 ˛as†
	cPmtCmos2
 : 
public
 
Pmt
 {

228 
public
:

229 
PmtCmos2
(c⁄° * c⁄° 
«me
);

230 ~
PmtCmos2
();

233 ˛as†
	cPmtRcmos1
 : 
public
 
Pmt
 {

234 
public
:

235 
PmtRcmos1
(c⁄° * c⁄° 
«me
);

236 ~
PmtRcmos1
();

239 ˛as†
	cPmtRcmos2
 : 
public
 
Pmt
 {

240 
public
:

241 
PmtRcmos2
(c⁄° * c⁄° 
«me
);

242 ~
PmtRcmos2
();

245 ˛as†
	cPmtCmos1f
 : 
public
 
Pmt
 {

246 
public
:

247 
PmtCmos1f
(c⁄° * c⁄° 
«me
);

248 ~
PmtCmos1f
();

251 ˛as†
	cPmtCmos2f
 : 
public
 
Pmt
 {

252 
public
:

253 
PmtCmos2f
(c⁄° * c⁄° 
«me
);

254 ~
PmtCmos2f
();

260 
ölöe
 
	gPmt
::
	$Pmt
(c⁄° * c⁄° 
«me
Ë: 
	$Cñl
(
«me
) {

261 
ty≥_
 = 
NA
;

262 
isPmt_
 = 
åue
;

263 
	}
}

264 
ölöe
 
	gPmt
::~
	$Pmt
(Ë{
	}
}

268 
ölöe
 
PmtAnd
::
	$PmtAnd
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

269 
	$Pmt
(
«me
) {

270 
ty≥_
 = 
AND
;

271 
	`°r˝y
(
ty≥Name_
, "AND");

273 
≤ame
[
NAME_LEN
];

274 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

275 
	`•rötf
(
≤ame
, "IN %d", ()
i
);

276 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

277 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

278 
	`addP‹t
(
ö
);

280 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

281 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

282 
	`addP‹t
(
out
);

283 
	}
}

285 
ölöe
 
	gPmtAnd
::~
	$PmtAnd
(Ë{
	}
}

288 
ölöe
 
PmtN™d
::
	$PmtN™d
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

289 
	$Pmt
(
«me
) {

290 
ty≥_
 = 
NAND
;

291 
	`°r˝y
(
ty≥Name_
, "NAND");

293 
≤ame
[
NAME_LEN
];

294 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

295 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

296 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

297 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

298 
	`addP‹t
(
ö
);

300 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

301 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

302 
	`addP‹t
(
out
);

303 
	}
}

305 
ölöe
 
	gPmtN™d
::~
	$PmtN™d
(Ë{
	}
}

308 
ölöe
 
PmtOr
::
	$PmtOr
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

309 
	$Pmt
(
«me
) {

310 
ty≥_
 = 
OR
;

311 
	`°r˝y
(
ty≥Name_
, "OR");

313 
≤ame
[
NAME_LEN
];

314 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

315 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

316 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

317 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

318 
	`addP‹t
(
ö
);

320 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

321 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

322 
	`addP‹t
(
out
);

323 
	}
}

325 
ölöe
 
	gPmtOr
::~
	$PmtOr
(Ë{
	}
}

328 
ölöe
 
PmtN‹
::
	$PmtN‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

329 
	$Pmt
(
«me
) {

330 
ty≥_
 = 
NOR
;

331 
	`°r˝y
(
ty≥Name_
, "NOR");

333 
≤ame
[
NAME_LEN
];

334 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

335 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

336 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

337 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

338 
	`addP‹t
(
ö
);

340 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

341 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

342 
	`addP‹t
(
out
);

343 
	}
}

345 
ölöe
 
	gPmtN‹
::~
	$PmtN‹
(Ë{
	}
}

348 
ölöe
 
PmtInv
::
	$PmtInv
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

349 
ty≥_
 = 
INV
;

350 
	`°r˝y
(
ty≥Name_
, "INV");

352 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

353 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

354 
	`addP‹t
(
ö
);

355 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

356 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

357 
	`addP‹t
(
out
);

358 
	}
}

360 
ölöe
 
	gPmtInv
::~
	$PmtInv
(Ë{
	}
}

363 
ölöe
 
PmtBuf
::
	$PmtBuf
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

364 
ty≥_
 = 
BUF
;

365 
	`°r˝y
(
ty≥Name_
, "BUF");

367 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

368 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

369 
	`addP‹t
(
ö
);

370 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

371 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

372 
	`addP‹t
(
out
);

373 
	}
}

375 
ölöe
 
	gPmtBuf
::~
	$PmtBuf
(Ë{
	}
}

378 
ölöe
 
PmtBufz
::
	$PmtBufz
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

379 
ty≥_
 = 
BUFZ
;

380 
	`°r˝y
(
ty≥Name_
, "BUFZ");

382 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

383 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

384 
	`addP‹t
(
ö
);

385 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

386 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

387 
	`addP‹t
(
out
);

388 
	}
}

390 
ölöe
 
	gPmtBufz
::~
	$PmtBufz
(Ë{
	}
}

393 
ölöe
 
PmtX‹
::
	$PmtX‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

394 
	$Pmt
(
«me
) {

395 
ty≥_
 = 
XOR
;

396 
	`°r˝y
(
ty≥Name_
, "XOR");

398 
≤ame
[
NAME_LEN
];

399 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

400 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

401 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

402 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

403 
	`addP‹t
(
ö
);

405 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

406 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

407 
	`addP‹t
(
out
);

408 
	}
}

410 
ölöe
 
	gPmtX‹
::~
	$PmtX‹
(Ë{
	}
}

413 
ölöe
 
PmtXn‹
::
	$PmtXn‹
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

414 
	$Pmt
(
«me
) {

415 
ty≥_
 = 
XNOR
;

416 
	`°r˝y
(
ty≥Name_
, "XNOR");

418 
≤ame
[
NAME_LEN
];

419 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

420 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

421 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

422 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

423 
	`addP‹t
(
ö
);

425 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

426 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

427 
	`addP‹t
(
out
);

428 
	}
}

430 
ölöe
 
	gPmtXn‹
::~
	$PmtXn‹
(Ë{
	}
}

433 
ölöe
 
PmtT¶
::
	$PmtT¶
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

434 
ty≥_
 = 
TSL
;

435 
	`°r˝y
(
ty≥Name_
, "TSL");

437 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

438 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

439 
	`addP‹t
(
ö
);

440 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

441 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

442 
	`addP‹t
(
˙t
);

443 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

444 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

445 
	`addP‹t
(
out
);

446 
	}
}

448 
ölöe
 
	gPmtT¶
::~
	$PmtT¶
(Ë{
	}
}

451 
ölöe
 
PmtT¶i
::
	$PmtT¶i
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

452 
ty≥_
 = 
TSLI
;

453 
	`°r˝y
(
ty≥Name_
, "TSLI");

455 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

456 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

457 
	`addP‹t
(
ö
);

458 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

459 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

460 
	`addP‹t
(
˙t
);

461 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

462 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

463 
	`addP‹t
(
out
);

464 
	}
}

466 
ölöe
 
	gPmtT¶i
::~
	$PmtT¶i
(Ë{
	}
}

469 
ölöe
 
PmtTsh
::
	$PmtTsh
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

470 
ty≥_
 = 
TSH
;

471 
	`°r˝y
(
ty≥Name_
, "TSH");

473 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

474 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

475 
	`addP‹t
(
ö
);

476 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

477 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

478 
	`addP‹t
(
˙t
);

479 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

480 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

481 
	`addP‹t
(
out
);

482 
	}
}

484 
ölöe
 
	gPmtTsh
::~
	$PmtTsh
(Ë{
	}
}

487 
ölöe
 
PmtTshi
::
	$PmtTshi
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

488 
ty≥_
 = 
TSHI
;

489 
	`°r˝y
(
ty≥Name_
, "TSHI");

491 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

492 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

493 
	`addP‹t
(
ö
);

494 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

495 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

496 
	`addP‹t
(
˙t
);

497 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

498 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

499 
	`addP‹t
(
out
);

500 
	}
}

502 
ölöe
 
	gPmtTshi
::~
	$PmtTshi
(Ë{
	}
}

505 
ölöe
 
PmtMux
::
	$PmtMux
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

506 
ty≥_
 = 
MUX
;

507 
	`°r˝y
(
ty≥Name_
, "MUX");

509 
P‹t
 *
ö0
 = 
√w
 
	`P‹t
("IN0");

510 
ö0
->
ty≥_
 = 
P‹t
::
INPUT
;

511 
	`addP‹t
(
ö0
);

512 
P‹t
 *
ö1
 = 
√w
 
	`P‹t
("IN1");

513 
ö1
->
ty≥_
 = 
P‹t
::
INPUT
;

514 
	`addP‹t
(
ö1
);

515 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

516 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

517 
	`addP‹t
(
˙t
);

518 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

519 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

520 
	`addP‹t
(
out
);

521 
	}
}

523 
ölöe
 
	gPmtMux
::~
	$PmtMux
(Ë{
	}
}

526 
ölöe
 
PmtDff
::
	$PmtDff
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nClk
)

527 : 
	$Pmt
(
«me
) {

528 
ty≥_
 = 
DFF
;

529 
	`°r˝y
(
ty≥Name_
, "DFF");

531 
P‹t
 *
£t
 = 
√w
 
	`P‹t
("SET");

532 
£t
->
ty≥_
 = 
P‹t
::
INPUT
;

533 
	`addP‹t
(
£t
);

534 
P‹t
 *
ª£t
 = 
√w
 
	`P‹t
("RESET");

535 
ª£t
->
ty≥_
 = 
P‹t
::
INPUT
;

536 
	`addP‹t
(
ª£t
);

537 
≤ame
[
NAME_LEN
];

538 
size_t
 
i
 = 0; i < 
nClk
; ++i) {

539 
	`•rötf
(
≤ame
, "CLK%d", ()
i
);

540 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

541 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

542 
	`addP‹t
(
ö
);

543 
	`•rötf
(
≤ame
, "D%d", ()
i
);

544 
ö
 = 
√w
 
	`P‹t
(
≤ame
);

545 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

546 
	`addP‹t
(
ö
);

548 
P‹t
 *
q
 = 
√w
 
	`P‹t
("Q");

549 
q
->
ty≥_
 = 
P‹t
::
OUTPUT
;

550 
	`addP‹t
(
q
);

551 
P‹t
 *
qn
 = 
√w
 
	`P‹t
("QN");

552 
qn
->
ty≥_
 = 
P‹t
::
OUTPUT
;

553 
	`addP‹t
(
qn
);

554 
	}
}

556 
ölöe
 
	gPmtDff
::~
	$PmtDff
(Ë{
	}
}

559 
ölöe
 
PmtDœt
::
	$PmtDœt
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nClk
)

560 : 
	$Pmt
(
«me
) {

561 
ty≥_
 = 
DLAT
;

562 
	`°r˝y
(
ty≥Name_
, "DLAT");

564 
P‹t
 *
£t
 = 
√w
 
	`P‹t
("SET");

565 
£t
->
ty≥_
 = 
P‹t
::
INPUT
;

566 
	`addP‹t
(
£t
);

567 
P‹t
 *
ª£t
 = 
√w
 
	`P‹t
("RESET");

568 
ª£t
->
ty≥_
 = 
P‹t
::
INPUT
;

569 
	`addP‹t
(
ª£t
);

570 
≤ame
[
NAME_LEN
];

571 
size_t
 
i
 = 0; i < 
nClk
; ++i) {

572 
	`•rötf
(
≤ame
, "CLK%d", ()
i
);

573 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

574 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

575 
	`addP‹t
(
ö
);

576 
	`•rötf
(
≤ame
, "D%d", ()
i
);

577 
ö
 = 
√w
 
	`P‹t
(
≤ame
);

578 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

579 
	`addP‹t
(
ö
);

581 
P‹t
 *
q
 = 
√w
 
	`P‹t
("Q");

582 
q
->
ty≥_
 = 
P‹t
::
OUTPUT
;

583 
	`addP‹t
(
q
);

584 
P‹t
 *
qn
 = 
√w
 
	`P‹t
("QN");

585 
qn
->
ty≥_
 = 
P‹t
::
OUTPUT
;

586 
	`addP‹t
(
qn
);

587 
	}
}

589 
ölöe
 
	gPmtDœt
::~
	$PmtDœt
(Ë{
	}
}

592 
ölöe
 
PmtDñay
::
	$PmtDñay
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

593 
ty≥_
 = 
DELAY
;

594 
	`°r˝y
(
ty≥Name_
, "DELAY");

596 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

597 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

598 
	`addP‹t
(
ö
);

599 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

600 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

601 
	`addP‹t
(
out
);

602 
	}
}

604 
ölöe
 
	gPmtDñay
::~
	$PmtDñay
(Ë{
	}
}

607 
ölöe
 
PmtInvf
::
	$PmtInvf
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

608 
ty≥_
 = 
INVF
;

609 
	`°r˝y
(
ty≥Name_
, "INVF");

611 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

612 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

613 
	`addP‹t
(
ö
);

614 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

615 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

616 
	`addP‹t
(
out
);

617 
	}
}

619 
ölöe
 
	gPmtInvf
::~
	$PmtInvf
(Ë{
	}
}

622 
ölöe
 
PmtWúe
::
	$PmtWúe
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

623 
	$Pmt
(
«me
) {

624 
ty≥_
 = 
WIRE
;

625 
	`°r˝y
(
ty≥Name_
, "WIRE");

627 
≤ame
[
NAME_LEN
];

628 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

629 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

630 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

631 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

632 
	`addP‹t
(
ö
);

634 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

635 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

636 
	`addP‹t
(
out
);

637 
	}
}

639 
ölöe
 
	gPmtWúe
::~
	$PmtWúe
(Ë{
	}
}

642 
ölöe
 
PmtPuŒ
::
	$PmtPuŒ
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

643 
ty≥_
 = 
PULL
;

644 
	`°r˝y
(
ty≥Name_
, "PULL");

646 
P‹t
 *
ö
 = 
√w
 
	`P‹t
("IN");

647 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

648 
	`addP‹t
(
ö
);

649 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

650 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

651 
	`addP‹t
(
out
);

652 
	}
}

654 
ölöe
 
	gPmtPuŒ
::~
	$PmtPuŒ
(Ë{
	}
}

657 
ölöe
 
PmtTõ1
::
	$PmtTõ1
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

658 
ty≥_
 = 
TIE1
;

659 
	`°r˝y
(
ty≥Name_
, "TIE1");

661 
P‹t
 *
out
 = 
√w
 
	`P‹t
("out");

662 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

663 
	`addP‹t
(
out
);

664 
	}
}

666 
ölöe
 
	gPmtTõ1
::~
	$PmtTõ1
(Ë{
	}
}

669 
ölöe
 
PmtTõ0
::
	$PmtTõ0
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

670 
ty≥_
 = 
TIE0
;

671 
	`°r˝y
(
ty≥Name_
, "TIE0");

673 
P‹t
 *
out
 = 
√w
 
	`P‹t
("out");

674 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

675 
	`addP‹t
(
out
);

676 
	}
}

678 
ölöe
 
	gPmtTõ0
::~
	$PmtTõ0
(Ë{
	}
}

681 
ölöe
 
PmtTõX
::
	$PmtTõX
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

682 
ty≥_
 = 
TIEX
;

683 
	`°r˝y
(
ty≥Name_
, "TIEX");

685 
P‹t
 *
out
 = 
√w
 
	`P‹t
("out");

686 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

687 
	`addP‹t
(
out
);

688 
	}
}

690 
ölöe
 
	gPmtTõX
::~
	$PmtTõX
(Ë{
	}
}

693 
ölöe
 
PmtTõZ
::
	$PmtTõZ
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

694 
ty≥_
 = 
TIEZ
;

695 
	`°r˝y
(
ty≥Name_
, "TIEZ");

697 
P‹t
 *
out
 = 
√w
 
	`P‹t
("out");

698 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

699 
	`addP‹t
(
out
);

700 
	}
}

702 
ölöe
 
	gPmtTõZ
::~
	$PmtTõZ
(Ë{
	}
}

705 
ölöe
 
PmtUndeföed
::
	$PmtUndeföed
(c⁄° * c⁄° 
«me
, c⁄° 
size_t
 &
nIn
) :

706 
	$Pmt
(
«me
) {

707 
ty≥_
 = 
UNDEF
;

708 
	`°r˝y
(
ty≥Name_
, "UNDEF");

710 
≤ame
[
NAME_LEN
];

711 
size_t
 
i
 = 0; i < 
nIn
; ++i) {

712 
	`•rötf
(
≤ame
, "IN%d", ()
i
);

713 
P‹t
 *
ö
 = 
√w
 
	`P‹t
(
≤ame
);

714 
ö
->
ty≥_
 = 
P‹t
::
INPUT
;

715 
	`addP‹t
(
ö
);

717 
P‹t
 *
out
 = 
√w
 
	`P‹t
("OUT");

718 
out
->
ty≥_
 = 
P‹t
::
OUTPUT
;

719 
	`addP‹t
(
out
);

720 
	}
}

722 
ölöe
 
	gPmtUndeföed
::~
	$PmtUndeföed
(Ë{
	}
}

725 
ölöe
 
PmtNmos
::
	$PmtNmos
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

726 
ty≥_
 = 
NMOS
;

727 
	`°r˝y
(
ty≥Name_
, "NMOS");

729 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

730 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

731 
	`addP‹t
(
i
);

732 
P‹t
 *
í
 = 
√w
 
	`P‹t
("EN");

733 
í
->
ty≥_
 = 
P‹t
::
INPUT
;

734 
	`addP‹t
(
í
);

735 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

736 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

737 
	`addP‹t
(
o
);

738 
	}
}

740 
ölöe
 
	gPmtNmos
::~
	$PmtNmos
(Ë{
	}
}

743 
ölöe
 
PmtPmos
::
	$PmtPmos
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

744 
ty≥_
 = 
PMOS
;

745 
	`°r˝y
(
ty≥Name_
, "PMOS");

747 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

748 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

749 
	`addP‹t
(
i
);

750 
P‹t
 *
í
 = 
√w
 
	`P‹t
("EN");

751 
í
->
ty≥_
 = 
P‹t
::
INPUT
;

752 
	`addP‹t
(
í
);

753 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

754 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

755 
	`addP‹t
(
o
);

756 
	}
}

758 
ölöe
 
	gPmtPmos
::~
	$PmtPmos
(Ë{
	}
}

761 
ölöe
 
PmtRnmos
::
	$PmtRnmos
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

762 
ty≥_
 = 
RNMOS
;

763 
	`°r˝y
(
ty≥Name_
, "RNMOS");

765 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

766 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

767 
	`addP‹t
(
i
);

768 
P‹t
 *
í
 = 
√w
 
	`P‹t
("EN");

769 
í
->
ty≥_
 = 
P‹t
::
INPUT
;

770 
	`addP‹t
(
í
);

771 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

772 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

773 
	`addP‹t
(
o
);

774 
	}
}

776 
ölöe
 
	gPmtRnmos
::~
	$PmtRnmos
(Ë{
	}
}

779 
ölöe
 
PmtRpmos
::
	$PmtRpmos
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

780 
ty≥_
 = 
RPMOS
;

781 
	`°r˝y
(
ty≥Name_
, "RPMOS");

783 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

784 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

785 
	`addP‹t
(
i
);

786 
P‹t
 *
p˙t
 = 
√w
 
	`P‹t
("PCNT");

787 
p˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

788 
	`addP‹t
(
p˙t
);

789 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

790 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

791 
	`addP‹t
(
o
);

792 
	}
}

794 
ölöe
 
	gPmtRpmos
::~
	$PmtRpmos
(Ë{
	}
}

797 
ölöe
 
PmtNmosf
::
	$PmtNmosf
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

798 
ty≥_
 = 
NMOSF
;

799 
	`°r˝y
(
ty≥Name_
, "NMOSF");

801 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

802 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

803 
	`addP‹t
(
i
);

804 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

805 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

806 
	`addP‹t
(
˙t
);

807 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

808 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

809 
	`addP‹t
(
o
);

810 
	}
}

812 
ölöe
 
	gPmtNmosf
::~
	$PmtNmosf
(Ë{
	}
}

815 
ölöe
 
PmtPmosf
::
	$PmtPmosf
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

816 
ty≥_
 = 
PMOSF
;

817 
	`°r˝y
(
ty≥Name_
, "PMOSF");

819 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

820 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

821 
	`addP‹t
(
i
);

822 
P‹t
 *
˙t
 = 
√w
 
	`P‹t
("CNT");

823 
˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

824 
	`addP‹t
(
˙t
);

825 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

826 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

827 
	`addP‹t
(
o
);

828 
	}
}

830 
ölöe
 
	gPmtPmosf
::~
	$PmtPmosf
(Ë{
	}
}

833 
ölöe
 
PmtCmos1
::
	$PmtCmos1
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

834 
ty≥_
 = 
CMOS1
;

835 
	`°r˝y
(
ty≥Name_
, "CMOS1");

837 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

838 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

839 
	`addP‹t
(
i
);

840 
P‹t
 *
e
 = 
√w
 
	`P‹t
("E");

841 
e
->
ty≥_
 = 
P‹t
::
INPUT
;

842 
	`addP‹t
(
e
);

843 
P‹t
 *
p
 = 
√w
 
	`P‹t
("P");

844 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

845 
	`addP‹t
(
p
);

846 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

847 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

848 
	`addP‹t
(
o
);

849 
	}
}

851 
ölöe
 
	gPmtCmos1
::~
	$PmtCmos1
(Ë{
	}
}

854 
ölöe
 
PmtCmos2
::
	$PmtCmos2
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

855 
ty≥_
 = 
CMOS2
;

856 
	`°r˝y
(
ty≥Name_
, "CMOS2");

858 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

859 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

860 
	`addP‹t
(
i
);

861 
P‹t
 *
e
 = 
√w
 
	`P‹t
("E");

862 
e
->
ty≥_
 = 
P‹t
::
INPUT
;

863 
	`addP‹t
(
e
);

864 
P‹t
 *
p
 = 
√w
 
	`P‹t
("P");

865 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

866 
	`addP‹t
(
p
);

867 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

868 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

869 
	`addP‹t
(
o
);

870 
	}
}

872 
ölöe
 
	gPmtCmos2
::~
	$PmtCmos2
(Ë{
	}
}

875 
ölöe
 
PmtRcmos1
::
	$PmtRcmos1
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

876 
ty≥_
 = 
RCMOS1
;

877 
	`°r˝y
(
ty≥Name_
, "RCMOS1");

879 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

880 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

881 
	`addP‹t
(
i
);

882 
P‹t
 *
e
 = 
√w
 
	`P‹t
("E");

883 
e
->
ty≥_
 = 
P‹t
::
INPUT
;

884 
	`addP‹t
(
e
);

885 
P‹t
 *
p
 = 
√w
 
	`P‹t
("P");

886 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

887 
	`addP‹t
(
p
);

888 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

889 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

890 
	`addP‹t
(
o
);

891 
	}
}

893 
ölöe
 
	gPmtRcmos1
::~
	$PmtRcmos1
(Ë{
	}
}

896 
ölöe
 
PmtRcmos2
::
	$PmtRcmos2
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

897 
ty≥_
 = 
RCMOS2
;

898 
	`°r˝y
(
ty≥Name_
, "RCMOS2");

900 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

901 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

902 
	`addP‹t
(
i
);

903 
P‹t
 *
e
 = 
√w
 
	`P‹t
("E");

904 
e
->
ty≥_
 = 
P‹t
::
INPUT
;

905 
	`addP‹t
(
e
);

906 
P‹t
 *
p
 = 
√w
 
	`P‹t
("P");

907 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

908 
	`addP‹t
(
p
);

909 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

910 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

911 
	`addP‹t
(
o
);

912 
	}
}

914 
ölöe
 
	gPmtRcmos2
::~
	$PmtRcmos2
(Ë{
	}
}

917 
ölöe
 
PmtCmos1f
::
	$PmtCmos1f
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

918 
ty≥_
 = 
CMOS1F
;

919 
	`°r˝y
(
ty≥Name_
, "CMOS1F");

921 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

922 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

923 
	`addP‹t
(
i
);

924 
P‹t
 *
n˙t
 = 
√w
 
	`P‹t
("NCNT");

925 
n˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

926 
	`addP‹t
(
n˙t
);

927 
P‹t
 *
p˙t
 = 
√w
 
	`P‹t
("PCNT");

928 
p˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

929 
	`addP‹t
(
p˙t
);

930 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

931 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

932 
	`addP‹t
(
o
);

933 
	}
}

935 
ölöe
 
	gPmtCmos1f
::~
	$PmtCmos1f
(Ë{
	}
}

938 
ölöe
 
PmtCmos2f
::
	$PmtCmos2f
(c⁄° * c⁄° 
«me
Ë: 
	$Pmt
(
«me
) {

939 
ty≥_
 = 
CMOS2F
;

940 
	`°r˝y
(
ty≥Name_
, "CMOS2F");

942 
P‹t
 *
i
 = 
√w
 
	`P‹t
("I");

943 
i
->
ty≥_
 = 
P‹t
::
INPUT
;

944 
	`addP‹t
(
i
);

945 
P‹t
 *
n˙t
 = 
√w
 
	`P‹t
("NCNT");

946 
n˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

947 
	`addP‹t
(
n˙t
);

948 
P‹t
 *
p˙t
 = 
√w
 
	`P‹t
("PCNT");

949 
p˙t
->
ty≥_
 = 
P‹t
::
INPUT
;

950 
	`addP‹t
(
p˙t
);

951 
P‹t
 *
o
 = 
√w
 
	`P‹t
("O");

952 
o
->
ty≥_
 = 
P‹t
::
OUTPUT
;

953 
	`addP‹t
(
o
);

954 
	}
}

956 
ölöe
 
	gPmtCmos2f
::~
	$PmtCmos2f
(Ë{
	}
}

	@interface/src/sdf_file.cpp

8 
	~<c°dio
>

10 
	~"sdf_fûe.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
boﬁ
 
	gSdfFûe
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

16 
	`sdf_fûï¨£
(*);

17 
FILE
 *
sdf_fûeö
;

19 
vîbo£_
 = 
vîbo£
;

20 
sdf_fûeö
 = 
	`f›í
(
‚ame
, "r");

21 i‡(!
sdf_fûeö
) {

22 
	`Ârötf
(
°dîr
, "**ERROR SdfFile::read(): cannot openÇetlist file");

23 
	`Ârötf
(
°dîr
, "`%s'\n", 
‚ame
);

24  
Ál£
;

27 
suc˚ss_
 = 
åue
;

28 
ªs
 = 
	`sdf_fûï¨£
(
this
);

29 i‡(
ªs
 != 0) {

30 
	`Ârötf
(
°dîr
, "**ERROR SdfFile::read(): wrong input format\n");

31  
Ál£
;

33 
	`f˛o£
(
sdf_fûeö
);

35  
suc˚ss_
;

36 
	}
}

38 
boﬁ
 
	gSdfFûe
::
	$addVîsi⁄
(c⁄° * c⁄° 
vîsi⁄
) {

39 i‡(
vîbo£_
)

40 
	`¥ötf
("add vîsi⁄: %s\n", 
vîsi⁄
);

41  
åue
;

42 
	}
}

44 
boﬁ
 
	gSdfFûe
::
	$addDesign
(c⁄° * c⁄° 
design
) {

45 i‡(
vîbo£_
)

46 
	`¥ötf
("add design: %s\n", 
design
);

47  
åue
;

48 
	}
}

50 
boﬁ
 
	gSdfFûe
::
	$addD©e
(c⁄° * c⁄° 
d©e
) {

51 i‡(
vîbo£_
)

52 
	`¥ötf
("add d©e: %s\n", 
d©e
);

53  
åue
;

54 
	}
}

56 
boﬁ
 
	gSdfFûe
::
	$addVíd‹
(c⁄° * c⁄° 
víd‹
) {

57 i‡(
vîbo£_
)

58 
	`¥ötf
("add víd‹: %s\n", 
víd‹
);

59  
åue
;

60 
	}
}

62 
boﬁ
 
	gSdfFûe
::
	$addProgName
(c⁄° * c⁄° 
«me
) {

63 i‡(
vîbo£_
)

64 
	`¥ötf
("addÖrogømÇame: %s\n", 
«me
);

65  
åue
;

66 
	}
}

68 
boﬁ
 
	gSdfFûe
::
	$addProgVîsi⁄
(c⁄° * c⁄° 
vîsi⁄
) {

69 i‡(
vîbo£_
)

70 
	`¥ötf
("addÖrogøm vîsi⁄: %s\n", 
vîsi⁄
);

71  
åue
;

72 
	}
}

74 
boﬁ
 
	gSdfFûe
::
	$addHõrCh¨
(c⁄° &
hõr
) {

75 i‡(
vîbo£_
)

76 
	`¥ötf
("add hõ∏ch¨: %c\n", 
hõr
);

77  
åue
;

78 
	}
}

80 
boﬁ
 
	gSdfFûe
::
	$addVﬁège
(c⁄° 
SdfVÆue
 &
vﬁt
) {

81 i‡(
vîbo£_
) {

82 
	`¥ötf
("add voltages:");

83 
i
 = 0; i < 
vﬁt
.
n
; ++i)

84 
	`¥ötf
(" %f", 
vﬁt
.
v
[
i
]);

85 
	`¥ötf
("\n");

87  
åue
;

88 
	}
}

90 
boﬁ
 
	gSdfFûe
::
	$addPro˚ss
(c⁄° * c⁄° 
¥oc
) {

91 i‡(
vîbo£_
)

92 
	`¥ötf
("addÖro˚ss: %s\n", 
¥oc
);

93  
åue
;

94 
	}
}

96 
boﬁ
 
	gSdfFûe
::
	$addTem≥øtuª
(c⁄° 
SdfVÆue
 &
ãmp
) {

97 i‡(
vîbo£_
) {

98 
	`¥ötf
("addÅemperature:");

99 
i
 = 0; i < 
ãmp
.
n
; ++i)

100 
	`¥ötf
(" %f", 
ãmp
.
v
[
i
]);

101 
	`¥ötf
("\n");

103  
åue
;

104 
	}
}

106 
boﬁ
 
	gSdfFûe
::
	$addTimeSˇÀ
(c⁄° &
num
, c⁄° * c⁄° 
unô
) {

107 i‡(
vîbo£_
)

108 
	`¥ötf
("addÅimêsˇÀ: %‡%s\n", 
num
, 
unô
);

109  
åue
;

110 
	}
}

112 
boﬁ
 
	gSdfFûe
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
) {

113 i‡(
vîbo£_
)

114 
	`¥ötf
("add cñl: %†%s\n", 
ty≥
, 
«me
);

115  
åue
;

116 
	}
}

118 
boﬁ
 
	gSdfFûe
::
	$addIoDñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
, c⁄° 
SdfP‹tS≥c
 &
•ec
,

119 c⁄° * c⁄° 
p‹t
, c⁄° 
SdfDñayVÆueLi°
 &
v
) {

120 i‡(
vîbo£_
) {

121 
	`¥ötf
("add io delay: ");

122 i‡(
ty≥
 =
DELAY_ABSOLUTE
)

123 
	`¥ötf
("ABSOLUTE ");

125 
	`¥ötf
("INCREMENT ");

126 
•ec
.
ty≥
) {

127 
SdfP‹tS≥c
::
EDGE_NA
:

129 
SdfP‹tS≥c
::
EDGE_01
:

130 
	`¥ötf
("edge 01 ");

132 
SdfP‹tS≥c
::
EDGE_10
:

133 
	`¥ötf
("edge 10 ");

135 
SdfP‹tS≥c
::
EDGE_0Z
:

136 
	`¥ötf
("edge 0Z ");

138 
SdfP‹tS≥c
::
EDGE_Z1
:

139 
	`¥ötf
("edge Z1 ");

141 
SdfP‹tS≥c
::
EDGE_1Z
:

142 
	`¥ötf
("edge 1Z ");

144 
SdfP‹tS≥c
::
EDGE_Z0
:

145 
	`¥ötf
("edge Z0 ");

148 
	`¥ötf
("%†", 
•ec
.
p‹t
);

149 
	`¥ötf
("%†", 
p‹t
);

150 
i
 = 0; i < 
v
.
n
; ++i) {

151 
	`¥ötf
("{");

152 
j
 = 0; j < 
v
.v[
i
].
n
; ++j) {

153 
	`¥ötf
("(");

154 
k
 = 0; k < 
v
.v[
i
].v[
j
].
n
; ++k)

155 
	`¥ötf
("%‡", 
v
.v[
i
].v[
j
].v[
k
]);

156 
	`¥ötf
(") ");

158 
	`¥ötf
("} ");

160 
	`¥ötf
("\n");

162  
åue
;

163 
	}
}

165 
boﬁ
 
	gSdfFûe
::
	$addIoRëaö
(c⁄° 
SdfDñayTy≥
 &
ty≥
, c⁄° 
SdfP‹tS≥c
 &
•ec
,

166 c⁄° * c⁄° 
p‹t
, c⁄° 
SdfDñayVÆueLi°
 &
v
) {

167 i‡(
vîbo£_
) {

168 
	`¥ötf
("add ioÑetain: ");

169 i‡(
ty≥
 =
DELAY_ABSOLUTE
)

170 
	`¥ötf
("ABSOLUTE ");

172 
	`¥ötf
("INCREMENT ");

173 
•ec
.
ty≥
) {

174 
SdfP‹tS≥c
::
EDGE_NA
:

176 
SdfP‹tS≥c
::
EDGE_01
:

177 
	`¥ötf
("edge 01 ");

179 
SdfP‹tS≥c
::
EDGE_10
:

180 
	`¥ötf
("edge 10 ");

182 
SdfP‹tS≥c
::
EDGE_0Z
:

183 
	`¥ötf
("edge 0Z ");

185 
SdfP‹tS≥c
::
EDGE_Z1
:

186 
	`¥ötf
("edge Z1 ");

188 
SdfP‹tS≥c
::
EDGE_1Z
:

189 
	`¥ötf
("edge 1Z ");

191 
SdfP‹tS≥c
::
EDGE_Z0
:

192 
	`¥ötf
("edge Z0 ");

195 
	`¥ötf
("%†", 
•ec
.
p‹t
);

196 
	`¥ötf
("%†", 
p‹t
);

197 
i
 = 0; i < 
v
.
n
; ++i) {

198 
	`¥ötf
("{");

199 
j
 = 0; j < 
v
.v[
i
].
n
; ++j) {

200 
	`¥ötf
("(");

201 
k
 = 0; k < 
v
.v[
i
].v[
j
].
n
; ++k)

202 
	`¥ötf
("%‡", 
v
.v[
i
].v[
j
].v[
k
]);

203 
	`¥ötf
(") ");

205 
	`¥ötf
("} ");

207 
	`¥ötf
("\n");

209  
åue
;

210 
	}
}

212 
boﬁ
 
	gSdfFûe
::
	$addP‹tDñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
, c⁄° * c⁄° 
p‹t
,

213 c⁄° 
SdfDñayVÆueLi°
 &
v
) {

214 i‡(
vîbo£_
) {

215 
	`¥ötf
("addÖort delay: ");

216 i‡(
ty≥
 =
DELAY_ABSOLUTE
)

217 
	`¥ötf
("ABSOLUTE ");

219 
	`¥ötf
("INCREMENT ");

220 
	`¥ötf
("%†", 
p‹t
);

221 
i
 = 0; i < 
v
.
n
; ++i) {

222 
	`¥ötf
("{");

223 
j
 = 0; j < 
v
.v[
i
].
n
; ++j) {

224 
	`¥ötf
("(");

225 
k
 = 0; k < 
v
.v[
i
].v[
j
].
n
; ++k)

226 
	`¥ötf
("%‡", 
v
.v[
i
].v[
j
].v[
k
]);

227 
	`¥ötf
(") ");

229 
	`¥ötf
("} ");

231 
	`¥ötf
("\n");

233  
åue
;

234 
	}
}

236 
boﬁ
 
	gSdfFûe
::
	$addI¡îc⁄√˘Dñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

237 c⁄° * c⁄° 
‰om
,

238 c⁄° * c⁄° 
to
,

239 c⁄° 
SdfDñayVÆueLi°
 &
v
) {

240 i‡(
vîbo£_
) {

241 
	`¥ötf
("add interconnect delay: ");

242 i‡(
ty≥
 =
DELAY_ABSOLUTE
)

243 
	`¥ötf
("ABSOLUTE ");

245 
	`¥ötf
("INCREMENT ");

246 
	`¥ötf
("%†tÿ%†", 
‰om
, 
to
);

247 
i
 = 0; i < 
v
.
n
; ++i) {

248 
	`¥ötf
("{");

249 
j
 = 0; j < 
v
.v[
i
].
n
; ++j) {

250 
	`¥ötf
("(");

251 
k
 = 0; k < 
v
.v[
i
].v[
j
].
n
; ++k)

252 
	`¥ötf
("%‡", 
v
.v[
i
].v[
j
].v[
k
]);

253 
	`¥ötf
(") ");

255 
	`¥ötf
("} ");

257 
	`¥ötf
("\n");

259  
åue
;

260 
	}
}

262 
boﬁ
 
	gSdfFûe
::
	$addDevi˚Dñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
, c⁄° * c⁄° 
dev
,

263 c⁄° 
SdfDñayVÆueLi°
 &
v
) {

264 i‡(
vîbo£_
) {

265 
	`¥ötf
("add device delay: ");

266 i‡(
ty≥
 =
DELAY_ABSOLUTE
)

267 
	`¥ötf
("ABSOLUTE ");

269 
	`¥ötf
("INCREMENT ");

270 
	`¥ötf
("%†", 
dev
);

271 
i
 = 0; i < 
v
.
n
; ++i) {

272 
	`¥ötf
("{");

273 
j
 = 0; j < 
v
.v[
i
].
n
; ++j) {

274 
	`¥ötf
("(");

275 
k
 = 0; k < 
v
.v[
i
].v[
j
].
n
; ++k)

276 
	`¥ötf
("%‡", 
v
.v[
i
].v[
j
].v[
k
]);

277 
	`¥ötf
(") ");

279 
	`¥ötf
("} ");

281 
	`¥ötf
("\n");

283  
åue
;

284 
	}
}

	@interface/src/sdf_file.h

9 #i‚de‡
_INTF_SDF_FILE_H_


10 
	#_INTF_SDF_FILE_H_


	)

12 
	~"globÆ.h
"

14 
«me•a˚
 
	gI¡fNs
 {

16 
	eSdfDñayTy≥
 { 
	gDELAY_ABSOLUTE
, 
	gDELAY_INCREMENT
 };

18 
	sSdfP‹tS≥c
 {

19 
	eEdgeTy≥
 { 
	gEDGE_NA
, 
	gEDGE_01
, 
	gEDGE_10
, 
	gEDGE_0Z
, 
	gEDGE_Z1
,

20 
	gEDGE_1Z
, 
	gEDGE_Z0
 };

22 
EdgeTy≥
 
	gty≥
;

23 
	gp‹t
[
NAME_LEN
];

26 
	sSdfIoP©h
 {

27 
	gö
[
NAME_LEN
];

28 
	gout
[
NAME_LEN
];

31 
	sSdfVÆue
 {

32 
	gn
;

33 
	gv
[3];

36 
	sSdfDñayVÆue
 {

37 
	gn
;

38 
SdfVÆue
 
	gv
[3];

41 
	sSdfDñayVÆueLi°
 {

42 
	gn
;

43 
SdfDñayVÆue
 
	gv
[12];

46 
	sSdfDñayDef
 {

47 
	eTy≥
 { 
	gIO_DELAY
, 
	gIO_RETAIN
, 
	gPORT_DELAY
, 
	gINTER_DELAY
,

48 
	gDEVICE_DELAY
 };

49 
Ty≥
 
	gty≥
;

50 
SdfP‹tS≥c
 
	gp•ec
;

51 
	gp1
[
NAME_LEN
];

52 
	gp2
[
NAME_LEN
];

53 
SdfDñayVÆueLi°
 
	gvli°
;

54 
SdfDñayDef
 *
	g√xt
;

55 
SdfDñayDef
 *
	ghód
;

58 ˛as†
	cSdfFûe
 {

59 
	gpublic
:

60 
SdfFûe
();

61 
	gvútuÆ
 ~
SdfFûe
();

62 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

64 
vútuÆ
 
boﬁ
 
addVîsi⁄
(c⁄° * c⁄° 
vîsi⁄
);

65 
vútuÆ
 
boﬁ
 
addD©e
(c⁄° * c⁄° 
d©e
);

66 
vútuÆ
 
boﬁ
 
addDesign
(c⁄° * c⁄° 
design
);

67 
vútuÆ
 
boﬁ
 
addVíd‹
(c⁄° * c⁄° 
víd‹
);

68 
vútuÆ
 
boﬁ
 
addProgName
(c⁄° * c⁄° 
«me
);

69 
vútuÆ
 
boﬁ
 
addProgVîsi⁄
(c⁄° * c⁄° 
vîsi⁄
);

70 
vútuÆ
 
boﬁ
 
addHõrCh¨
(c⁄° &
hõr
);

71 
vútuÆ
 
boﬁ
 
addVﬁège
(c⁄° 
SdfVÆue
 &
vﬁt
);

72 
vútuÆ
 
boﬁ
 
addPro˚ss
(c⁄° * c⁄° 
c
);

73 
vútuÆ
 
boﬁ
 
addTem≥øtuª
(c⁄° 
SdfVÆue
 &
ãmp
);

74 
vútuÆ
 
boﬁ
 
addTimeSˇÀ
(c⁄° &
num
, c⁄° * c⁄° 
unô
);

75 
vútuÆ
 
boﬁ
 
addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
);

76 
vútuÆ
 
boﬁ
 
addIoDñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

77 c⁄° 
SdfP‹tS≥c
 &
•ec
,

78 c⁄° * c⁄° 
p‹t
,

79 c⁄° 
SdfDñayVÆueLi°
 &
v
);

80 
vútuÆ
 
boﬁ
 
addIoRëaö
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

81 c⁄° 
SdfP‹tS≥c
 &
•ec
,

82 c⁄° * c⁄° 
p‹t
,

83 c⁄° 
SdfDñayVÆueLi°
 &
v
);

84 
vútuÆ
 
boﬁ
 
addP‹tDñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

85 c⁄° * c⁄° 
p‹t
,

86 c⁄° 
SdfDñayVÆueLi°
 &
v
);

87 
vútuÆ
 
boﬁ
 
addI¡îc⁄√˘Dñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

88 c⁄° * c⁄° 
‰om
,

89 c⁄° * c⁄° 
to
,

90 c⁄° 
SdfDñayVÆueLi°
 &
v
);

91 
vútuÆ
 
boﬁ
 
addDevi˚Dñay
(c⁄° 
SdfDñayTy≥
 &
ty≥
,

92 c⁄° * c⁄° 
dev
,

93 c⁄° 
SdfDñayVÆueLi°
 &
v
);

94 
	g¥Ÿe˘ed
:

95 
boﬁ
 
suc˚ss_
;

96 
boﬁ
 
	gvîbo£_
;

99 
ölöe
 
	gSdfFûe
::
	$SdfFûe
(Ë{
	}
}

100 
ölöe
 
SdfFûe
::~
	$SdfFûe
(Ë{
	}
}

102 
ölöe
 
	$sdfVÆueC›y
(
SdfVÆue
 &
v1
, SdfVÆuê&
v2
) {

103 
v1
.
n
 = 
v2
.n;

104 
v1
.
v
[0] = 
v2
.v[0];

105 
v1
.
v
[1] = 
v2
.v[1];

106 
v1
.
v
[2] = 
v2
.v[2];

107 
	}
}

109 
ölöe
 
	$sdfDñayVÆueC›y
(
SdfDñayVÆue
 &
v1
, SdfDñayVÆuê&
v2
) {

110 
v1
.
n
 = 
v2
.n;

111 
	`sdfVÆueC›y
(
v1
.
v
[0], 
v2
.v[0]);

112 
	`sdfVÆueC›y
(
v1
.
v
[1], 
v2
.v[1]);

113 
	`sdfVÆueC›y
(
v1
.
v
[2], 
v2
.v[2]);

114 
	}
}

116 
ölöe
 
	$sdfDñayVÆueLi°C›y
(
SdfDñayVÆueLi°
 &
v1
,

117 
SdfDñayVÆueLi°
 &
v2
) {

118 
v1
.
n
 = 
v2
.n;

119 
i
 = 0; i < 12; ++i)

120 
	`sdfDñayVÆueC›y
(
v1
.
v
[
i
], 
v2
.v[i]);

121 
	}
}

	@interface/src/sdf_test.cpp

8 
	~<c°dio
>

9 
	~<c°dlib
>

11 
	~"sdf_fûe.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
	$maö
(
¨gc
, **
¨gv
) {

18 i‡(
¨gc
 < 2) {

19 
	`Ârötf
(
°dîr
, "**ERROR main():ÖleaseÖrovide input verilog\n");

20 
	`exô
(0);

23 
SdfFûe
 *
sdf
 = 
√w
 SdfFile;

24 i‡(!
sdf
->
	`ªad
(
¨gv
[1], 
åue
)) {

25 
	`Ârötf
(
°dîr
, "**ERROR main(): SDFÖarser failed\n");

26 
	`exô
(0);

29 
dñëe
 
sdf
;

32 
	}
}

	@interface/src/techlib.cpp

8 
	~<iom™ù
>

9 
	~<Æg‹ôhm
>

11 
	~"ãchlib.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
boﬁ
 
	gTechlib
::
	$check
(c⁄° 
boﬁ
 &
vîbo£
) const {

18 
boﬁ
 
ªs
 = 
åue
;

19 
size_t
 
i
 = 0; i < 
	`gëNCñl
(); ++i) {

20 
Cñl
 *
c
 = 
˚Œs_
[
i
];

22 
size_t
 
i
 = 0; i < 
c
->
	`gëNP‹t
(); ++i) {

23 
P‹t
 *
p
 = 
c
->
	`gëP‹t
(
i
);

24 i‡(
p
->
ty≥_
 =
P‹t
::
NA
) {

25 i‡(
vîbo£
) {

26 
	`Ârötf
(
°dîr
, "**WARN Techlib::check():Öort ");

27 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
p
->name_);

28 
	`Ârötf
(
°dîr
, "hasÇoÅype\n");

31 i‡(
p
->
t›_
 !
c
) {

32 
ªs
 = 
Ál£
;

33 i‡(
vîbo£
) {

34 i‡(!
p
->
t›_
) {

35 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Öort ");

36 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
p
->name_);

37 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

40 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Öort ");

41 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
p
->name_);

42 
	`Ârötf
(
°dîr
, "has invalidÅop cell ");

43 
	`Ârötf
(
°dîr
, "`%s'\n", 
p
->
t›_
->
«me_
);

47 
Në
 *
n
 = 
p
->
öNë_
;

48 i‡(!
n
) {

49 i‡(
vîbo£
) {

50 
	`Ârötf
(
°dîr
, "**WARN Techlib::check():Öort ");

51 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
p
->name_);

52 
	`Ârötf
(
°dîr
, "unconnected\n");

55 i‡(!
c
->
	`gëNë
(
n
->
«me_
)) {

56 
ªs
 = 
Ál£
;

57 i‡(
vîbo£
) {

58 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Öort ");

59 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
p
->name_);

60 
	`Ârötf
(
°dîr
, "connectedÅo invalidÇet ");

61 
	`Ârötf
(
°dîr
, "`%s'\n", 
n
->
«me_
);

66 
size_t
 
i
 = 0; i < 
c
->
	`gëNNë
(); ++i) {

67 
Në
 *
n
 = 
c
->
	`gëNë
(
i
);

68 i‡(
n
->
	`gëNP‹t
() < 2) {

69 
ªs
 = 
Ál£
;

70 i‡(
vîbo£
) {

71 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Çet ");

72 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
n
->name_);

73 
	`Ârötf
(
°dîr
, "is floating\n");

76 i‡(
n
->
t›_
 !
c
) {

77 
ªs
 = 
Ál£
;

78 i‡(
vîbo£
) {

79 i‡(!
n
->
t›_
) {

80 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Çet ");

81 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
n
->name_);

82 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

85 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Çet ");

86 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
n
->name_);

87 
	`Ârötf
(
°dîr
, "has invalidÅop cell ");

88 
	`Ârötf
(
°dîr
, "`%s'\n", 
n
->
t›_
->
«me_
);

92 
size_t
 
j
 = 0; j < 
n
->
	`gëNP‹t
(); ++j) {

93 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(
j
);

94 i‡((
p
->
t›_
 !
n
->t›_ &&Ö->
exNë_
 !=Ç)

95 || (
p
->
t›_
 =
n
->t›_ &&Ö->
öNë_
 !=Ç)) {

96 
ªs
 = 
Ál£
;

97 i‡(
vîbo£
) {

98 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Çet ");

99 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
c
->
«me_
, 
n
->name_);

100 
	`Ârötf
(
°dîr
, "not connectedÅoÖort ");

101 
	`Ârötf
(
°dîr
, "`%s/%s'\n", 
c
->
«me_
, 
p
->name_);

107 
size_t
 
i
 = 0; i < 
c
->
	`gëNCñl
(); ++i) {

108 
Cñl
 *
pmt
 = 
c
->
	`gëCñl
(
i
);

109 i‡(
pmt
->
t›_
 !
c
) {

110 
ªs
 = 
Ál£
;

111 i‡(
vîbo£
) {

112 i‡(!
pmt
->
t›_
) {

113 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check(): ");

114 
	`Ârötf
(
°dîr
, "¥imôivê`%s/", 
c
->
«me_
);

115 
	`Ârötf
(
°dîr
, "%s' ", 
pmt
->
«me_
);

116 
	`Ârötf
(
°dîr
, "hasÇoÅop cell\n");

119 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check(): ");

120 
	`Ârötf
(
°dîr
, "¥imôivê`%s/", 
c
->
«me_
);

121 
	`Ârötf
(
°dîr
, "%s' ", 
pmt
->
«me_
);

122 
	`Ârötf
(
°dîr
, "has invalidÅop cell ");

123 
	`Ârötf
(
°dîr
, "`%s'\n", 
pmt
->
t›_
->
«me_
);

127 
size_t
 
j
 = 0; j < 
pmt
->
	`gëNP‹t
(); ++j) {

128 
P‹t
 *
p
 = 
pmt
->
	`gëP‹t
(
j
);

129 i‡(!
p
->
exNë_
) {

130 i‡(
vîbo£
) {

131 
	`Ârötf
(
°dîr
, "**WARN Techlib::check():Öort ");

132 
	`Ârötf
(
°dîr
, "`%s/%s", 
c
->
«me_
, 
pmt
->name_);

133 
	`Ârötf
(
°dîr
, "/%s' unc⁄√˘ed\n", 
p
->
«me_
);

136 i‡(
p
->
exNë_
->
t›_
 !
c
) {

137 
ªs
 = 
Ál£
;

138 i‡(
vîbo£
) {

139 
	`Ârötf
(
°dîr
, "**ERROR Techlib::check():Öort ");

140 
	`Ârötf
(
°dîr
, "`%s/%s", 
c
->
«me_
, 
pmt
->name_);

141 
	`Ârötf
(
°dîr
, "/%s' ", 
p
->
«me_
);

142 
	`Ârötf
(
°dîr
, "connectedÅo invalidÇet ");

143 
	`Ârötf
(
°dîr
, "`%s'\n", 
p
->
exNë_
->
«me_
);

151  
ªs
;

152 
	}
}

154 
boﬁ
 
	gTechlib
::
	$Àvñize
() {

155 
size_t
 
maxNPmt
 = 0;

156 
size_t
 
i
 = 0; i < 
˚Œs_
.
	`size
(); ++i)

157 i‡(
˚Œs_
[
i
]->
	`gëNCñl
(Ë> 
maxNPmt
)

158 
maxNPmt
 = 
˚Œs_
[
i
]->
	`gëNCñl
();

160 
boﬁ
 
¥o˚s£d
[
maxNPmt
];

161 
boﬁ
 
Àvñized
[
maxNPmt
];

163 
size_t
 
i
 = 0; i < 
˚Œs_
.
	`size
(); ++i) {

164 i‡(
	`hasPmt
(
i
, 
Pmt
::
DFF
Ë|| hasPmt(i, Pmt::
DLAT
))

166 
Cñl
 *
t›
 = 
˚Œs_
[
i
];

168 
size_t
 
j
 = 0; j < 
maxNPmt
; ++j) {

169 
¥o˚s£d
[
j
] = 
Ál£
;

170 
Àvñized
[
j
] = 
Ál£
;

173 
queue
<
Cñl
 *> 
cque
;

176 
size_t
 
j
 = 0; j < 
t›
->
	`gëNP‹t
(); ++j) {

177 
P‹t
 *
p
 = 
t›
->
	`gëP‹t
(
j
);

178 i‡(
p
->
ty≥_
 !
P‹t
::
INPUT
)

180 
CñlSë
 
˚Œs
 = 
t›
->
	`gëP‹tCñls
(
j
);

181 
CñlSë
::
ôî©‹
 
ô
 = 
˚Œs
.
	`begö
();

182  ; 
ô
 !
˚Œs
.
	`íd
(); ++it) {

183 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

185 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

186 
cque
.
	`push
((*
ô
));

191 
size_t
 
i
 = 0; i < 
t›
->
	`gëNCñl
(); ++i) {

192 
Cñl
 *
c
 = 
t›
->
	`gëCñl
(
i
);

193 
boﬁ
 
hasI≈ut
 = 
Ál£
;

194 
size_t
 
j
 = 0; j < 
c
->
	`gëNP‹t
(); ++j) {

195 i‡(
c
->
	`gëP‹t
(
j
)->
ty≥_
 =
P‹t
::
INPUT
) {

196 
hasI≈ut
 = 
åue
;

200 i‡(
hasI≈ut
)

202 
c
->
lvl_
 = 0;

203 
¥o˚s£d
[
i
] = 
åue
;

204 
Àvñized
[
i
] = 
åue
;

205 
CñlSë
 
˚Œs
 = 
t›
->
	`gëF™out
(
i
);

206 
CñlSë
::
ôî©‹
 
ô
 = 
˚Œs
.
	`begö
(); ià!˚Œs.
	`íd
();

207 ++
ô
) {

208 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

210 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

211 
cque
.
	`push
((*
ô
));

215 !
cque
.
	`em±y
()) {

216 
Cñl
 *
c
 = 
cque
.
	`‰⁄t
();

217 
cque
.
	`p›
();

220 
maxLvl
 = 0;

221 
boﬁ
 
ªady
 = 
åue
;

222 
CñlSë
 
fis
 = 
t›
->
	`gëF™ö
(
c
->
id_
);

223 
CñlSë
::
ôî©‹
 
ô
 = 
fis
.
	`begö
(); ià!fis.
	`íd
(); ++it) {

224 i‡(!
Àvñized
[(*
ô
)->
id_
]) {

225 
ªady
 = 
Ál£
;

228 i‡((*
ô
)->
lvl_
 > 
maxLvl
)

229 
maxLvl
 = (*
ô
)->
lvl_
;

231 i‡(!
ªady
) {

232 
cque
.
	`push
(
c
);

237 
c
->
lvl_
 = 
maxLvl
 + 1;

238 
Àvñized
[
c
->
id_
] = 
åue
;

241 
CñlSë
 
fos
 = 
t›
->
	`gëF™out
(
c
->
id_
);

242 
CñlSë
::
ôî©‹
 
ô
 = 
fos
.
	`begö
(); ià!fos.
	`íd
(); ++it) {

243 i‡(
¥o˚s£d
[(*
ô
)->
id_
])

245 
cque
.
	`push
((*
ô
));

246 
¥o˚s£d
[(*
ô
)->
id_
] = 
åue
;

251 
	`°abÀ_s‹t
(
t›
->
	`gëCñls
()->
	`begö
(),Å›->gëCñls()->
	`íd
(),

252 
cmpCñlLvl
);

255 
size_t
 
i
 = 0; i < 
t›
->
	`gëNCñl
(); ++i)

256 
t›
->
	`gëCñl
(
i
)->
id_
 = i;

260  
åue
;

261 
	}
}

	@interface/src/techlib.h

8 #i‚de‡
_INTF_TECHLIB_H_


9 
	#_INTF_TECHLIB_H_


	)

11 
	~<queue
>

13 
	~"¥imôive.h
"

15 
«me•a˚
 
	gI¡fNs
 {

17 ˛as†
	cTechlib
 {

18 
	gpublic
:

19 
Techlib
();

20 ~
Techlib
();

22 
boﬁ
 
addCñl
(
Cñl
 *
c
);

23 
size_t
 
gëNCñl
() const;

24 
Cñl
 *
gëCñl
(c⁄° 
size_t
 &
i
) const;

25 
Cñl
 *
gëCñl
(c⁄° * c⁄° 
«me
) const;

27 
boﬁ
 
hasPmt
(c⁄° 
size_t
 &
i
, c⁄° 
Pmt
::
Ty≥
 &
ty≥
) const;

28 
boﬁ
 
hasPmt
(c⁄° * c⁄° 
«me
, c⁄° 
Pmt
::
Ty≥
 &
ty≥
) const;

30 
boﬁ
 
check
(c⁄° boﬁ &
vîbo£
 = 
Ál£
) const;

31 
boﬁ
 
Àvñize
();

33 
	g¥iv©e
:

34 
CñlVec
 
˚Œs_
;

35 
CñlM≠
 
	g«meToCñl_
;

39 
ölöe
 
	gTechlib
::
	$Techlib
(Ë{
	}
}

41 
ölöe
 
Techlib
::~
	$Techlib
(Ë{
	}
}

43 
ölöe
 
boﬁ
 
Techlib
::
	$addCñl
(
Cñl
 *
c
) {

44 
CñlM≠
::
ôî©‹
 
ô
 = 
«meToCñl_
.
	`föd
(
c
->
«me_
);

45 i‡(
ô
 !
«meToCñl_
.
	`íd
())

46  
Ál£
;

47 
˚Œs_
.
	`push_back
(
c
);

48 
«meToCñl_
[
c
->
«me_
] = c;

49 
c
->
id_
 = 
˚Œs_
.
	`size
() - 1;

50  
åue
;

51 
	}
}

53 
ölöe
 
size_t
 
	gTechlib
::
	$gëNCñl
() const {

54  
˚Œs_
.
	`size
();

55 
	}
}

57 
ölöe
 
Cñl
 *
	gTechlib
::
	$gëCñl
(c⁄° 
size_t
 &
i
) const {

58  
i
 < 
˚Œs_
.
	`size
(Ë? cñls_[i] : 
NULL
;

59 
	}
}

61 
ölöe
 
Cñl
 *
	gTechlib
::
	$gëCñl
(c⁄° * c⁄° 
«me
) const {

62 
CñlM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToCñl_
.
	`föd
(
«me
);

63  
ô
 =
«meToCñl_
.
	`íd
(Ë? 
NULL
 : it->
£c⁄d
;

64 
	}
}

66 
ölöe
 
boﬁ
 
	gTechlib
::
hasPmt
(c⁄° 
size_t
 &
i
, c⁄° 
Pmt
::
Ty≥
 &
ty≥
) const {

67 i‡(
i
 >
˚Œs_
.
size
())

68  
Ál£
;

69 
	g°d
::
queue
<
Cñl
 *> 
cque
;

70 
	gcque
.
push
(
˚Œs_
[
i
]);

71 !
	gcque
.
em±y
()) {

72 
Cñl
 *
	gc
 = 
cque
.
‰⁄t
();

73 
	gcque
.
p›
();

74 
size_t
 
	gj
 = 0; j < 
	gc
->
gëNCñl
(); ++j) {

75 i‡(
	gc
->
gëCñl
(
j
)->
	glibc_
)

76 
	gcque
.
push
(
c
->
gëCñl
(
j
)->
libc_
);

78 i‡(((
	gPmt
 *)
	gc
->
gëCñl
(
j
))->
	gty≥_
 =
ty≥
)

79  
åue
;

82  
	gÁl£
;

85 
ölöe
 
boﬁ
 
	gTechlib
::
hasPmt
(c⁄° * c⁄° 
«me
,

86 c⁄° 
Pmt
::
Ty≥
 &
ty≥
) const {

87 
CñlM≠
::
c⁄°_ôî©‹
 
ô
 = 
«meToCñl_
.
föd
(
«me
);

88 i‡(
	gô
 =
«meToCñl_
.
íd
())

89  
Ál£
;

90  
hasPmt
(
ô
->
£c⁄d
->
id_
, 
ty≥
);

	@interface/src/techlib_builder.cpp

8 
	~"ãchlib_buûdî.h
"

10 
usög
 
«me•a˚
 
	g°d
;

11 
usög
 
«me•a˚
 
	gI¡fNs
;

14 
boﬁ
 
	gMdtLibBuûdî
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

15 i‡(!
MdtFûe
::
	`ªad
(
‚ame
, 
vîbo£
))

16  
Ál£
;

17 i‡(!
	`checkIn°™˚s
())

18  
Ál£
;

19 
	`ªmoveFlﬂtögNës
();

20  
åue
;

21 
	}
}

23 
	gMdtLibBuûdî
::
	$addModñ
(c⁄° * c⁄° 
«me
) {

24 i‡(!
suc˚ss_
)

26 i‡(
lib_
->
	`gëCñl
(
«me
)) {

27 i‡(
vîbo£_
) {

28 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addModel(): cell ");

29 
	`Ârötf
(
°dîr
, "`%s'áÃódyÉxi°s\n", 
«me
);

31 
suc˚ss_
 = 
Ál£
;

34 
curCñl_
 = 
√w
 
	`Cñl
(
«me
);

35 
lib_
->
	`addCñl
(
curCñl_
);

36 
	}
}

38 
	gMdtLibBuûdî
::
	$addP‹ts
(
MdtNames
 * c⁄° 
p‹ts
) {

39 i‡(!
suc˚ss_
)

41 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

42 
p‹t
) {

43 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
p‹t
->
«me
);

44 
p
->
t›_
 = 
curCñl_
;

45 i‡(!
curCñl_
->
	`addP‹t
(
p
)) {

46 i‡(
vîbo£_
) {

47 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPorts():Öort ");

48 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curCñl_
->
«me_
, 
p‹t
->
«me
);

49 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

51 
suc˚ss_
 = 
Ál£
;

54 
p‹t
 =Ö‹t->
√xt
;

56 
	}
}

58 
	gMdtLibBuûdî
::
	$£tI≈utNës
(
MdtNames
 * c⁄° 
√ts
) {

59 i‡(!
suc˚ss_
)

61 i‡(!
	`addP‹tNës
(
√ts
)) {

62 
suc˚ss_
 = 
Ál£
;

65 
MdtNames
 *
√t
 = 
√ts
->
hód
;

66 
√t
) {

67 
P‹t
 *
p
 = 
curCñl_
->
	`gëP‹t
(
√t
->
«me
);

68 
p
->
ty≥_
 = 
P‹t
::
INPUT
;

69 
√t
 =Çë->
√xt
;

71 
	}
}

73 
	gMdtLibBuûdî
::
	$£tOuçutNës
(
MdtNames
 * c⁄° 
√ts
) {

74 i‡(!
suc˚ss_
)

76 i‡(!
	`addP‹tNës
(
√ts
)) {

77 
suc˚ss_
 = 
Ál£
;

80 
MdtNames
 *
√t
 = 
√ts
->
hód
;

81 
√t
) {

82 
P‹t
 *
p
 = 
curCñl_
->
	`gëP‹t
(
√t
->
«me
);

83 
p
->
ty≥_
 = 
P‹t
::
OUTPUT
;

84 
√t
 =Çë->
√xt
;

86 
	}
}

88 
	gMdtLibBuûdî
::
	$£tInoutNës
(
MdtNames
 * c⁄° 
√ts
) {

89 i‡(!
suc˚ss_
)

91 i‡(!
	`addP‹tNës
(
√ts
)) {

92 
suc˚ss_
 = 
Ál£
;

95 
MdtNames
 *
√t
 = 
√ts
->
hód
;

96 
√t
) {

97 
P‹t
 *
p
 = 
curCñl_
->
	`gëP‹t
(
√t
->
«me
);

98 
p
->
ty≥_
 = 
P‹t
::
OUTPUT
;

99 
√t
 =Çë->
√xt
;

101 
	}
}

103 
	gMdtLibBuûdî
::
	$£tI¡înNës
(
MdtNames
 * c⁄° 
√ts
) {

104 i‡(!
suc˚ss_
)

106 
MdtNames
 *
√t
 = 
√ts
->
hód
;

107 
√t
) {

108 
Në
 *
n
 = 
√w
 
	`Në
(
√t
->
«me
);

109 
n
->
t›_
 = 
curCñl_
;

110 i‡(!
curCñl_
->
	`addNë
(
n
)) {

111 i‡(
vîbo£_
) {

112 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::setInternNets(): ");

113 
	`Ârötf
(
°dîr
, "√à`%s/%s' ", 
curCñl_
->
«me_
, 
√t
->
«me
);

114 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

116 
suc˚ss_
 = 
Ál£
;

119 
√t
 =Çë->
√xt
;

121 
	}
}

123 
	gMdtLibBuûdî
::
	$addPrimôive
(c⁄° * c⁄° 
ty≥
,

124 c⁄° * c⁄° 
«me
,

125 
MdtNames
 * c⁄° 
p‹ts
) {

126 i‡(!
suc˚ss_
)

128 
˙ame
[
NAME_LEN
];

129 i‡(!
	`°rcmp
(
«me
, ""))

130 
	`•rötf
(
˙ame
, "LOO%d", ()
curCñl_
->
	`gëNCñl
());

132 
	`°r˝y
(
˙ame
, 
«me
);

133 i‡(
curCñl_
->
	`gëCñl
(
˙ame
)) {

134 i‡(
vîbo£_
) {

135 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPrimitive(): ");

136 
	`Ârötf
(
°dîr
, "¥imôivê`%s/%s' ", 
curCñl_
->
«me_
, 
˙ame
);

137 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

139 
suc˚ss_
 = 
Ál£
;

142 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

143 
size_t
 
p‹tSize
 = 0;

144 
p‹t
) {

145 
p‹tSize
++;

146 
p‹t
 =Ö‹t->
√xt
;

149 
Pmt
 *
pmt
 = 
NULL
;

150 i‡(!
	`°rcmp
(
ty≥
, "_and"))

151 
pmt
 = 
√w
 
	`PmtAnd
(
˙ame
, 
p‹tSize
 - 1);

152 i‡(!
	`°rcmp
(
ty≥
, "_nand"))

153 
pmt
 = 
√w
 
	`PmtN™d
(
˙ame
, 
p‹tSize
 - 1);

154 i‡(!
	`°rcmp
(
ty≥
, "_or"))

155 
pmt
 = 
√w
 
	`PmtOr
(
˙ame
, 
p‹tSize
 - 1);

156 i‡(!
	`°rcmp
(
ty≥
, "_nor"))

157 
pmt
 = 
√w
 
	`PmtN‹
(
˙ame
, 
p‹tSize
 - 1);

158 i‡(!
	`°rcmp
(
ty≥
, "_inv"))

159 
pmt
 = 
√w
 
	`PmtInv
(
˙ame
);

160 i‡(!
	`°rcmp
(
ty≥
, "_buf"))

161 
pmt
 = 
√w
 
	`PmtBuf
(
˙ame
);

162 i‡(!
	`°rcmp
(
ty≥
, "_bufz"))

163 
pmt
 = 
√w
 
	`PmtBufz
(
˙ame
);

164 i‡(!
	`°rcmp
(
ty≥
, "_xor"))

165 
pmt
 = 
√w
 
	`PmtX‹
(
˙ame
, 
p‹tSize
 - 1);

166 i‡(!
	`°rcmp
(
ty≥
, "_xnor"))

167 
pmt
 = 
√w
 
	`PmtXn‹
(
˙ame
, 
p‹tSize
 - 1);

168 i‡(!
	`°rcmp
(
ty≥
, "_tsl"))

169 
pmt
 = 
√w
 
	`PmtT¶
(
˙ame
);

170 i‡(!
	`°rcmp
(
ty≥
, "_tsli"))

171 
pmt
 = 
√w
 
	`PmtT¶i
(
˙ame
);

172 i‡(!
	`°rcmp
(
ty≥
, "_tsh"))

173 
pmt
 = 
√w
 
	`PmtTsh
(
˙ame
);

174 i‡(!
	`°rcmp
(
ty≥
, "_tshi"))

175 
pmt
 = 
√w
 
	`PmtTshi
(
˙ame
);

176 i‡(!
	`°rcmp
(
ty≥
, "_mux"))

177 
pmt
 = 
√w
 
	`PmtMux
(
˙ame
);

178 i‡(!
	`°rcmp
(
ty≥
, "_dff"))

179 
pmt
 = 
√w
 
	`PmtDff
(
˙ame
, (
p‹tSize
 - 4)/2);

180 i‡(!
	`°rcmp
(
ty≥
, "_dlat"))

181 
pmt
 = 
√w
 
	`PmtDœt
(
˙ame
, (
p‹tSize
 - 4)/2);

182 i‡(!
	`°rcmp
(
ty≥
, "_delay"))

183 
pmt
 = 
√w
 
	`PmtDñay
(
˙ame
);

184 i‡(!
	`°rcmp
(
ty≥
, "_invf"))

185 
pmt
 = 
√w
 
	`PmtInvf
(
˙ame
);

186 i‡(!
	`°rcmp
(
ty≥
, "_wire"))

187 
pmt
 = 
√w
 
	`PmtWúe
(
˙ame
, 
p‹tSize
 - 1);

188 i‡(!
	`°rcmp
(
ty≥
, "_pull"))

189 
pmt
 = 
√w
 
	`PmtPuŒ
(
˙ame
);

190 i‡(!
	`°rcmp
(
ty≥
, "_tie1"))

191 
pmt
 = 
√w
 
	`PmtTõ1
(
˙ame
);

192 i‡(!
	`°rcmp
(
ty≥
, "_tie0"))

193 
pmt
 = 
√w
 
	`PmtTõ0
(
˙ame
);

194 i‡(!
	`°rcmp
(
ty≥
, "_tiex"))

195 
pmt
 = 
√w
 
	`PmtTõX
(
˙ame
);

196 i‡(!
	`°rcmp
(
ty≥
, "_tiez"))

197 
pmt
 = 
√w
 
	`PmtTõZ
(
˙ame
);

198 i‡(!
	`°rcmp
(
ty≥
, "_undefined"))

199 
pmt
 = 
√w
 
	`PmtUndeföed
(
˙ame
, 
p‹tSize
 - 1);

200 i‡(!
	`°rcmp
(
ty≥
, "_nmos"))

201 
pmt
 = 
√w
 
	`PmtNmos
(
˙ame
);

202 i‡(!
	`°rcmp
(
ty≥
, "_pmos"))

203 
pmt
 = 
√w
 
	`PmtPmos
(
˙ame
);

204 i‡(!
	`°rcmp
(
ty≥
, "_rnmos"))

205 
pmt
 = 
√w
 
	`PmtRnmos
(
˙ame
);

206 i‡(!
	`°rcmp
(
ty≥
, "_rpmos"))

207 
pmt
 = 
√w
 
	`PmtRpmos
(
˙ame
);

208 i‡(!
	`°rcmp
(
ty≥
, "_nmosf"))

209 
pmt
 = 
√w
 
	`PmtNmosf
(
˙ame
);

210 i‡(!
	`°rcmp
(
ty≥
, "_pmosf"))

211 
pmt
 = 
√w
 
	`PmtPmosf
(
˙ame
);

212 i‡(!
	`°rcmp
(
ty≥
, "_cmos1"))

213 
pmt
 = 
√w
 
	`PmtCmos1
(
˙ame
);

214 i‡(!
	`°rcmp
(
ty≥
, "_cmos2"))

215 
pmt
 = 
√w
 
	`PmtCmos2
(
˙ame
);

216 i‡(!
	`°rcmp
(
ty≥
, "_rcmos1"))

217 
pmt
 = 
√w
 
	`PmtRcmos1
(
˙ame
);

218 i‡(!
	`°rcmp
(
ty≥
, "_rcmos2"))

219 
pmt
 = 
√w
 
	`PmtRcmos2
(
˙ame
);

220 i‡(!
	`°rcmp
(
ty≥
, "_cmos1f"))

221 
pmt
 = 
√w
 
	`PmtCmos1f
(
˙ame
);

222 i‡(!
	`°rcmp
(
ty≥
, "_cmos2f"))

223 
pmt
 = 
√w
 
	`PmtCmos2f
(
˙ame
);

225 i‡(!
pmt
) {

226 i‡(
vîbo£_
) {

227 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPrimitive(): ");

228 
	`Ârötf
(
°dîr
, "övÆidÖrimôivê`%s/", 
curCñl_
->
«me_
);

229 
	`Ârötf
(
°dîr
, "%s'\n", 
˙ame
);

231 
suc˚ss_
 = 
Ál£
;

234 
pmt
->
t›_
 = 
curCñl_
;

236 i‡(
p‹tSize
 !
pmt
->
	`gëNP‹t
()) {

237 i‡(
vîbo£_
) {

238 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPrimitive(): ");

239 
	`Ârötf
(
°dîr
, "¥imôivê`%s/%s' ", 
curCñl_
->
«me_
, 
˙ame
);

240 
	`Ârötf
(
°dîr
, "has incorrectÖort size\n");

242 
suc˚ss_
 = 
Ál£
;

246 
curCñl_
->
	`addCñl
(
pmt
);

247 
p‹t
 = 
p‹ts
->
hód
;

248 
size_t
 
p‹tNo
 = 0;

249 
p‹t
) {

250 i‡(
	`°æí
(
p‹t
->
«me
) == 0) {

251 
p‹t
 =Ö‹t->
√xt
;

252 
p‹tNo
++;

255 
P‹t
 *
p
 = 
pmt
->
	`gëP‹t
(
p‹tNo
);

257 
Në
 *
n
 = 
curCñl_
->
	`gëNë
(
p‹t
->
«me
);

258 i‡(!
n
) {

259 i‡(
vîbo£_
) {

260 
	`Ârötf
(
°dîr
, "**WARN MdtLibBuilder::addPrimitive():Çet ");

261 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curCñl_
->
«me_
, 
p‹t
->
«me
);

262 
	`Ârötf
(
°dîr
, "setás wire\n");

264 
n
 = 
√w
 
	`Në
(
p‹t
->
«me
);

265 
n
->
t›_
 = 
curCñl_
;

266 
curCñl_
->
	`addNë
(
n
);

268 
p
->
exNë_
 = 
n
;

269 
n
->
	`addP‹t
(
p
);

271 
p‹t
 =Ö‹t->
√xt
;

272 
p‹tNo
++;

274 
	}
}

276 
	gMdtLibBuûdî
::
	$addIn°™˚
(c⁄° * c⁄° 
ty≥
,

277 c⁄° * c⁄° 
«me
,

278 
MdtNames
 * c⁄° 
p‹ts
) {

279 i‡(!
suc˚ss_
)

281 
˙ame
[
NAME_LEN
];

282 i‡(!
	`°rcmp
(
«me
, ""))

283 
	`•rötf
(
˙ame
, "LOO%d", ()
curCñl_
->
	`gëNCñl
());

285 
	`°r˝y
(
˙ame
, 
«me
);

286 i‡(
curCñl_
->
	`gëCñl
(
˙ame
)) {

287 i‡(
vîbo£_
) {

288 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPrimitive(): ");

289 
	`Ârötf
(
°dîr
, "¥imôivê`%s/%s' ", 
curCñl_
->
«me_
, 
˙ame
);

290 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

292 
suc˚ss_
 = 
Ál£
;

295 
Cñl
 *
c
 = 
√w
 
	`Cñl
(
˙ame
);

296 
c
->
t›_
 = 
curCñl_
;

297 
	`°r˝y
(
c
->
ty≥Name_
, 
ty≥
);

298 
curCñl_
->
	`addCñl
(
c
);

300 
MdtNames
 *
p‹t
 = 
p‹ts
->
hód
;

301 
size_t
 
p‹tNo
 = 0;

302 
≤ame
[
NAME_LEN
];

303 
p‹t
) {

304 
	`•rötf
(
≤ame
, "P%d", ()
p‹tNo
);

305 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
≤ame
);

306 
p
->
t›_
 = 
c
;

307 
c
->
	`addP‹t
(
p
);

309 i‡(
	`°æí
(
p‹t
->
«me
) == 0) {

310 
p‹t
 =Ö‹t->
√xt
;

311 
p‹tNo
++;

315 
Në
 *
n
 = 
curCñl_
->
	`gëNë
(
p‹t
->
«me
);

316 i‡(!
n
) {

317 i‡(
vîbo£_
) {

318 
	`Ârötf
(
°dîr
, "**WARN MdtLibBuilder::addPrimitive():Çet ");

319 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curCñl_
->
«me_
, 
p‹t
->
«me
);

320 
	`Ârötf
(
°dîr
, "setás wire\n");

322 
n
 = 
√w
 
	`Në
(
p‹t
->
«me
);

323 
n
->
t›_
 = 
curCñl_
;

324 
curCñl_
->
	`addNë
(
n
);

326 
p
->
exNë_
 = 
n
;

327 
n
->
	`addP‹t
(
p
);

329 
p‹t
 =Ö‹t->
√xt
;

330 
p‹tNo
++;

332 
	}
}

334 
	gMdtLibBuûdî
::
	$addIn°™˚
(c⁄° * c⁄° 
ty≥
,

335 c⁄° * c⁄° 
«me
,

336 
MdtP‹tToNë
 * c⁄° 
p‹tToNë
) {

337 i‡(!
suc˚ss_
)

339 
˙ame
[
NAME_LEN
];

340 i‡(!
	`°rcmp
(
«me
, ""))

341 
	`•rötf
(
˙ame
, "LOO%d", ()
curCñl_
->
	`gëNCñl
());

343 
	`°r˝y
(
˙ame
, 
«me
);

344 i‡(
curCñl_
->
	`gëCñl
(
˙ame
)) {

345 i‡(
vîbo£_
) {

346 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPrimitive(): ");

347 
	`Ârötf
(
°dîr
, "¥imôivê`%s/%s' ", 
curCñl_
->
«me_
, 
˙ame
);

348 
	`Ârötf
(
°dîr
, "alreadyÉxists\n");

350 
suc˚ss_
 = 
Ál£
;

353 
Cñl
 *
c
 = 
√w
 
	`Cñl
(
˙ame
);

354 
c
->
t›_
 = 
curCñl_
;

355 
	`°r˝y
(
c
->
ty≥Name_
, 
ty≥
);

356 
curCñl_
->
	`addCñl
(
c
);

358 
MdtP‹tToNë
 *
p2n
 = 
p‹tToNë
->
hód
;

359 
p2n
) {

360 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
p2n
->
p‹t
);

361 
p
->
t›_
 = 
c
;

362 
c
->
	`addP‹t
(
p
);

364 
Në
 *
n
 = 
curCñl_
->
	`gëNë
(
p2n
->
√t
);

365 i‡(!
n
) {

366 i‡(
vîbo£_
) {

367 
	`Ârötf
(
°dîr
, "**WARN MdtLibBuilder::addPrimitive():Çet ");

368 
	`Ârötf
(
°dîr
, "`%s/%s' ", 
curCñl_
->
«me_
, 
p2n
->
√t
);

369 
	`Ârötf
(
°dîr
, "setás wire\n");

371 
n
 = 
√w
 
	`Në
(
p2n
->
√t
);

372 
n
->
t›_
 = 
curCñl_
;

373 
curCñl_
->
	`addNë
(
n
);

375 
p
->
exNë_
 = 
n
;

376 
n
->
	`addP‹t
(
p
);

378 
p2n
 =Ö2n->
√xt
;

380 
	}
}

382 
boﬁ
 
	gMdtLibBuûdî
::
	$addP‹tNës
(
MdtNames
 * c⁄° 
√ts
) {

383 
MdtNames
 *
√t
 = 
√ts
->
hód
;

384 
√t
) {

385 
P‹t
 *
p
 = 
curCñl_
->
	`gëP‹t
(
√t
->
«me
);

386 i‡(!
p
) {

387 i‡(
vîbo£_
) {

388 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::addPortNets(): ");

389 
	`Ârötf
(
°dîr
, "p‹à`%s/%s' ", 
curCñl_
->
«me_
, 
√t
->
«me
);

390 
	`Ârötf
(
°dîr
, "doesÇotÉxist\n");

392  
Ál£
;

394 
Në
 *
n
 = 
curCñl_
->
	`gëNë
(
√t
->
«me
);

395 i‡(!
n
) {

396 
n
 = 
√w
 
	`Në
(
√t
->
«me
);

397 
n
->
t›_
 = 
curCñl_
;

398 
curCñl_
->
	`addNë
(
n
);

400 
n
->
	`addP‹t
(
p
);

401 
p
->
öNë_
 = 
n
;

402 
√t
 =Çë->
√xt
;

404  
åue
;

405 
	}
}

407 
boﬁ
 
	gMdtLibBuûdî
::
	$checkIn°™˚s
() {

408 
size_t
 
i
 = 0; i < 
lib_
->
	`gëNCñl
(); ++i) {

409 
Cñl
 *
c
 = 
lib_
->
	`gëCñl
(
i
);

410 
size_t
 
j
 = 0; j < 
c
->
	`gëNCñl
(); ++j) {

411 
Cñl
 *
ö°
 = 
c
->
	`gëCñl
(
j
);

412 i‡(
ö°
->
isPmt_
)

414 
Cñl
 *
ö°c
 = 
lib_
->
	`gëCñl
(
ö°
->
ty≥Name_
);

415 i‡(!
ö°c
) {

416 
	`Ârötf
(
°dîr
, "**ERROR MdtLibBuilder::checkInstances(): ");

417 
	`Ârötf
(
°dîr
, "ö°™˚ `%s' ", 
ö°
->
«me_
);

418 
	`Ârötf
(
°dîr
, "isÇot inÅheÜibrary\n");

419  
Ál£
;

421 
ö°
->
libc_
 = 
ö°c
;

422 
Në
 *
√ts
[
ö°c
->
	`gëNP‹t
()];

423 
size_t
 
k
 = 0; k < 
ö°
->
	`gëNP‹t
(); ++k) {

424 
P‹t
 *
p
 = 
ö°
->
	`gëP‹t
(
k
);

425 i‡(
ö°c
->
	`gëP‹t
(
p
->
«me_
))

426 
√ts
[
ö°c
->
	`gëP‹t
(
p
->
«me_
)->
id_
] =Ö->
exNë_
;

428 
√ts
[
k
] = 
p
->
exNë_
;

429 i‡(
p
->
exNë_
)

430 
p
->
exNë_
->
	`ªmoveP‹t
(p);

431 
dñëe
 
p
;

433 
ö°
->
	`˛órP‹ts
();

434 
size_t
 
k
 = 0; k < 
ö°c
->
	`gëNP‹t
(); ++k) {

435 
P‹t
 *
p
 = 
√w
 
	`P‹t
(
ö°c
->
	`gëP‹t
(
k
)->
«me_
);

436 
p
->
t›_
 = 
c
;

437 
p
->
ty≥_
 = 
ö°c
->
	`gëP‹t
(
k
)->type_;

438 
ö°
->
	`addP‹t
(
p
);

439 
p
->
exNë_
 = 
√ts
[
k
];

440 
√ts
[
k
]->
	`addP‹t
(
p
);

444  
åue
;

445 
	}
}

447 
boﬁ
 
	gMdtLibBuûdî
::
	$ªmoveFlﬂtögNës
() {

448 
size_t
 
i
 = 0; i < 
lib_
->
	`gëNCñl
(); ++i) {

449 
Cñl
 *
c
 = 
lib_
->
	`gëCñl
(
i
);

450 
size_t
 
j
 = 0; j < 
c
->
	`gëNNë
(); ++j) {

451 
Në
 *
n
 = 
c
->
	`gëNë
(
j
);

452 i‡(
n
->
	`gëNP‹t
(Ë< 2 &&Ç->
	`gëNEqv
() == 0) {

453 i‡(
n
->
	`gëNP‹t
() == 1) {

454 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(0);

455 i‡(
p
->
t›_
 =
c
)

456 
p
->
öNë_
 = 
NULL
;

458 
p
->
exNë_
 = 
NULL
;

460 
c
->
	`ªmoveNë
(
j
);

461 
dñëe
 
n
;

462 
j
--;

466  
åue
;

467 
	}
}

	@interface/src/techlib_builder.h

9 #i‚de‡
_INTF_TECHLIB_BUILDER_H_


10 
	#_INTF_TECHLIB_BUILDER_H_


	)

12 
	~"mdt_fûe.h
"

13 
	~"ãchlib.h
"

15 
«me•a˚
 
	gI¡fNs
 {

17 ˛as†
	cMdtLibBuûdî
 : 
public
 
MdtFûe
 {

18 
public
:

19 
MdtLibBuûdî
(
Techlib
 *
lib
);

20 
	gvútuÆ
 ~
MdtLibBuûdî
();

22 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

23 
vútuÆ
 
addModñ
(c⁄° * c⁄° 
«me
);

24 
vútuÆ
 
addP‹ts
(
MdtNames
 * c⁄° 
p‹ts
);

25 
vútuÆ
 
£tI≈utNës
(
MdtNames
 * c⁄° 
√ts
);

26 
vútuÆ
 
£tOuçutNës
(
MdtNames
 * c⁄° 
√ts
);

27 
vútuÆ
 
£tInoutNës
(
MdtNames
 * c⁄° 
√ts
);

28 
vútuÆ
 
£tI¡înNës
(
MdtNames
 * c⁄° 
√ts
);

29 
vútuÆ
 
addPrimôive
(c⁄° * c⁄° 
ty≥
,

30 c⁄° * c⁄° 
«me
,

31 
MdtNames
 * c⁄° 
p‹ts
);

32 
vútuÆ
 
addIn°™˚
(c⁄° * c⁄° 
ty≥
,

33 c⁄° * c⁄° 
«me
,

34 
MdtNames
 * c⁄° 
p‹ts
);

35 
vútuÆ
 
addIn°™˚
(c⁄° * c⁄° 
ty≥
,

36 c⁄° * c⁄° 
«me
,

37 
MdtP‹tToNë
 * c⁄° 
p‹tToNë
);

39 
	g¥Ÿe˘ed
:

40 
boﬁ
 
addP‹tNës
(
MdtNames
 * c⁄° 
√ts
);

41 
boﬁ
 
checkIn°™˚s
();

42 
boﬁ
 
ªmoveFlﬂtögNës
();

43 
Cñl
 *
	gcurCñl_
;

44 
Techlib
 *
	glib_
;

47 
ölöe
 
	gMdtLibBuûdî
::
	$MdtLibBuûdî
(
Techlib
 *
lib
) {

48 
curCñl_
 = 
NULL
;

49 
lib_
 = 
lib
;

50 
	}
}

51 
ölöe
 
	gMdtLibBuûdî
::~
	$MdtLibBuûdî
(Ë{
	}
}

	@interface/src/vlog2pmt.cpp

8 
	~<c°dlib
>

9 
	~<io°ªam
>

10 
	~<f°ªam
>

12 
	~"√éi°_buûdî.h
"

13 
	~"ãchlib_buûdî.h
"

15 
usög
 
«me•a˚
 
	g°d
;

16 
usög
 
«me•a˚
 
	gI¡fNs
;

18 
¥ötCñl
(
Cñl
 *
c
, 
of°ªam
 &
fout
);

19 
¥ötPmt
(
Pmt
 *
pmt
, 
Cñl
 *
c
, 
of°ªam
 &
fout
);

20 
¥ötIn°
(
Cñl
 *
ö°
, Cñ»*
c
, 
of°ªam
 &
fout
);

22 
°rög
 
gëPmtNëName
(
P‹t
 *
p
, 
Pmt
 *
pmt
, 
Cñl
 *
c
);

23 
¥ötDff
(
Cñl
 *
c
, 
of°ªam
 &
fout
);

25 c⁄° 
	ghõr
 = '/';

31 
	$maö
(
¨gc
, **
¨gv
) {

32 i‡(
¨gc
 < 3) {

33 
˚º
 << "**ERROR main():ÇeedÇetlist, MDTÜib";

34 
˚º
 << 
ídl
;

35 
	`exô
(0);

49 
Techlib
 
lib
;

50 
MdtFûe
 *
libBldî
 = 
√w
 
	`MdtLibBuûdî
(&
lib
);

52 
cout
 << "> RódögÅechnﬁogyÜibøry..." << 
ídl
;

53 i‡(!
libBldî
->
	`ªad
(
¨gv
[2], 
åue
)) {

54 
˚º
 << "**ERROR maö(): MDTÜib buûdîÉº‹" << 
ídl
;

55 
dñëe
 
libBldî
;

56 
	`exô
(0);

58 
cout
 << "> CheckögÅechnﬁogyÜibøry..." << 
ídl
;

59 i‡(!
lib
.
	`check
(
åue
)) {

60 
˚º
 << "**ERROR maö(): MDTÜibÉº‹" << 
ídl
;

61 
dñëe
 
libBldî
;

62 
	`exô
(0);

66 
Nëli°
 
∆
;

67 
∆
.
	`£tTechlib
(&
lib
);

68 
VlogFûe
 *
∆Bldî
 = 
√w
 
	`VlogNlBuûdî
(&
∆
);

70 
cout
 << "> RódögÇëli°..." << 
ídl
;

71 i‡(!
∆Bldî
->
	`ªad
(
¨gv
[1], 
åue
)) {

72 
˚º
 << "**ERROR maö(): vîûog buûdîÉº‹" << 
ídl
;

73 
dñëe
 
∆Bldî
;

74 
	`exô
(0);

77 
cout
 << "> Removög flﬂtögÇës..." << 
ídl
;

78 
∆
.
	`ªmoveFlﬂtögNës
();

80 
cout
 << "> CheckögÇëli°..." << 
ídl
;

81 i‡(!
∆
.
	`check
(
åue
)) {

82 
˚º
 << "**ERROR maö():Çëli°Éº‹" << 
ídl
;

83 
dñëe
 
∆Bldî
;

84 
	`exô
(0);

167 
dñëe
 
∆Bldî
;

168 
dñëe
 
libBldî
;

171 
	}
}

174 
	$¥ötCñl
(
Cñl
 *
c
, 
of°ªam
 &
fout
) {

175 
Cñl
 *
libc
 = 
c
->
libc_
;

176 
size_t
 
i
 = 0; i < 
libc
->
	`gëNCñl
(); ++i) {

177 
Cñl
 *
ö
 = 
libc
->
	`gëCñl
(
i
);

178 i‡(
ö
->
isPmt_
)

179 
	`¥ötPmt
((
Pmt
 *)
ö
, 
c
, 
fout
);

181 
	`¥ötIn°
(
ö
, 
c
, 
fout
);

183 
	}
}

186 
	$¥ötPmt
(
Pmt
 *
pmt
, 
Cñl
 *
c
, 
of°ªam
 &
fout
) {

187 
öSize
 = ()
pmt
->
	`gëNP‹t
() - 1;

188 
buf
[8];

189 
pmt
->
ty≥_
) {

190 
Pmt
::
BUF
:

191 
fout
 << "BUFX1";

193 
Pmt
::
INV
:

194 
Pmt
::
INVF
:

195 
fout
 << "INVX1";

197 
Pmt
::
AND
:

198 
fout
 << "AND";

199 
	`•rötf
(
buf
, "%d", 
öSize
);

200 
fout
 << 
buf
 << "X1";

202 
Pmt
::
NAND
:

203 
fout
 << "NAND";

204 
	`•rötf
(
buf
, "%d", 
öSize
);

205 
fout
 << 
buf
 << "X1";

207 
Pmt
::
OR
:

208 
fout
 << "OR";

209 
	`•rötf
(
buf
, "%d", 
öSize
);

210 
fout
 << 
buf
 << "X1";

212 
Pmt
::
NOR
:

213 
fout
 << "NOR";

214 
	`•rötf
(
buf
, "%d", 
öSize
);

215 
fout
 << 
buf
 << "X1";

217 
Pmt
::
XOR
:

218 
fout
 << "XOR";

219 
	`•rötf
(
buf
, "%d", 
öSize
);

220 
fout
 << 
buf
 << "X1";

222 
Pmt
::
XNOR
:

223 
fout
 << "XNOR";

224 
	`•rötf
(
buf
, "%d", 
öSize
);

225 
fout
 << 
buf
 << "X1";

228 
fout
 << "NA";

231 
fout
 << " " << 
c
->
«me_
 << 
hõr
 << 
pmt
->name_ << " (";

233 
size_t
 
j
 = 0; j < 
pmt
->
	`gëNP‹t
(); ++j) {

234 
fout
 << "." << 
pmt
->
	`gëP‹t
(
j
)->
«me_
 << "(";

235 
fout
 << 
	`gëPmtNëName
(
pmt
->
	`gëP‹t
(
j
),Ömt, 
c
) << ")";

236 i‡(
j
 + 1 !
pmt
->
	`gëNP‹t
())

237 
fout
 << ", ";

239 
fout
 << ");" << 
ídl
;

240 
	}
}

242 
	$¥ötIn°
(
Cñl
 *
ö°
, Cñ»*
c
, 
of°ªam
 &
fout
) {

243 
	}
}

246 
°rög
 
	$gëPmtNëName
(
P‹t
 *
p
, 
Pmt
 *
pmt
, 
Cñl
 *
c
) {

247 
Cñl
 *
libc
 = 
c
->
libc_
;

248 
Në
 *
n
 = 
p
->
exNë_
;

249 i‡(!
n
)

251 
boﬁ
 
öã∫
 = 
åue
;

252 
°rög
 
√tName
 = "";

253 
size_t
 
k
 = 0; k < 
n
->
	`gëNP‹t
(); ++k) {

254 
P‹t
 *
p
 = 
n
->
	`gëP‹t
(
k
);

255 i‡(
p
->
t›_
 =
libc
) {

256 i‡(
c
->
	`gëP‹t
(
p
->
«me_
)->
exNë_
)

257 
√tName
 = 
c
->
	`gëP‹t
(
p
->
«me_
)->
exNë_
->name_;

258 
öã∫
 = 
Ál£
;

262 i‡(
öã∫
)

263 
√tName
 = 
	`°rög
(
c
->
«me_
Ë+ 
hõr
 + såög(
n
->name_);

264  
√tName
;

265 
	}
}

267 
	$¥ötDff
(
Cñl
 *
c
, 
of°ªam
 &
fout
) {

268 
fout
 << 
c
->
libc_
->
«me_
 << " " << c->name_ << " (";

269 
boﬁ
 
hasP‹t
 = 
Ál£
;

270 
size_t
 
i
 = 0; i < 
c
->
	`gëNP‹t
(); ++i) {

271 
Në
 *
n
 = 
c
->
	`gëP‹t
(
i
)->
exNë_
;

272 i‡(!
n
)

274 i‡(
hasP‹t
)

275 
fout
 << ", " << 
Êush
;

276 
fout
 << "." << 
c
->
	`gëP‹t
(
i
)->
«me_
 << "(";

277 
fout
 << 
n
->
«me_
 << ")";

278 
hasP‹t
 = 
åue
;

280 
fout
 << ");" << 
ídl
;

281 
	}
}

	@interface/src/vlog_file.cpp

8 
	~<c°dio
>

10 
	~"vlog_fûe.h
"

12 
usög
 
«me•a˚
 
	g°d
;

13 
usög
 
«me•a˚
 
	gI¡fNs
;

15 
boﬁ
 
	gVlogFûe
::
	$ªad
(c⁄° * c⁄° 
‚ame
, c⁄° 
boﬁ
 &
vîbo£
) {

16 
	`vlog_fûï¨£
(*);

17 
FILE
 *
vlog_fûeö
;

19 
vîbo£_
 = 
vîbo£
;

20 
vlog_fûeö
 = 
	`f›í
(
‚ame
, "r");

21 i‡(!
vlog_fûeö
) {

22 
	`Ârötf
(
°dîr
, "**ERROR VlogFile::read(): cannot openÇetlist file");

23 
	`Ârötf
(
°dîr
, "`%s'\n", 
‚ame
);

24  
Ál£
;

27 
suc˚ss_
 = 
åue
;

28 
ªs
 = 
	`vlog_fûï¨£
(
this
);

29 i‡(
ªs
 != 0) {

30 
	`Ârötf
(
°dîr
, "**ERROR VlogFile::read(): wrong input format\n");

31  
Ál£
;

33 
	`f˛o£
(
vlog_fûeö
);

35  
suc˚ss_
;

36 
	}
}

38 
	gVlogFûe
::
	$addModuÀ
(c⁄° * c⁄° 
«me
) {

39 i‡(
vîbo£_
)

40 
	`¥ötf
("add moduÀ: %s\n", 
«me
);

41 
	}
}

43 
	gVlogFûe
::
	$addP‹ts
(
VlogNames
 * c⁄° 
p‹ts
) {

44 i‡(
vîbo£_
) {

45 
	`¥ötf
("addÖorts: ");

46 
VlogNames
 *
p‹t
 = 
p‹ts
->
hód
;

47 
p‹t
) {

48 
	`¥ötf
("%s", 
p‹t
->
«me
);

49 
p‹t
 =Ö‹t->
√xt
;

50 i‡(
p‹t
)

51 
	`¥ötf
(", ");

53 
	`¥ötf
("\n");

55 
	}
}

57 
	gVlogFûe
::
	$£tI≈utNës
(
VlogNames
 * c⁄° 
√ts
) {

58 i‡(
vîbo£_
) {

59 
	`¥ötf
("set inputÇets: ");

60 
VlogNames
 *
√t
 = 
√ts
->
hód
;

61 
√t
) {

62 
	`¥ötf
("%s", 
√t
->
«me
);

63 
√t
 =Çë->
√xt
;

64 i‡(
√t
)

65 
	`¥ötf
(", ");

67 
	`¥ötf
("\n");

69 
	}
}

71 
	gVlogFûe
::
	$£tOuçutNës
(
VlogNames
 * c⁄° 
√ts
) {

72 i‡(
vîbo£_
) {

73 
	`¥ötf
("set outputÇets: ");

74 
VlogNames
 *
√t
 = 
√ts
->
hód
;

75 
√t
) {

76 
	`¥ötf
("%s", 
√t
->
«me
);

77 
√t
 =Çë->
√xt
;

78 i‡(
√t
)

79 
	`¥ötf
(", ");

81 
	`¥ötf
("\n");

83 
	}
}

85 
	gVlogFûe
::
	$£tInoutNës
(
VlogNames
 * c⁄° 
√ts
) {

86 i‡(
vîbo£_
) {

87 
	`¥ötf
("set inoutÇets: ");

88 
VlogNames
 *
√t
 = 
√ts
->
hód
;

89 
√t
) {

90 
	`¥ötf
("%s", 
√t
->
«me
);

91 
√t
 =Çë->
√xt
;

92 i‡(
√t
)

93 
	`¥ötf
(", ");

95 
	`¥ötf
("\n");

97 
	}
}

99 
	gVlogFûe
::
	$£tWúeNës
(
VlogNames
 * c⁄° 
√ts
) {

100 i‡(
vîbo£_
) {

101 
	`¥ötf
("set wireÇets: ");

102 
VlogNames
 *
√t
 = 
√ts
->
hód
;

103 
√t
) {

104 
	`¥ötf
("%s", 
√t
->
«me
);

105 
√t
 =Çë->
√xt
;

106 i‡(
√t
)

107 
	`¥ötf
(", ");

109 
	`¥ötf
("\n");

111 
	}
}

113 
	gVlogFûe
::
	$£tRegNës
(
VlogNames
 * c⁄° 
√ts
) {

114 i‡(
vîbo£_
) {

115 
	`¥ötf
("setÑegÇets: ");

116 
VlogNames
 *
√t
 = 
√ts
->
hód
;

117 
√t
) {

118 
	`¥ötf
("%s", 
√t
->
«me
);

119 
√t
 =Çë->
√xt
;

120 i‡(
√t
)

121 
	`¥ötf
(", ");

123 
	`¥ötf
("\n");

125 
	}
}

127 
	gVlogFûe
::
	$£tSuµlyLNës
(
VlogNames
 * c⁄° 
√ts
) {

128 i‡(
vîbo£_
) {

129 
	`¥ötf
("set supply LÇets: ");

130 
VlogNames
 *
√t
 = 
√ts
->
hód
;

131 
√t
) {

132 
	`¥ötf
("%s", 
√t
->
«me
);

133 
√t
 =Çë->
√xt
;

134 i‡(
√t
)

135 
	`¥ötf
(", ");

137 
	`¥ötf
("\n");

139 
	}
}

141 
	gVlogFûe
::
	$£tSuµlyHNës
(
VlogNames
 * c⁄° 
√ts
) {

142 i‡(
vîbo£_
) {

143 
	`¥ötf
("set supply HÇets: ");

144 
VlogNames
 *
√t
 = 
√ts
->
hód
;

145 
√t
) {

146 
	`¥ötf
("%s", 
√t
->
«me
);

147 
√t
 =Çë->
√xt
;

148 i‡(
√t
)

149 
	`¥ötf
(", ");

151 
	`¥ötf
("\n");

153 
	}
}

155 
	gVlogFûe
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

156 
VlogNames
 * c⁄° 
p‹ts
) {

157 i‡(
vîbo£_
) {

158 
	`¥ötf
("add cñl: %†%†(", 
ty≥
, 
«me
);

159 
VlogNames
 *
p‹t
 = 
p‹ts
->
hód
;

160 
p‹t
) {

161 
	`¥ötf
("%s", 
p‹t
->
«me
);

162 
p‹t
 =Ö‹t->
√xt
;

163 i‡(
p‹t
)

164 
	`¥ötf
(", ");

166 
	`¥ötf
(")\n");

168 
	}
}

170 
	gVlogFûe
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

171 
VlogP‹tToNë
 * c⁄° 
p‹tToNë
) {

172 i‡(
vîbo£_
) {

173 
	`¥ötf
("add cñl: %†%†(", 
ty≥
, 
«me
);

174 
VlogP‹tToNë
 *
p2n
 = 
p‹tToNë
->
hód
;

175 
p2n
) {

176 
	`¥ötf
(".%s(%s)", 
p2n
->
p‹t
,Ö2n->
√t
);

177 
p2n
 =Ö2n->
√xt
;

178 i‡(
p2n
)

179 
	`¥ötf
(", ");

181 
	`¥ötf
(")\n");

183 
	}
}

185 
	gVlogFûe
::
	$addCñl
(c⁄° * c⁄° 
ty≥
, 
VlogNames
 * c⁄° 
°ªngths
,

186 c⁄° * c⁄° 
«me
, 
VlogNames
 * c⁄° 
p‹ts
) {

187 i‡(
vîbo£_
) {

188 
	`¥ötf
("add cñl: %†(", 
ty≥
);

189 
VlogNames
 *
°ªngth
 = 
°ªngths
->
hód
;

190 
°ªngth
) {

191 
	`¥ötf
("%s", 
°ªngth
->
«me
);

192 
°ªngth
 = såígth->
√xt
;

193 i‡(
°ªngth
)

194 
	`¥ötf
(", ");

196 
	`¥ötf
("Ë%s(", 
«me
);

197 
VlogNames
 *
p‹t
 = 
p‹ts
->
hód
;

198 
p‹t
) {

199 
	`¥ötf
("%s", 
p‹t
->
«me
);

200 
p‹t
 =Ö‹t->
√xt
;

201 i‡(
p‹t
)

202 
	`¥ötf
(", ");

204 
	`¥ötf
(")\n");

206 
	}
}

209 
	gVlogFûe
::
	$addAssign
(c⁄° * c⁄° 
n1
, c⁄° * c⁄° 
n2
) {

210 i‡(
vîbo£_
)

211 
	`¥ötf
("addássign: %†%s\n", 
n1
, 
n2
);

212 
	}
}

	@interface/src/vlog_file.h

9 #i‚de‡
_INTF_VLOG_FILE_H_


10 
	#_INTF_VLOG_FILE_H_


	)

12 
	~"globÆ.h
"

14 
«me•a˚
 
	gI¡fNs
 {

16 
	eVlogNëTy≥
 { 
	gVLOG_NET_INPUT
, 
	gVLOG_NET_OUTPUT
, 
	gVLOG_NET_INOUT
,

17 
	gVLOG_NET_WIRE
, 
	gVLOG_NET_REG
, 
	gVLOG_NET_SUPPLY_L
,

18 
	gVLOG_NET_SUPPLY_H
 };

20 
	sVlogNames
 {

21 
	g«me
[
NAME_LEN
];

22 
VlogNames
 *
	g√xt
;

23 
VlogNames
 *
	ghód
;

26 
	sVlogP‹tToNë
 {

27 
	gp‹t
[
NAME_LEN
];

28 
	g√t
[
NAME_LEN
];

29 
VlogP‹tToNë
 *
	g√xt
;

30 
VlogP‹tToNë
 *
	ghód
;

33 ˛as†
	cVlogFûe
 {

34 
	gpublic
:

35 
VlogFûe
();

36 
	gvútuÆ
 ~
VlogFûe
();

38 
vútuÆ
 
boﬁ
 
ªad
(c⁄° * c⁄° 
‚ame
, c⁄° boﬁ &
vîbo£
 = 
Ál£
);

40 
vútuÆ
 
addModuÀ
(c⁄° * c⁄° 
«me
);

41 
vútuÆ
 
addP‹ts
(
VlogNames
 * c⁄° 
p‹ts
);

42 
vútuÆ
 
£tI≈utNës
(
VlogNames
 * c⁄° 
√ts
);

43 
vútuÆ
 
£tOuçutNës
(
VlogNames
 * c⁄° 
√ts
);

44 
vútuÆ
 
£tInoutNës
(
VlogNames
 * c⁄° 
√ts
);

45 
vútuÆ
 
£tWúeNës
(
VlogNames
 * c⁄° 
√ts
);

46 
vútuÆ
 
£tRegNës
(
VlogNames
 * c⁄° 
√ts
);

47 
vútuÆ
 
£tSuµlyLNës
(
VlogNames
 * c⁄° 
√ts
);

48 
vútuÆ
 
£tSuµlyHNës
(
VlogNames
 * c⁄° 
√ts
);

49 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

50 
VlogNames
 * c⁄° 
p‹ts
);

51 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
, c⁄° * c⁄° 
«me
,

52 
VlogP‹tToNë
 * c⁄° 
p‹tToNë
);

53 
vútuÆ
 
addCñl
(c⁄° * c⁄° 
ty≥
,

54 
VlogNames
 * c⁄° 
°ªngths
,

55 c⁄° * c⁄° 
«me
,

56 
VlogNames
 * c⁄° 
p‹ts
);

57 
vútuÆ
 
addAssign
(c⁄° * c⁄° 
n1
, c⁄° * c⁄° 
n2
);

59 
	g¥Ÿe˘ed
:

60 
boﬁ
 
suc˚ss_
;

61 
boﬁ
 
	gvîbo£_
;

64 
ölöe
 
	gVlogFûe
::
	$VlogFûe
() {

65 
suc˚ss_
 = 
åue
;

66 
vîbo£_
 = 
Ál£
;

67 
	}
}

68 
ölöe
 
	gVlogFûe
::~
	$VlogFûe
(Ë{
	}
}

	@interface/src/vlog_test.cpp

8 
	~<c°dio
>

9 
	~<c°dlib
>

11 
	~"vlog_fûe.h
"

13 
usög
 
«me•a˚
 
	g°d
;

14 
usög
 
«me•a˚
 
	gI¡fNs
;

17 
	$maö
(
¨gc
, **
¨gv
) {

18 i‡(
¨gc
 < 2) {

19 
	`Ârötf
(
°dîr
, "**ERROR main():ÖleaseÖrovide input verilog\n");

20 
	`exô
(0);

23 
VlogFûe
 *
vlog
 = 
√w
 VlogFile;

24 i‡(!
vlog
->
	`ªad
(
¨gv
[1], 
åue
)) {

25 
	`Ârötf
(
°dîr
, "**ERROR main(): verilogÖarser failed\n");

26 
	`exô
(0);

29 
dñëe
 
vlog
;

32 
	}
}

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
¨gs

42 
	#__MALLOC_P
(
¨gs
Ë
	)
¨gs

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
¨gs

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1028 #ifde‡
__REDIRECT_NTH


1029 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1030 
·runˇã64
Ë
__wur
;

1032 
	#·runˇã
 
·runˇã64


	)

1035 #ifde‡
__USE_LARGEFILE64


1036 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1043 || 
deföed
 
__USE_MISC


1047 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1053 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1057 #ifde‡
__USE_MISC


1068 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1073 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1085 
	#F_ULOCK
 0

	)

1086 
	#F_LOCK
 1

	)

1087 
	#F_TLOCK
 2

	)

1088 
	#F_TEST
 3

	)

1090 #i‚de‡
__USE_FILE_OFFSET64


1091 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1093 #ifde‡
__REDIRECT


1094 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1095 
lockf64
Ë
__wur
;

1097 
	#lockf
 
lockf64


	)

1100 #ifde‡
__USE_LARGEFILE64


1101 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1106 #ifde‡
__USE_GNU


1111 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1112 (
__exãnsi⁄__
 \

1113 ({ 
__ªsu…
; \

1114 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1115 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1116 
__ªsu…
; 
	}
}))

	)

1119 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1122 
fd©async
 (
__fûdes
);

1128 #ifdef 
__USE_XOPEN


1130 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1135 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1142 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1143 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1151 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1156 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1157 
	~<bôs/uni°d.h
>

1160 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
172
4670
atpg/src/atpg_cmd.cpp
atpg/src/atpg_cmd.h
atpg/src/fan_mgr.h
atpg/src/main.cpp
atpg/src/misc_cmd.cpp
atpg/src/misc_cmd.h
atpg/src/setup_cmd.cpp
atpg/src/setup_cmd.h
common/src/ascii.h
common/src/cmd.cpp
common/src/cmd.h
common/src/common_test.cpp
common/src/get_opt.cpp
common/src/get_opt.h
common/src/sys_cmd.cpp
common/src/sys_cmd.h
common/src/tm_usage.cpp
common/src/tm_usage.h
common/src/vt100.h
core/src/atpg.h
core/src/atpg_mgr.h
core/src/circuit.cpp
core/src/circuit.h
core/src/decision_tree.h
core/src/fault.cpp
core/src/fault.h
core/src/gate.h
core/src/implicator.cpp
core/src/implicator.h
core/src/logic.cpp
core/src/logic.h
core/src/pattern.h
core/src/pattern_rw.cpp
core/src/pattern_rw.h
core/src/simulator.cpp
core/src/simulator.h
interface/lib/dbg/lex_n_yacc/lht_pat_file.tab.cpp
interface/lib/dbg/lex_n_yacc/lht_pat_file.tab.hpp
interface/lib/dbg/lex_n_yacc/lht_pat_file.yy.cpp
interface/lib/dbg/lex_n_yacc/mdt_file.tab.cpp
interface/lib/dbg/lex_n_yacc/mdt_file.tab.hpp
interface/lib/dbg/lex_n_yacc/mdt_file.yy.cpp
interface/lib/dbg/lex_n_yacc/pat_file.tab.cpp
interface/lib/dbg/lex_n_yacc/pat_file.tab.hpp
interface/lib/dbg/lex_n_yacc/pat_file.yy.cpp
interface/lib/dbg/lex_n_yacc/sdf_file.tab.cpp
interface/lib/dbg/lex_n_yacc/sdf_file.tab.hpp
interface/lib/dbg/lex_n_yacc/sdf_file.yy.cpp
interface/lib/dbg/lex_n_yacc/vlog_file.tab.cpp
interface/lib/dbg/lex_n_yacc/vlog_file.tab.hpp
interface/lib/dbg/lex_n_yacc/vlog_file.yy.cpp
interface/src/cell.cpp
interface/src/cell.h
interface/src/global.h
interface/src/lht_pat_file.cpp
interface/src/lht_pat_file.h
interface/src/lht_pat_test.cpp
interface/src/mdt_file.cpp
interface/src/mdt_file.h
interface/src/mdt_test.cpp
interface/src/netlist.cpp
interface/src/netlist.h
interface/src/netlist_builder.cpp
interface/src/netlist_builder.h
interface/src/pat_file.cpp
interface/src/pat_file.h
interface/src/pat_test.cpp
interface/src/primitive.cpp
interface/src/primitive.h
interface/src/sdf_file.cpp
interface/src/sdf_file.h
interface/src/sdf_test.cpp
interface/src/techlib.cpp
interface/src/techlib.h
interface/src/techlib_builder.cpp
interface/src/techlib_builder.h
interface/src/vlog2pmt.cpp
interface/src/vlog_file.cpp
interface/src/vlog_file.h
interface/src/vlog_test.cpp
/usr/include/alloca.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/malloc.h
/usr/include/pwd.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/ioctl.h
/usr/include/sys/resource.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/termios.h
/usr/include/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/locale.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/ioctl.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/sched.h
